.\" Man page generated from reStructuredText.
.
.TH "LOG-ANALYTICS_PARSER_EXTRACT-STRUCTURED-LOG-FIELD-PATHS" "1" "Apr 23, 2025" "3.54.5" "OCI CLI Command Reference"
.SH NAME
log-analytics_parser_extract-structured-log-field-paths \- 
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.IP \(bu 2
\fI\%Example using required parameter\fP
.UNINDENT
.SH DESCRIPTION
.sp
Extracts the field paths from the example json or xml content.
.SH USAGE
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci log\-analytics parser extract\-structured\-log\-field\-paths [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH REQUIRED PARAMETERS
.INDENT 0.0
.TP
.B \-\-namespace\-name [text]
.UNINDENT
.sp
The Logging Analytics namespace used for the request.
.SH OPTIONAL PARAMETERS
.INDENT 0.0
.TP
.B \-\-categories [complex type]
.UNINDENT
.sp
An array of categories assigned to this parser. The isSystem flag denotes if each category assignment is user\-created or Oracle\-defined.
.sp
This option is a JSON list with items of type LogAnalyticsCategory.  For documentation on LogAnalyticsCategory please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/loganalytics/20200601/datatypes/LogAnalyticsCategory\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-content [text]
.UNINDENT
.sp
The content.
.INDENT 0.0
.TP
.B \-\-dependent\-parsers [complex type]
.UNINDENT
.sp
A list of sub parsers used by this parser.
.sp
This option is a JSON list with items of type DependentParser.  For documentation on DependentParser please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/loganalytics/20200601/datatypes/DependentParser\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-dependent\-sources [complex type]
.UNINDENT
.sp
A list of sources that depend on the parser, either directly or indirectly.
.sp
This option is a JSON list with items of type DependentSource.  For documentation on DependentSource please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/loganalytics/20200601/datatypes/DependentSource\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-description [text]
.UNINDENT
.sp
The parser description.
.INDENT 0.0
.TP
.B \-\-display\-name [text]
.UNINDENT
.sp
The parser display name.
.INDENT 0.0
.TP
.B \-\-edit\-version [integer]
.UNINDENT
.sp
The parser edit version.
.INDENT 0.0
.TP
.B \-\-encoding [text]
.UNINDENT
.sp
The encoding.
.INDENT 0.0
.TP
.B \-\-example\-content [text]
.UNINDENT
.sp
The example content.
.INDENT 0.0
.TP
.B \-\-field\-delimiter [text]
.UNINDENT
.sp
The parser field delimiter.
.INDENT 0.0
.TP
.B \-\-field\-maps [complex type]
.UNINDENT
.sp
The parser fields.
.sp
This option is a JSON list with items of type LogAnalyticsParserField.  For documentation on LogAnalyticsParserField please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/loganalytics/20200601/datatypes/LogAnalyticsParserField\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-field\-qualifier [text]
.UNINDENT
.sp
The parser field qualifier.
.INDENT 0.0
.TP
.B \-\-footer\-content [text]
.UNINDENT
.sp
The footer regular expression.
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id –> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our “using CLI with advanced JSON options” link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-header\-content [text]
.UNINDENT
.sp
The header content.
.INDENT 0.0
.TP
.B \-\-is\-default [boolean]
.UNINDENT
.sp
A flag indicating if this is a default parser.
.INDENT 0.0
.TP
.B \-\-is\-hidden [boolean]
.UNINDENT
.sp
A flag indicating if the parser is hidden or not.
.INDENT 0.0
.TP
.B \-\-is\-namespace\-aware [boolean]
.UNINDENT
.sp
A flag indicating whether the XML parser should consider the namespace(s) while processing the log data.
.INDENT 0.0
.TP
.B \-\-is\-parser\-written\-once [boolean]
.UNINDENT
.sp
A flag indicating whther or not the parser is write once.
.INDENT 0.0
.TP
.B \-\-is\-position\-aware [boolean]
.UNINDENT
.sp
A flag indicating whether the parser is positionally aware.
.INDENT 0.0
.TP
.B \-\-is\-single\-line\-content [boolean]
.UNINDENT
.sp
A flag indicating if this is a single line content parser.
.INDENT 0.0
.TP
.B \-\-is\-system [boolean]
.UNINDENT
.sp
The system flag.  A value of false denotes a custom, or user defined object.  A value of true denotes a built in object.
.INDENT 0.0
.TP
.B \-\-is\-user\-deleted [boolean]
.UNINDENT
.sp
A flag indicating whether or not the parser has been deleted.
.INDENT 0.0
.TP
.B \-\-language [text]
.UNINDENT
.sp
The language.
.INDENT 0.0
.TP
.B \-\-log\-type\-test\-request\-version [integer]
.UNINDENT
.sp
The log type test request .
.INDENT 0.0
.TP
.B \-\-mapped\-parsers [complex type]
.UNINDENT
.sp
The mapped parser list.
.sp
This option is a JSON list with items of type LogAnalyticsParser.  For documentation on LogAnalyticsParser please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/loganalytics/20200601/datatypes/LogAnalyticsParser\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-name [text]
.UNINDENT
.sp
The parser name.
.INDENT 0.0
.TP
.B \-\-parser\-filter [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-parser\-functions [complex type]
.UNINDENT
.sp
The parser function list.
.sp
This option is a JSON list with items of type LogAnalyticsParserFunction.  For documentation on LogAnalyticsParserFunction please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/loganalytics/20200601/datatypes/LogAnalyticsParserFunction\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-parser\-ignoreline\-chars [text]
.UNINDENT
.sp
Ignore line characters
.INDENT 0.0
.TP
.B \-\-parser\-sequence [integer]
.UNINDENT
.sp
The parser sequence.
.INDENT 0.0
.TP
.B \-\-parser\-timezone [text]
.UNINDENT
.sp
The time zone.
.INDENT 0.0
.TP
.B \-\-parser\-type [text]
.UNINDENT
.sp
The parser type \- possible values are XML, JSON or DELIMITED.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DELIMITED, JSON, XML
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-sources [complex type]
.UNINDENT
.sp
The list of sources using this parser.
.sp
This option is a JSON list with items of type LogAnalyticsSource.  For documentation on LogAnalyticsSource please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/loganalytics/20200601/datatypes/LogAnalyticsSource\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-sources\-count [integer]
.UNINDENT
.sp
The number of sources using this parser
.INDENT 0.0
.TP
.B \-\-time\-updated [datetime]
.UNINDENT
.sp
The last updated date.
.INDENT 0.0
.INDENT 3.5
The following datetime formats are supported:
.UNINDENT
.UNINDENT
.SS UTC with microseconds
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
Format: YYYY\-MM\-DDTHH:mm:ss.ssssssTZD
Example: 2017\-09\-15T20:30:00.123456Z

UTC with milliseconds
***********************
\&.. code::

    Format: YYYY\-MM\-DDTHH:mm:ss.sssTZD
    Example: 2017\-09\-15T20:30:00.123Z

UTC without milliseconds
**************************
\&.. code::

    Format: YYYY\-MM\-DDTHH:mm:ssTZD
    Example: 2017\-09\-15T20:30:00Z

UTC with minute precision
**************************
\&.. code::

    Format: YYYY\-MM\-DDTHH:mmTZD
    Example: 2017\-09\-15T20:30Z
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Timezone with microseconds
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
Format: YYYY\-MM\-DDTHH:mm:ssTZD
Example: 2017\-09\-15T12:30:00.456789\-08:00, 2017\-09\-15T12:30:00.456789\-0800

Timezone with milliseconds
***************************
\&.. code::

    Format: YYYY\-MM\-DDTHH:mm:ssTZD
    Example: 2017\-09\-15T12:30:00.456\-08:00, 2017\-09\-15T12:30:00.456\-0800

Timezone without milliseconds
*******************************
\&.. code::

    Format: YYYY\-MM\-DDTHH:mm:ssTZD
    Example: 2017\-09\-15T12:30:00\-08:00, 2017\-09\-15T12:30:00\-0800

Timezone with minute precision
*******************************
\&.. code::

    Format: YYYY\-MM\-DDTHH:mmTZD
    Example: 2017\-09\-15T12:30\-08:00, 2017\-09\-15T12:30\-0800

Short date and time
********************
The timezone for this date and time will be taken as UTC (Needs to be surrounded by single or double quotes)

\&.. code::

    Format: \(aqYYYY\-MM\-DD HH:mm\(aq or "YYYY\-MM\-DD HH:mm"
    Example: \(aq2017\-09\-15 17:25\(aq

Date Only
**********
This date will be taken as midnight UTC of that day

\&.. code::

    Format: YYYY\-MM\-DD
    Example: 2017\-09\-15

Epoch seconds
**************
\&.. code::

    Example: 1412195400
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-tokenize\-original\-text [text]
.UNINDENT
.sp
Tokenize original text: true/false
.INDENT 0.0
.TP
.B \-\-type [text]
.UNINDENT
.sp
The parser type. Default value is REGEX.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DELIMITED, JSON, ODL, REGEX, XML
.ft P
.fi
.UNINDENT
.UNINDENT
.SH GLOBAL PARAMETERS
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-auto\-prompt\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-connection\-timeout\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-max\-retries\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-proxy\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-read\-timeout\fP, \fB\-\-realm\-specific\-endpoint\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-i\fP, \fB\-v\fP
.SH EXAMPLE USING REQUIRED PARAMETER
.sp
Copy the following CLI commands into a file named example.sh. Run the command by typing “bash example.sh” and replacing the example parameters with your own.
.sp
Please note this sample will only work in the POSIX\-compliant bash\-like shell. You need to set up \fI\%the OCI configuration\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm#configfile\fP> and \fI\%appropriate security policies\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/Identity/Concepts/policygetstarted.htm\fP> before trying the examples.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    export namespace_name=<substitute\-value\-of\-namespace_name> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/log\-analytics/parser/extract\-structured\-log\-field\-paths.html#cmdoption\-namespace\-name

    oci log\-analytics parser extract\-structured\-log\-field\-paths \-\-namespace\-name $namespace_name
.ft P
.fi
.UNINDENT
.UNINDENT
.SH AUTHOR
Oracle
.SH COPYRIGHT
2016, 2025, Oracle
.\" Generated by docutils manpage writer.
.
