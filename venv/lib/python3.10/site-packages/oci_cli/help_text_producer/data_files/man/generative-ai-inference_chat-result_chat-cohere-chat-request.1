.\" Man page generated from reStructuredText.
.
.TH "GENERATIVE-AI-INFERENCE_CHAT-RESULT_CHAT-COHERE-CHAT-REQUEST" "1" "Apr 23, 2025" "3.54.5" "OCI CLI Command Reference"
.SH NAME
generative-ai-inference_chat-result_chat-cohere-chat-request \- 
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.IP \(bu 2
\fI\%Example using required parameter\fP
.UNINDENT
.SH DESCRIPTION
.sp
Creates a response for the given conversation.
.SH USAGE
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci generative\-ai\-inference chat\-result chat\-cohere\-chat\-request [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH REQUIRED PARAMETERS
.INDENT 0.0
.TP
.B \-\-chat\-request\-message [text]
.UNINDENT
.sp
The text that the user inputs for the model to respond to.
.INDENT 0.0
.TP
.B \-\-compartment\-id, \-c [text]
.UNINDENT
.sp
The OCID of compartment in which to call the Generative AI service to chat.
.INDENT 0.0
.TP
.B \-\-serving\-mode [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SH OPTIONAL PARAMETERS
.INDENT 0.0
.TP
.B \-\-chat\-request\-chat\-history [complex type]
.UNINDENT
.sp
The list of previous messages between the user and the model. The chat history gives the model context for responding to the user’s inputs.
.sp
This option is a JSON list with items of type CohereMessage.  For documentation on CohereMessage please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/generativeaiinference/20231130/datatypes/CohereMessage\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-chat\-request\-citation\-quality [text]
.UNINDENT
.sp
When FAST is selected, citations are generated at the same time as the text output and the request will be completed sooner. May result in less accurate citations.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ACCURATE, FAST
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-chat\-request\-documents [complex type]
.UNINDENT
.sp
A list of relevant documents that the model can refer to for generating grounded responses to the user’s requests. Some example keys that you can add to the dictionary are “text”, “author”, and “date”. Keep the total word count of the strings in the dictionary to 300 words or less.
.sp
Example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[   { "title": "Tall penguins", "snippet": "Emperor penguins are the tallest." },   { "title": "Penguin habitats", "snippet": "Emperor penguins only live in Antarctica." } ]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-chat\-request\-frequency\-penalty [text]
.UNINDENT
.sp
To reduce repetitiveness of generated tokens, this number penalizes new tokens based on their frequency in the generated text so far. Greater numbers encourage the model to use new tokens, while lower numbers encourage the model to repeat the tokens. Set to 0 to disable.
.INDENT 0.0
.TP
.B \-\-chat\-request\-is\-echo [boolean]
.UNINDENT
.sp
Returns the full prompt that was sent to the model when True.
.INDENT 0.0
.TP
.B \-\-chat\-request\-is\-force\-single\-step [boolean]
.UNINDENT
.sp
When enabled, the model will issue (potentially multiple) tool calls in a single step, before it receives the tool responses and directly answers the user’s original message.
.INDENT 0.0
.TP
.B \-\-chat\-request\-is\-raw\-prompting [boolean]
.UNINDENT
.sp
When enabled, the user’s \fImessage\fP will be sent to the model without any preprocessing.
.INDENT 0.0
.TP
.B \-\-chat\-request\-is\-search\-queries\-only [boolean]
.UNINDENT
.sp
When set to true, the response contains only a list of generated search queries without the search results and the model will not respond to the user’s message.
.INDENT 0.0
.TP
.B \-\-chat\-request\-is\-stream [boolean]
.UNINDENT
.sp
Whether to stream the partial progress of the model’s response. When set to true, as tokens become available, they are sent as data\-only server\-sent events.
.INDENT 0.0
.TP
.B \-\-chat\-request\-max\-input\-tokens [integer]
.UNINDENT
.sp
The maximum number of input tokens to send to the model. If not specified, max_input_tokens is the model’s context length limit minus a small buffer.
.INDENT 0.0
.TP
.B \-\-chat\-request\-max\-tokens [integer]
.UNINDENT
.sp
The maximum number of output tokens that the model will generate for the response.
.INDENT 0.0
.TP
.B \-\-chat\-request\-preamble\-override [text]
.UNINDENT
.sp
If specified, the default Cohere preamble is replaced with the provided preamble. A preamble is an initial guideline message that can change the model’s overall chat behavior and conversation style. Default preambles vary for different models.
.sp
Example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
You are a travel advisor. Answer with a pirate tone.
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-chat\-request\-presence\-penalty [text]
.UNINDENT
.sp
To reduce repetitiveness of generated tokens, this number penalizes new tokens based on whether they’ve appeared in the generated text so far. Greater numbers encourage the model to use new tokens, while lower numbers encourage the model to repeat the tokens.
.sp
Similar to frequency penalty, a penalty is applied to previously present tokens, except that this penalty is applied equally to all tokens that have already appeared, regardless of how many times they’ve appeared. Set to 0 to disable.
.INDENT 0.0
.TP
.B \-\-chat\-request\-prompt\-truncation [text]
.UNINDENT
.sp
Defaults to OFF. Dictates how the prompt will be constructed. With \fIpromptTruncation\fP set to AUTO_PRESERVE_ORDER, some elements from \fIchatHistory\fP and \fIdocuments\fP will be dropped to construct a prompt that fits within the model’s context length limit. During this process the order of the documents and chat history will be preserved. With \fIprompt_truncation\fP set to OFF, no elements will be dropped.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
AUTO_PRESERVE_ORDER, OFF
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-chat\-request\-response\-format [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-chat\-request\-safety\-mode [text]
.UNINDENT
.sp
Used to select the safety instruction inserted into the prompt. When selected CONTEXTUAL mode, It is appropriate for wide\-ranging interactions with fewer constraints on output while maintaining core protections by rejecting harmful or illegal suggestions. When selected STRICT mode, it aims to avoid all sensitive topics, such as violent or sexual acts and profanity. When selected OFF, the safety instruction will be omitted. Note: This parameter is only compatible with models Command R 08\-2024, Command R+ 08\-2024 and newer. Also, command\-r7b\-12\-2024 only supports “CONTEXTUAL” and “STRICT” modes.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
CONTEXTUAL, OFF, STRICT
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-chat\-request\-seed [integer]
.UNINDENT
.sp
If specified, the backend will make a best effort to sample tokens deterministically, so that repeated requests with the same seed and parameters yield the same result. However, determinism cannot be fully guaranteed.
.INDENT 0.0
.TP
.B \-\-chat\-request\-stop\-sequences [complex type]
.UNINDENT
.sp
Stop the model generation when it reaches a stop sequence defined in this parameter.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-chat\-request\-temperature [text]
.UNINDENT
.sp
A number that sets the randomness of the generated output. A lower temperature means less random generations. Use lower numbers for tasks such as question answering or summarizing. High temperatures can generate hallucinations or factually incorrect information. Start with temperatures lower than 1.0 and increase the temperature for more creative outputs, as you regenerate the prompts to refine the outputs.
.INDENT 0.0
.TP
.B \-\-chat\-request\-tool\-results [complex type]
.UNINDENT
.sp
A list of results from invoking tools recommended by the model in the previous chat turn.
.sp
This option is a JSON list with items of type CohereToolResult.  For documentation on CohereToolResult please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/generativeaiinference/20231130/datatypes/CohereToolResult\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-chat\-request\-tools [complex type]
.UNINDENT
.sp
A list of available tools (functions) that the model may suggest invoking before producing a text response.
.sp
This option is a JSON list with items of type CohereTool.  For documentation on CohereTool please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/generativeaiinference/20231130/datatypes/CohereTool\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-chat\-request\-top\-k [integer]
.UNINDENT
.sp
A sampling method in which the model chooses the next token randomly from the top k most likely tokens. A higher value for k generates more random output, which makes the output text sound more natural. The default value for k is 0 which disables this method and considers all tokens. To set a number for the likely tokens, choose an integer between 1 and 500.
.sp
If also using top p, then the model considers only the top tokens whose probabilities add up to p percent and ignores the rest of the k tokens. For example, if k is 20 but only the probabilities of the top 10 add up to the value of p, then only the top 10 tokens are chosen.
.INDENT 0.0
.TP
.B \-\-chat\-request\-top\-p [text]
.UNINDENT
.sp
If set to a probability 0.0 < p < 1.0, it ensures that only the most likely tokens, with total probability mass of p, are considered for generation at each step.
.sp
To eliminate tokens with low likelihood, assign p a minimum percentage for the next token’s likelihood. For example, when p is set to 0.75, the model eliminates the bottom 25 percent for the next token. Set to 1.0 to consider all tokens and set to 0 to disable. If both k and p are enabled, p acts after k.
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id –> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our “using CLI with advanced JSON options” link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.SH GLOBAL PARAMETERS
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-auto\-prompt\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-connection\-timeout\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-max\-retries\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-proxy\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-read\-timeout\fP, \fB\-\-realm\-specific\-endpoint\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-i\fP, \fB\-v\fP
.SH EXAMPLE USING REQUIRED PARAMETER
.sp
Copy and paste the following example into a JSON file, replacing the example parameters with your own.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    oci generative\-ai\-inference chat\-result chat\-cohere\-chat\-request \-\-generate\-param\-json\-input serving\-mode > serving\-mode.json
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Copy the following CLI commands into a file named example.sh. Run the command by typing “bash example.sh” and replacing the example parameters with your own.
.sp
Please note this sample will only work in the POSIX\-compliant bash\-like shell. You need to set up \fI\%the OCI configuration\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm#configfile\fP> and \fI\%appropriate security policies\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/Identity/Concepts/policygetstarted.htm\fP> before trying the examples.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    export chat_request_message=<substitute\-value\-of\-chat_request_message> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/generative\-ai\-inference/chat\-result/chat\-cohere\-chat\-request.html#cmdoption\-chat\-request\-message
    export compartment_id=<substitute\-value\-of\-compartment_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/generative\-ai\-inference/chat\-result/chat\-cohere\-chat\-request.html#cmdoption\-compartment\-id

    oci generative\-ai\-inference chat\-result chat\-cohere\-chat\-request \-\-chat\-request\-message $chat_request_message \-\-compartment\-id $compartment_id \-\-serving\-mode file://serving\-mode.json
.ft P
.fi
.UNINDENT
.UNINDENT
.SH AUTHOR
Oracle
.SH COPYRIGHT
2016, 2025, Oracle
.\" Generated by docutils manpage writer.
.
