.\" Man page generated from reStructuredText.
.
.TH "KMS_CRYPTO_KEY_EXPORT" "1" "Apr 23, 2025" "3.54.5" "OCI CLI Command Reference"
.SH NAME
kms_crypto_key_export \- 
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.IP \(bu 2
\fI\%Example using required parameter\fP
.UNINDENT
.SH DESCRIPTION
.sp
Exports a specific version of a master encryption key according to the details of the request. For their protection, keys that you create and store on a hardware security module (HSM) can never leave the HSM. You can only export keys stored on the server. For export, the key version is encrypted by an RSA public key that you provide. This operation is not supported for keys having protection mode \fIEXTERNAL\fP\&.
.sp
The top level –endpoint parameter must be supplied for this operation.
.SH USAGE
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci kms crypto key export [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH REQUIRED PARAMETERS
.INDENT 0.0
.TP
.B \-\-algorithm [text]
.UNINDENT
.sp
The encryption algorithm to use to encrypt exportable key material from a software\-backed key. Specifying \fIRSA_OAEP_AES_SHA256\fP invokes the RSA AES key wrap mechanism, which generates a temporary AES key. The temporary AES key is wrapped by the RSA public wrapping key provided along with the request, creating a wrapped temporary AES key. The temporary AES key is also used to wrap the exportable key material. The wrapped temporary AES key and the wrapped exportable key material are concatenated, producing concatenated blob output that jointly represents them. Specifying \fIRSA_OAEP_SHA256\fP means that the software key is wrapped by the RSA public wrapping key provided along with the request.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
RSA_OAEP_AES_SHA256, RSA_OAEP_SHA256
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-key\-id [text]
.UNINDENT
.sp
The OCID of the master encryption key associated with the key version you want to export.
.INDENT 0.0
.TP
.B \-\-public\-key [text]
.UNINDENT
.sp
The PEM format of the 2048\-bit, 3072\-bit, or 4096\-bit RSA wrapping key in your possession that you want to use to encrypt the key.
.SH OPTIONAL PARAMETERS
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id –> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our “using CLI with advanced JSON options” link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-key\-version\-id [text]
.UNINDENT
.sp
The OCID of the specific key version to export. If not specified, the service exports the current key version.
.INDENT 0.0
.TP
.B \-\-logging\-context [complex type]
.UNINDENT
.sp
Information that provides context for audit logging. You can provide this additional data as key\-value pairs to include in the audit logs when audit logging is enabled.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SH GLOBAL PARAMETERS
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-auto\-prompt\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-connection\-timeout\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-max\-retries\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-proxy\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-read\-timeout\fP, \fB\-\-realm\-specific\-endpoint\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-i\fP, \fB\-v\fP
.SH EXAMPLE USING REQUIRED PARAMETER
.sp
Copy and paste the following example into a JSON file, replacing the example parameters with your own.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    oci kms management key create \-\-generate\-param\-json\-input key\-shape > key\-shape.json
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Copy the following CLI commands into a file named example.sh. Run the command by typing “bash example.sh” and replacing the example parameters with your own.
.sp
Please note this sample will only work in the POSIX\-compliant bash\-like shell. You need to set up \fI\%the OCI configuration\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm#configfile\fP> and \fI\%appropriate security policies\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/Identity/Concepts/policygetstarted.htm\fP> before trying the examples.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    export compartment_id=<substitute\-value\-of\-compartment_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/kms/management/key/create.html#cmdoption\-compartment\-id
    export display_name=<substitute\-value\-of\-display_name> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/kms/management/key/create.html#cmdoption\-display\-name
    export algorithm=<substitute\-value\-of\-algorithm> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/kms/crypto/key/export.html#cmdoption\-algorithm
    export public_key=<substitute\-value\-of\-public_key> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/kms/crypto/key/export.html#cmdoption\-public\-key

    key_id=$(oci kms management key create \-\-compartment\-id $compartment_id \-\-display\-name $display_name \-\-endpoint https://region.domain.com \-\-key\-shape file://key\-shape.json \-\-query data.id \-\-raw\-output)

    oci kms crypto key export \-\-algorithm $algorithm \-\-key\-id $key_id \-\-public\-key $public_key
.ft P
.fi
.UNINDENT
.UNINDENT
.SH AUTHOR
Oracle
.SH COPYRIGHT
2016, 2025, Oracle
.\" Generated by docutils manpage writer.
.
