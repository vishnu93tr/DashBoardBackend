.\" Man page generated from reStructuredText.
.
.TH "APM-SYNTHETICS_MONITOR" "1" "Apr 23, 2025" "3.54.5" "OCI CLI Command Reference"
.SH NAME
apm-synthetics_monitor \- 
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH DESCRIPTION
.sp
The information about a monitor.
.SH AVAILABLE COMMANDS
.INDENT 0.0
.IP \(bu 2
create\-browser\-monitor
.IP \(bu 2
create\-dns\-sec\-monitor
.IP \(bu 2
create\-dns\-server\-monitor
.IP \(bu 2
create\-dns\-trace\-monitor
.IP \(bu 2
create\-ftp\-monitor
.IP \(bu 2
create\-network\-monitor
.IP \(bu 2
create\-rest\-monitor
.IP \(bu 2
create\-scripted\-browser\-monitor
.IP \(bu 2
create\-scripted\-rest\-monitor
.IP \(bu 2
create\-sql\-monitor
.IP \(bu 2
delete
.IP \(bu 2
get
.IP \(bu 2
update\-browser\-monitor
.IP \(bu 2
update\-dns\-sec\-monitor
.IP \(bu 2
update\-dns\-server\-monitor
.IP \(bu 2
update\-dns\-trace\-monitor
.IP \(bu 2
update\-ftp\-monitor
.IP \(bu 2
update\-network\-monitor
.IP \(bu 2
update\-rest\-monitor
.IP \(bu 2
update\-scripted\-browser\-monitor
.IP \(bu 2
update\-scripted\-rest\-monitor
.IP \(bu 2
update\-sql\-monitor
.UNINDENT
.SS \fBcreate\-browser\-monitor\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.IP \(bu 2
\fI\%Example using required parameter\fP
.UNINDENT
.SS Description
.sp
Creates a new monitor.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci apm\-synthetics monitor create\-browser\-monitor [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-apm\-domain\-id [text]
.UNINDENT
.sp
The APM domain ID the request is intended for.
.INDENT 0.0
.TP
.B \-\-display\-name [text]
.UNINDENT
.sp
Unique name that can be edited. The name should not contain any confidential information.
.INDENT 0.0
.TP
.B \-\-monitor\-type [text]
.UNINDENT
.sp
Type of monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
BROWSER, DNS, FTP, NETWORK, REST, SCRIPTED_BROWSER, SCRIPTED_REST, SQL
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-repeat\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds for Scripted REST, Scripted Browser and Browser monitors, and 60 seconds for REST monitor.
.INDENT 0.0
.TP
.B \-\-vantage\-points [complex type]
.UNINDENT
.sp
A list of public and dedicated vantage points from which to execute the monitor. Use /publicVantagePoints to fetch public vantage points, and /dedicatedVantagePoints to fetch dedicated vantage points.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-availability\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-batch\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Time interval between two runs in round robin batch mode (SchedulingPolicy \- BATCHED_ROUND_ROBIN).
.INDENT 0.0
.TP
.B \-\-defined\-tags [complex type]
.UNINDENT
.sp
Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: \fI{“foo\-namespace”: {“bar\-key”: “value”}}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-dns\-configuration [complex type]
.UNINDENT
.sp
Dns settings. This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-freeform\-tags [complex type]
.UNINDENT
.sp
Simple key\-value pair that is applied without any predefined name, type or scope. Exists for cross\-compatibility only. Example: \fI{“bar\-key”: “value”}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id –> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our “using CLI with advanced JSON options” link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-is\-certificate\-validation\-enabled [boolean]
.UNINDENT
.sp
If validation enabled, then call will fail for certificate errors.
.INDENT 0.0
.TP
.B \-\-is\-default\-snapshot\-enabled [boolean]
.UNINDENT
.sp
If disabled then auto snapshots are not collected.
.INDENT 0.0
.TP
.B \-\-is\-failure\-retried [boolean]
.UNINDENT
.sp
If isFailureRetried enabled, then if call is failed then it will be retried.
.INDENT 0.0
.TP
.B \-\-is\-ipv6 [boolean]
.UNINDENT
.sp
If enabled, domain name will resolve to an IPv6 address.
.INDENT 0.0
.TP
.B \-\-is\-run\-now [boolean]
.UNINDENT
.sp
If isRunNow is enabled, then the monitor will run immediately.
.INDENT 0.0
.TP
.B \-\-is\-run\-once [boolean]
.UNINDENT
.sp
If runOnce is enabled, then the monitor will run once.
.INDENT 0.0
.TP
.B \-\-maintenance\-window\-schedule [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-network\-configuration [complex type]
.UNINDENT
.sp
Details of the network configuration. This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-scheduling\-policy [text]
.UNINDENT
.sp
Scheduling policy to decide the distribution of monitor executions on vantage points.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ALL, BATCHED_ROUND_ROBIN, ROUND_ROBIN
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-script\-id [text]
.UNINDENT
.sp
The \fI\%OCID\fP <\fBhttps://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm\fP> of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
.INDENT 0.0
.TP
.B \-\-script\-parameters [complex type]
.UNINDENT
.sp
List of script parameters in the monitor. This is valid only for SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null. Example: \fI[{“paramName”: “userid”, “paramValue”:”testuser”}]\fP
.sp
This option is a JSON list with items of type MonitorScriptParameter.  For documentation on MonitorScriptParameter please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/MonitorScriptParameter\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-status [text]
.UNINDENT
.sp
Enables or disables the monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DISABLED, ENABLED, INVALID
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-target [text]
.UNINDENT
.sp
Specify the endpoint on which to run the monitor. For BROWSER, REST, NETWORK, DNS and FTP monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is. For NETWORK monitor with TCP protocol, a port needs to be provided along with target. Example: 192.168.0.1:80.
.INDENT 0.0
.TP
.B \-\-timeout\-in\-seconds [integer]
.UNINDENT
.sp
Timeout in seconds. If isFailureRetried is true, then timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. If isFailureRetried is false, then timeout cannot be more than 50% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60 for Scripted REST, Scripted Browser and Browser monitors. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
.INDENT 0.0
.TP
.B \-\-verify\-response\-codes [complex type]
.UNINDENT
.sp
Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-verify\-texts [complex type]
.UNINDENT
.sp
Verify all the search strings present in response. If any search string is not present in the response, then it will be considered as a failure.
.sp
This option is a JSON list with items of type VerifyText.  For documentation on VerifyText please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/VerifyText\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-auto\-prompt\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-connection\-timeout\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-max\-retries\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-proxy\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-read\-timeout\fP, \fB\-\-realm\-specific\-endpoint\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-i\fP, \fB\-v\fP
.SS Example using required parameter
.sp
Copy and paste the following example into a JSON file, replacing the example parameters with your own.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    oci apm\-synthetics monitor create\-browser\-monitor \-\-generate\-param\-json\-input vantage\-points > vantage\-points.json
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Copy the following CLI commands into a file named example.sh. Run the command by typing “bash example.sh” and replacing the example parameters with your own.
.sp
Please note this sample will only work in the POSIX\-compliant bash\-like shell. You need to set up \fI\%the OCI configuration\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm#configfile\fP> and \fI\%appropriate security policies\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/Identity/Concepts/policygetstarted.htm\fP> before trying the examples.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    export apm_domain_id=<substitute\-value\-of\-apm_domain_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-browser\-monitor.html#cmdoption\-apm\-domain\-id
    export display_name=<substitute\-value\-of\-display_name> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-browser\-monitor.html#cmdoption\-display\-name
    export monitor_type=<substitute\-value\-of\-monitor_type> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-browser\-monitor.html#cmdoption\-monitor\-type
    export repeat_interval_in_seconds=<substitute\-value\-of\-repeat_interval_in_seconds> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-browser\-monitor.html#cmdoption\-repeat\-interval\-in\-seconds

    oci apm\-synthetics monitor create\-browser\-monitor \-\-apm\-domain\-id $apm_domain_id \-\-display\-name $display_name \-\-monitor\-type $monitor_type \-\-repeat\-interval\-in\-seconds $repeat_interval_in_seconds \-\-vantage\-points file://vantage\-points.json
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBcreate\-dns\-sec\-monitor\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.IP \(bu 2
\fI\%Example using required parameter\fP
.UNINDENT
.SS Description
.sp
Creates a new monitor.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci apm\-synthetics monitor create\-dns\-sec\-monitor [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-apm\-domain\-id [text]
.UNINDENT
.sp
The APM domain ID the request is intended for.
.INDENT 0.0
.TP
.B \-\-display\-name [text]
.UNINDENT
.sp
Unique name that can be edited. The name should not contain any confidential information.
.INDENT 0.0
.TP
.B \-\-monitor\-type [text]
.UNINDENT
.sp
Type of monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
BROWSER, DNS, FTP, NETWORK, REST, SCRIPTED_BROWSER, SCRIPTED_REST, SQL
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-repeat\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds for Scripted REST, Scripted Browser and Browser monitors, and 60 seconds for REST monitor.
.INDENT 0.0
.TP
.B \-\-vantage\-points [complex type]
.UNINDENT
.sp
A list of public and dedicated vantage points from which to execute the monitor. Use /publicVantagePoints to fetch public vantage points, and /dedicatedVantagePoints to fetch dedicated vantage points.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-availability\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-batch\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Time interval between two runs in round robin batch mode (SchedulingPolicy \- BATCHED_ROUND_ROBIN).
.INDENT 0.0
.TP
.B \-\-defined\-tags [complex type]
.UNINDENT
.sp
Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: \fI{“foo\-namespace”: {“bar\-key”: “value”}}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-dns\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-freeform\-tags [complex type]
.UNINDENT
.sp
Simple key\-value pair that is applied without any predefined name, type or scope. Exists for cross\-compatibility only. Example: \fI{“bar\-key”: “value”}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id –> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our “using CLI with advanced JSON options” link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-is\-failure\-retried [boolean]
.UNINDENT
.sp
If isFailureRetried is enabled, then a failed call will be retried.
.INDENT 0.0
.TP
.B \-\-is\-ipv6 [boolean]
.UNINDENT
.sp
If enabled, domain name will resolve to an IPv6 address.
.INDENT 0.0
.TP
.B \-\-is\-run\-now [boolean]
.UNINDENT
.sp
If isRunNow is enabled, then the monitor will run immediately.
.INDENT 0.0
.TP
.B \-\-is\-run\-once [boolean]
.UNINDENT
.sp
If runOnce is enabled, then the monitor will run once.
.INDENT 0.0
.TP
.B \-\-maintenance\-window\-schedule [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-record\-type [text]
.UNINDENT
.sp
DNS record type.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
A, AAAA, ANY, CNAME, DNSKEY, DS, MX, NS, NSEC, NULL_REC, PTR, RRSIG, SOA, TXT
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-scheduling\-policy [text]
.UNINDENT
.sp
Scheduling policy to decide the distribution of monitor executions on vantage points.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ALL, BATCHED_ROUND_ROBIN, ROUND_ROBIN
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-script\-id [text]
.UNINDENT
.sp
The \fI\%OCID\fP <\fBhttps://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm\fP> of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
.INDENT 0.0
.TP
.B \-\-script\-parameters [complex type]
.UNINDENT
.sp
List of script parameters in the monitor. This is valid only for SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null. Example: \fI[{“paramName”: “userid”, “paramValue”:”testuser”}]\fP
.sp
This option is a JSON list with items of type MonitorScriptParameter.  For documentation on MonitorScriptParameter please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/MonitorScriptParameter\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-status [text]
.UNINDENT
.sp
Enables or disables the monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DISABLED, ENABLED, INVALID
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-target [text]
.UNINDENT
.sp
Specify the endpoint on which to run the monitor. For BROWSER, REST, NETWORK, DNS and FTP monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is. For NETWORK monitor with TCP protocol, a port needs to be provided along with target. Example: 192.168.0.1:80.
.INDENT 0.0
.TP
.B \-\-timeout\-in\-seconds [integer]
.UNINDENT
.sp
Timeout in seconds. If isFailureRetried is true, then timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. If isFailureRetried is false, then timeout cannot be more than 50% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60 for Scripted REST, Scripted Browser and Browser monitors. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
.INDENT 0.0
.TP
.B \-\-verify\-response\-content [text]
.UNINDENT
.sp
Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-auto\-prompt\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-connection\-timeout\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-max\-retries\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-proxy\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-read\-timeout\fP, \fB\-\-realm\-specific\-endpoint\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-i\fP, \fB\-v\fP
.SS Example using required parameter
.sp
Copy and paste the following example into a JSON file, replacing the example parameters with your own.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    oci apm\-synthetics monitor create\-dns\-sec\-monitor \-\-generate\-param\-json\-input vantage\-points > vantage\-points.json
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Copy the following CLI commands into a file named example.sh. Run the command by typing “bash example.sh” and replacing the example parameters with your own.
.sp
Please note this sample will only work in the POSIX\-compliant bash\-like shell. You need to set up \fI\%the OCI configuration\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm#configfile\fP> and \fI\%appropriate security policies\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/Identity/Concepts/policygetstarted.htm\fP> before trying the examples.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    export apm_domain_id=<substitute\-value\-of\-apm_domain_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-dns\-sec\-monitor.html#cmdoption\-apm\-domain\-id
    export display_name=<substitute\-value\-of\-display_name> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-dns\-sec\-monitor.html#cmdoption\-display\-name
    export monitor_type=<substitute\-value\-of\-monitor_type> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-dns\-sec\-monitor.html#cmdoption\-monitor\-type
    export repeat_interval_in_seconds=<substitute\-value\-of\-repeat_interval_in_seconds> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-dns\-sec\-monitor.html#cmdoption\-repeat\-interval\-in\-seconds

    oci apm\-synthetics monitor create\-dns\-sec\-monitor \-\-apm\-domain\-id $apm_domain_id \-\-display\-name $display_name \-\-monitor\-type $monitor_type \-\-repeat\-interval\-in\-seconds $repeat_interval_in_seconds \-\-vantage\-points file://vantage\-points.json
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBcreate\-dns\-server\-monitor\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.IP \(bu 2
\fI\%Example using required parameter\fP
.UNINDENT
.SS Description
.sp
Creates a new monitor.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci apm\-synthetics monitor create\-dns\-server\-monitor [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-apm\-domain\-id [text]
.UNINDENT
.sp
The APM domain ID the request is intended for.
.INDENT 0.0
.TP
.B \-\-display\-name [text]
.UNINDENT
.sp
Unique name that can be edited. The name should not contain any confidential information.
.INDENT 0.0
.TP
.B \-\-monitor\-type [text]
.UNINDENT
.sp
Type of monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
BROWSER, DNS, FTP, NETWORK, REST, SCRIPTED_BROWSER, SCRIPTED_REST, SQL
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-repeat\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds for Scripted REST, Scripted Browser and Browser monitors, and 60 seconds for REST monitor.
.INDENT 0.0
.TP
.B \-\-vantage\-points [complex type]
.UNINDENT
.sp
A list of public and dedicated vantage points from which to execute the monitor. Use /publicVantagePoints to fetch public vantage points, and /dedicatedVantagePoints to fetch dedicated vantage points.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-availability\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-batch\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Time interval between two runs in round robin batch mode (SchedulingPolicy \- BATCHED_ROUND_ROBIN).
.INDENT 0.0
.TP
.B \-\-defined\-tags [complex type]
.UNINDENT
.sp
Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: \fI{“foo\-namespace”: {“bar\-key”: “value”}}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-dns\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-freeform\-tags [complex type]
.UNINDENT
.sp
Simple key\-value pair that is applied without any predefined name, type or scope. Exists for cross\-compatibility only. Example: \fI{“bar\-key”: “value”}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id –> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our “using CLI with advanced JSON options” link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-is\-failure\-retried [boolean]
.UNINDENT
.sp
If isFailureRetried is enabled, then a failed call will be retried.
.INDENT 0.0
.TP
.B \-\-is\-ipv6 [boolean]
.UNINDENT
.sp
If enabled, domain name will resolve to an IPv6 address.
.INDENT 0.0
.TP
.B \-\-is\-query\-recursive [boolean]
.UNINDENT
.sp
If isQueryRecursive is enabled, then queries will be sent recursively to the target server.
.INDENT 0.0
.TP
.B \-\-is\-run\-now [boolean]
.UNINDENT
.sp
If isRunNow is enabled, then the monitor will run immediately.
.INDENT 0.0
.TP
.B \-\-is\-run\-once [boolean]
.UNINDENT
.sp
If runOnce is enabled, then the monitor will run once.
.INDENT 0.0
.TP
.B \-\-maintenance\-window\-schedule [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-name\-server [text]
.UNINDENT
.sp
Name of the server that will be used to perform DNS lookup.
.INDENT 0.0
.TP
.B \-\-network\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-protocol [text]
.UNINDENT
.sp
Type of protocol.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
TCP, UDP
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-record\-type [text]
.UNINDENT
.sp
DNS record type.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
A, AAAA, ANY, CNAME, DNSKEY, DS, MX, NS, NSEC, NULL_REC, PTR, RRSIG, SOA, TXT
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-scheduling\-policy [text]
.UNINDENT
.sp
Scheduling policy to decide the distribution of monitor executions on vantage points.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ALL, BATCHED_ROUND_ROBIN, ROUND_ROBIN
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-script\-id [text]
.UNINDENT
.sp
The \fI\%OCID\fP <\fBhttps://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm\fP> of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
.INDENT 0.0
.TP
.B \-\-script\-parameters [complex type]
.UNINDENT
.sp
List of script parameters in the monitor. This is valid only for SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null. Example: \fI[{“paramName”: “userid”, “paramValue”:”testuser”}]\fP
.sp
This option is a JSON list with items of type MonitorScriptParameter.  For documentation on MonitorScriptParameter please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/MonitorScriptParameter\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-status [text]
.UNINDENT
.sp
Enables or disables the monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DISABLED, ENABLED, INVALID
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-target [text]
.UNINDENT
.sp
Specify the endpoint on which to run the monitor. For BROWSER, REST, NETWORK, DNS and FTP monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is. For NETWORK monitor with TCP protocol, a port needs to be provided along with target. Example: 192.168.0.1:80.
.INDENT 0.0
.TP
.B \-\-timeout\-in\-seconds [integer]
.UNINDENT
.sp
Timeout in seconds. If isFailureRetried is true, then timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. If isFailureRetried is false, then timeout cannot be more than 50% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60 for Scripted REST, Scripted Browser and Browser monitors. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
.INDENT 0.0
.TP
.B \-\-verify\-response\-content [text]
.UNINDENT
.sp
Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-auto\-prompt\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-connection\-timeout\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-max\-retries\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-proxy\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-read\-timeout\fP, \fB\-\-realm\-specific\-endpoint\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-i\fP, \fB\-v\fP
.SS Example using required parameter
.sp
Copy and paste the following example into a JSON file, replacing the example parameters with your own.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    oci apm\-synthetics monitor create\-dns\-server\-monitor \-\-generate\-param\-json\-input vantage\-points > vantage\-points.json
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Copy the following CLI commands into a file named example.sh. Run the command by typing “bash example.sh” and replacing the example parameters with your own.
.sp
Please note this sample will only work in the POSIX\-compliant bash\-like shell. You need to set up \fI\%the OCI configuration\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm#configfile\fP> and \fI\%appropriate security policies\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/Identity/Concepts/policygetstarted.htm\fP> before trying the examples.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    export apm_domain_id=<substitute\-value\-of\-apm_domain_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-dns\-server\-monitor.html#cmdoption\-apm\-domain\-id
    export display_name=<substitute\-value\-of\-display_name> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-dns\-server\-monitor.html#cmdoption\-display\-name
    export monitor_type=<substitute\-value\-of\-monitor_type> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-dns\-server\-monitor.html#cmdoption\-monitor\-type
    export repeat_interval_in_seconds=<substitute\-value\-of\-repeat_interval_in_seconds> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-dns\-server\-monitor.html#cmdoption\-repeat\-interval\-in\-seconds

    oci apm\-synthetics monitor create\-dns\-server\-monitor \-\-apm\-domain\-id $apm_domain_id \-\-display\-name $display_name \-\-monitor\-type $monitor_type \-\-repeat\-interval\-in\-seconds $repeat_interval_in_seconds \-\-vantage\-points file://vantage\-points.json
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBcreate\-dns\-trace\-monitor\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.IP \(bu 2
\fI\%Example using required parameter\fP
.UNINDENT
.SS Description
.sp
Creates a new monitor.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci apm\-synthetics monitor create\-dns\-trace\-monitor [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-apm\-domain\-id [text]
.UNINDENT
.sp
The APM domain ID the request is intended for.
.INDENT 0.0
.TP
.B \-\-display\-name [text]
.UNINDENT
.sp
Unique name that can be edited. The name should not contain any confidential information.
.INDENT 0.0
.TP
.B \-\-monitor\-type [text]
.UNINDENT
.sp
Type of monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
BROWSER, DNS, FTP, NETWORK, REST, SCRIPTED_BROWSER, SCRIPTED_REST, SQL
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-repeat\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds for Scripted REST, Scripted Browser and Browser monitors, and 60 seconds for REST monitor.
.INDENT 0.0
.TP
.B \-\-vantage\-points [complex type]
.UNINDENT
.sp
A list of public and dedicated vantage points from which to execute the monitor. Use /publicVantagePoints to fetch public vantage points, and /dedicatedVantagePoints to fetch dedicated vantage points.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-availability\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-batch\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Time interval between two runs in round robin batch mode (SchedulingPolicy \- BATCHED_ROUND_ROBIN).
.INDENT 0.0
.TP
.B \-\-defined\-tags [complex type]
.UNINDENT
.sp
Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: \fI{“foo\-namespace”: {“bar\-key”: “value”}}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-dns\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-freeform\-tags [complex type]
.UNINDENT
.sp
Simple key\-value pair that is applied without any predefined name, type or scope. Exists for cross\-compatibility only. Example: \fI{“bar\-key”: “value”}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id –> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our “using CLI with advanced JSON options” link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-is\-failure\-retried [boolean]
.UNINDENT
.sp
If isFailureRetried is enabled, then a failed call will be retried.
.INDENT 0.0
.TP
.B \-\-is\-ipv6 [boolean]
.UNINDENT
.sp
If enabled, domain name will resolve to an IPv6 address.
.INDENT 0.0
.TP
.B \-\-is\-run\-now [boolean]
.UNINDENT
.sp
If isRunNow is enabled, then the monitor will run immediately.
.INDENT 0.0
.TP
.B \-\-is\-run\-once [boolean]
.UNINDENT
.sp
If runOnce is enabled, then the monitor will run once.
.INDENT 0.0
.TP
.B \-\-maintenance\-window\-schedule [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-protocol [text]
.UNINDENT
.sp
Type of protocol.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
TCP, UDP
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-record\-type [text]
.UNINDENT
.sp
DNS record type.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
A, AAAA, ANY, CNAME, DNSKEY, DS, MX, NS, NSEC, NULL_REC, PTR, RRSIG, SOA, TXT
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-scheduling\-policy [text]
.UNINDENT
.sp
Scheduling policy to decide the distribution of monitor executions on vantage points.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ALL, BATCHED_ROUND_ROBIN, ROUND_ROBIN
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-script\-id [text]
.UNINDENT
.sp
The \fI\%OCID\fP <\fBhttps://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm\fP> of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
.INDENT 0.0
.TP
.B \-\-script\-parameters [complex type]
.UNINDENT
.sp
List of script parameters in the monitor. This is valid only for SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null. Example: \fI[{“paramName”: “userid”, “paramValue”:”testuser”}]\fP
.sp
This option is a JSON list with items of type MonitorScriptParameter.  For documentation on MonitorScriptParameter please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/MonitorScriptParameter\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-status [text]
.UNINDENT
.sp
Enables or disables the monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DISABLED, ENABLED, INVALID
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-target [text]
.UNINDENT
.sp
Specify the endpoint on which to run the monitor. For BROWSER, REST, NETWORK, DNS and FTP monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is. For NETWORK monitor with TCP protocol, a port needs to be provided along with target. Example: 192.168.0.1:80.
.INDENT 0.0
.TP
.B \-\-timeout\-in\-seconds [integer]
.UNINDENT
.sp
Timeout in seconds. If isFailureRetried is true, then timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. If isFailureRetried is false, then timeout cannot be more than 50% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60 for Scripted REST, Scripted Browser and Browser monitors. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
.INDENT 0.0
.TP
.B \-\-verify\-response\-content [text]
.UNINDENT
.sp
Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-auto\-prompt\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-connection\-timeout\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-max\-retries\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-proxy\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-read\-timeout\fP, \fB\-\-realm\-specific\-endpoint\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-i\fP, \fB\-v\fP
.SS Example using required parameter
.sp
Copy and paste the following example into a JSON file, replacing the example parameters with your own.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    oci apm\-synthetics monitor create\-dns\-trace\-monitor \-\-generate\-param\-json\-input vantage\-points > vantage\-points.json
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Copy the following CLI commands into a file named example.sh. Run the command by typing “bash example.sh” and replacing the example parameters with your own.
.sp
Please note this sample will only work in the POSIX\-compliant bash\-like shell. You need to set up \fI\%the OCI configuration\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm#configfile\fP> and \fI\%appropriate security policies\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/Identity/Concepts/policygetstarted.htm\fP> before trying the examples.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    export apm_domain_id=<substitute\-value\-of\-apm_domain_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-dns\-trace\-monitor.html#cmdoption\-apm\-domain\-id
    export display_name=<substitute\-value\-of\-display_name> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-dns\-trace\-monitor.html#cmdoption\-display\-name
    export monitor_type=<substitute\-value\-of\-monitor_type> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-dns\-trace\-monitor.html#cmdoption\-monitor\-type
    export repeat_interval_in_seconds=<substitute\-value\-of\-repeat_interval_in_seconds> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-dns\-trace\-monitor.html#cmdoption\-repeat\-interval\-in\-seconds

    oci apm\-synthetics monitor create\-dns\-trace\-monitor \-\-apm\-domain\-id $apm_domain_id \-\-display\-name $display_name \-\-monitor\-type $monitor_type \-\-repeat\-interval\-in\-seconds $repeat_interval_in_seconds \-\-vantage\-points file://vantage\-points.json
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBcreate\-ftp\-monitor\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.IP \(bu 2
\fI\%Example using required parameter\fP
.UNINDENT
.SS Description
.sp
Creates a new monitor.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci apm\-synthetics monitor create\-ftp\-monitor [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-apm\-domain\-id [text]
.UNINDENT
.sp
The APM domain ID the request is intended for.
.INDENT 0.0
.TP
.B \-\-display\-name [text]
.UNINDENT
.sp
Unique name that can be edited. The name should not contain any confidential information.
.INDENT 0.0
.TP
.B \-\-monitor\-type [text]
.UNINDENT
.sp
Type of monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
BROWSER, DNS, FTP, NETWORK, REST, SCRIPTED_BROWSER, SCRIPTED_REST, SQL
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-repeat\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds for Scripted REST, Scripted Browser and Browser monitors, and 60 seconds for REST monitor.
.INDENT 0.0
.TP
.B \-\-vantage\-points [complex type]
.UNINDENT
.sp
A list of public and dedicated vantage points from which to execute the monitor. Use /publicVantagePoints to fetch public vantage points, and /dedicatedVantagePoints to fetch dedicated vantage points.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-availability\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-batch\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Time interval between two runs in round robin batch mode (SchedulingPolicy \- BATCHED_ROUND_ROBIN).
.INDENT 0.0
.TP
.B \-\-defined\-tags [complex type]
.UNINDENT
.sp
Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: \fI{“foo\-namespace”: {“bar\-key”: “value”}}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-dns\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-download\-size\-limit\-in\-bytes [integer]
.UNINDENT
.sp
Download size limit in Bytes, at which to stop the transfer. Maximum download size limit is 5 MiB.
.INDENT 0.0
.TP
.B \-\-freeform\-tags [complex type]
.UNINDENT
.sp
Simple key\-value pair that is applied without any predefined name, type or scope. Exists for cross\-compatibility only. Example: \fI{“bar\-key”: “value”}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id –> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our “using CLI with advanced JSON options” link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-ftp\-basic\-authentication\-details [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-ftp\-protocol [text]
.UNINDENT
.sp
FTP protocol type.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
FTP, FTPS, SFTP
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-ftp\-request\-type [text]
.UNINDENT
.sp
FTP monitor request type.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DOWNLOAD, LIST, UPLOAD
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-is\-active\-mode [boolean]
.UNINDENT
.sp
If enabled, Active mode will be used for the FTP connection.
.INDENT 0.0
.TP
.B \-\-is\-failure\-retried [boolean]
.UNINDENT
.sp
If isFailureRetried is enabled, then a failed call will be retried.
.INDENT 0.0
.TP
.B \-\-is\-ipv6 [boolean]
.UNINDENT
.sp
If enabled, domain name will resolve to an IPv6 address.
.INDENT 0.0
.TP
.B \-\-is\-run\-now [boolean]
.UNINDENT
.sp
If isRunNow is enabled, then the monitor will run immediately.
.INDENT 0.0
.TP
.B \-\-is\-run\-once [boolean]
.UNINDENT
.sp
If runOnce is enabled, then the monitor will run once.
.INDENT 0.0
.TP
.B \-\-maintenance\-window\-schedule [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-network\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-scheduling\-policy [text]
.UNINDENT
.sp
Scheduling policy to decide the distribution of monitor executions on vantage points.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ALL, BATCHED_ROUND_ROBIN, ROUND_ROBIN
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-script\-id [text]
.UNINDENT
.sp
The \fI\%OCID\fP <\fBhttps://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm\fP> of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
.INDENT 0.0
.TP
.B \-\-script\-parameters [complex type]
.UNINDENT
.sp
List of script parameters in the monitor. This is valid only for SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null. Example: \fI[{“paramName”: “userid”, “paramValue”:”testuser”}]\fP
.sp
This option is a JSON list with items of type MonitorScriptParameter.  For documentation on MonitorScriptParameter please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/MonitorScriptParameter\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-status [text]
.UNINDENT
.sp
Enables or disables the monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DISABLED, ENABLED, INVALID
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-target [text]
.UNINDENT
.sp
Specify the endpoint on which to run the monitor. For BROWSER, REST, NETWORK, DNS and FTP monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is. For NETWORK monitor with TCP protocol, a port needs to be provided along with target. Example: 192.168.0.1:80.
.INDENT 0.0
.TP
.B \-\-timeout\-in\-seconds [integer]
.UNINDENT
.sp
Timeout in seconds. If isFailureRetried is true, then timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. If isFailureRetried is false, then timeout cannot be more than 50% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60 for Scripted REST, Scripted Browser and Browser monitors. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
.INDENT 0.0
.TP
.B \-\-upload\-file\-size\-in\-bytes [integer]
.UNINDENT
.sp
File upload size in Bytes, at which to stop the transfer. Maximum upload size is 5 MiB.
.INDENT 0.0
.TP
.B \-\-verify\-response\-codes [complex type]
.UNINDENT
.sp
Expected FTP response codes. For status code range, set values such as 2xx, 3xx.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-verify\-response\-content [text]
.UNINDENT
.sp
Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-auto\-prompt\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-connection\-timeout\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-max\-retries\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-proxy\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-read\-timeout\fP, \fB\-\-realm\-specific\-endpoint\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-i\fP, \fB\-v\fP
.SS Example using required parameter
.sp
Copy and paste the following example into a JSON file, replacing the example parameters with your own.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    oci apm\-synthetics monitor create\-ftp\-monitor \-\-generate\-param\-json\-input vantage\-points > vantage\-points.json
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Copy the following CLI commands into a file named example.sh. Run the command by typing “bash example.sh” and replacing the example parameters with your own.
.sp
Please note this sample will only work in the POSIX\-compliant bash\-like shell. You need to set up \fI\%the OCI configuration\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm#configfile\fP> and \fI\%appropriate security policies\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/Identity/Concepts/policygetstarted.htm\fP> before trying the examples.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    export apm_domain_id=<substitute\-value\-of\-apm_domain_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-ftp\-monitor.html#cmdoption\-apm\-domain\-id
    export display_name=<substitute\-value\-of\-display_name> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-ftp\-monitor.html#cmdoption\-display\-name
    export monitor_type=<substitute\-value\-of\-monitor_type> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-ftp\-monitor.html#cmdoption\-monitor\-type
    export repeat_interval_in_seconds=<substitute\-value\-of\-repeat_interval_in_seconds> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-ftp\-monitor.html#cmdoption\-repeat\-interval\-in\-seconds

    oci apm\-synthetics monitor create\-ftp\-monitor \-\-apm\-domain\-id $apm_domain_id \-\-display\-name $display_name \-\-monitor\-type $monitor_type \-\-repeat\-interval\-in\-seconds $repeat_interval_in_seconds \-\-vantage\-points file://vantage\-points.json
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBcreate\-network\-monitor\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.IP \(bu 2
\fI\%Example using required parameter\fP
.UNINDENT
.SS Description
.sp
Creates a new monitor.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci apm\-synthetics monitor create\-network\-monitor [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-apm\-domain\-id [text]
.UNINDENT
.sp
The APM domain ID the request is intended for.
.INDENT 0.0
.TP
.B \-\-display\-name [text]
.UNINDENT
.sp
Unique name that can be edited. The name should not contain any confidential information.
.INDENT 0.0
.TP
.B \-\-monitor\-type [text]
.UNINDENT
.sp
Type of monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
BROWSER, DNS, FTP, NETWORK, REST, SCRIPTED_BROWSER, SCRIPTED_REST, SQL
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-network\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-repeat\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds for Scripted REST, Scripted Browser and Browser monitors, and 60 seconds for REST monitor.
.INDENT 0.0
.TP
.B \-\-vantage\-points [complex type]
.UNINDENT
.sp
A list of public and dedicated vantage points from which to execute the monitor. Use /publicVantagePoints to fetch public vantage points, and /dedicatedVantagePoints to fetch dedicated vantage points.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-availability\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-batch\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Time interval between two runs in round robin batch mode (SchedulingPolicy \- BATCHED_ROUND_ROBIN).
.INDENT 0.0
.TP
.B \-\-defined\-tags [complex type]
.UNINDENT
.sp
Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: \fI{“foo\-namespace”: {“bar\-key”: “value”}}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-dns\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-freeform\-tags [complex type]
.UNINDENT
.sp
Simple key\-value pair that is applied without any predefined name, type or scope. Exists for cross\-compatibility only. Example: \fI{“bar\-key”: “value”}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id –> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our “using CLI with advanced JSON options” link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-is\-failure\-retried [boolean]
.UNINDENT
.sp
If isFailureRetried is enabled, then a failed call will be retried.
.INDENT 0.0
.TP
.B \-\-is\-ipv6 [boolean]
.UNINDENT
.sp
If enabled, domain name will resolve to an IPv6 address.
.INDENT 0.0
.TP
.B \-\-is\-run\-now [boolean]
.UNINDENT
.sp
If isRunNow is enabled, then the monitor will run immediately.
.INDENT 0.0
.TP
.B \-\-is\-run\-once [boolean]
.UNINDENT
.sp
If runOnce is enabled, then the monitor will run once.
.INDENT 0.0
.TP
.B \-\-maintenance\-window\-schedule [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-scheduling\-policy [text]
.UNINDENT
.sp
Scheduling policy to decide the distribution of monitor executions on vantage points.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ALL, BATCHED_ROUND_ROBIN, ROUND_ROBIN
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-script\-id [text]
.UNINDENT
.sp
The \fI\%OCID\fP <\fBhttps://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm\fP> of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
.INDENT 0.0
.TP
.B \-\-script\-parameters [complex type]
.UNINDENT
.sp
List of script parameters in the monitor. This is valid only for SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null. Example: \fI[{“paramName”: “userid”, “paramValue”:”testuser”}]\fP
.sp
This option is a JSON list with items of type MonitorScriptParameter.  For documentation on MonitorScriptParameter please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/MonitorScriptParameter\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-status [text]
.UNINDENT
.sp
Enables or disables the monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DISABLED, ENABLED, INVALID
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-target [text]
.UNINDENT
.sp
Specify the endpoint on which to run the monitor. For BROWSER, REST, NETWORK, DNS and FTP monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is. For NETWORK monitor with TCP protocol, a port needs to be provided along with target. Example: 192.168.0.1:80.
.INDENT 0.0
.TP
.B \-\-timeout\-in\-seconds [integer]
.UNINDENT
.sp
Timeout in seconds. If isFailureRetried is true, then timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. If isFailureRetried is false, then timeout cannot be more than 50% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60 for Scripted REST, Scripted Browser and Browser monitors. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-auto\-prompt\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-connection\-timeout\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-max\-retries\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-proxy\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-read\-timeout\fP, \fB\-\-realm\-specific\-endpoint\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-i\fP, \fB\-v\fP
.SS Example using required parameter
.sp
Copy and paste the following example into a JSON file, replacing the example parameters with your own.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    oci apm\-synthetics monitor create\-network\-monitor \-\-generate\-param\-json\-input network\-configuration > network\-configuration.json
    oci apm\-synthetics monitor create\-network\-monitor \-\-generate\-param\-json\-input vantage\-points > vantage\-points.json
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Copy the following CLI commands into a file named example.sh. Run the command by typing “bash example.sh” and replacing the example parameters with your own.
.sp
Please note this sample will only work in the POSIX\-compliant bash\-like shell. You need to set up \fI\%the OCI configuration\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm#configfile\fP> and \fI\%appropriate security policies\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/Identity/Concepts/policygetstarted.htm\fP> before trying the examples.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    export apm_domain_id=<substitute\-value\-of\-apm_domain_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-network\-monitor.html#cmdoption\-apm\-domain\-id
    export display_name=<substitute\-value\-of\-display_name> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-network\-monitor.html#cmdoption\-display\-name
    export monitor_type=<substitute\-value\-of\-monitor_type> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-network\-monitor.html#cmdoption\-monitor\-type
    export repeat_interval_in_seconds=<substitute\-value\-of\-repeat_interval_in_seconds> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-network\-monitor.html#cmdoption\-repeat\-interval\-in\-seconds

    oci apm\-synthetics monitor create\-network\-monitor \-\-apm\-domain\-id $apm_domain_id \-\-display\-name $display_name \-\-monitor\-type $monitor_type \-\-network\-configuration file://network\-configuration.json \-\-repeat\-interval\-in\-seconds $repeat_interval_in_seconds \-\-vantage\-points file://vantage\-points.json
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBcreate\-rest\-monitor\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.IP \(bu 2
\fI\%Example using required parameter\fP
.UNINDENT
.SS Description
.sp
Creates a new monitor.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci apm\-synthetics monitor create\-rest\-monitor [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-apm\-domain\-id [text]
.UNINDENT
.sp
The APM domain ID the request is intended for.
.INDENT 0.0
.TP
.B \-\-display\-name [text]
.UNINDENT
.sp
Unique name that can be edited. The name should not contain any confidential information.
.INDENT 0.0
.TP
.B \-\-monitor\-type [text]
.UNINDENT
.sp
Type of monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
BROWSER, DNS, FTP, NETWORK, REST, SCRIPTED_BROWSER, SCRIPTED_REST, SQL
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-repeat\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds for Scripted REST, Scripted Browser and Browser monitors, and 60 seconds for REST monitor.
.INDENT 0.0
.TP
.B \-\-vantage\-points [complex type]
.UNINDENT
.sp
A list of public and dedicated vantage points from which to execute the monitor. Use /publicVantagePoints to fetch public vantage points, and /dedicatedVantagePoints to fetch dedicated vantage points.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-availability\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-batch\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Time interval between two runs in round robin batch mode (SchedulingPolicy \- BATCHED_ROUND_ROBIN).
.INDENT 0.0
.TP
.B \-\-client\-certificate\-details [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-defined\-tags [complex type]
.UNINDENT
.sp
Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: \fI{“foo\-namespace”: {“bar\-key”: “value”}}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-dns\-configuration [complex type]
.UNINDENT
.sp
Dns settings. This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-freeform\-tags [complex type]
.UNINDENT
.sp
Simple key\-value pair that is applied without any predefined name, type or scope. Exists for cross\-compatibility only. Example: \fI{“bar\-key”: “value”}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id –> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our “using CLI with advanced JSON options” link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-is\-certificate\-validation\-enabled [boolean]
.UNINDENT
.sp
If certificate validation enabled, then call will fail for certificate errors.
.INDENT 0.0
.TP
.B \-\-is\-failure\-retried [boolean]
.UNINDENT
.sp
If isFailureRetried enabled, then if call is failed then it will be retried.
.INDENT 0.0
.TP
.B \-\-is\-ipv6 [boolean]
.UNINDENT
.sp
If enabled, domain name will resolve to an IPv6 address.
.INDENT 0.0
.TP
.B \-\-is\-redirection\-enabled [boolean]
.UNINDENT
.sp
If redirection enabled, then redirects will be allowed while accessing target URL.
.INDENT 0.0
.TP
.B \-\-is\-run\-now [boolean]
.UNINDENT
.sp
If isRunNow is enabled, then the monitor will run immediately.
.INDENT 0.0
.TP
.B \-\-is\-run\-once [boolean]
.UNINDENT
.sp
If runOnce is enabled, then the monitor will run once.
.INDENT 0.0
.TP
.B \-\-maintenance\-window\-schedule [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-network\-configuration [complex type]
.UNINDENT
.sp
Details of the network configuration. This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-req\-authentication\-details [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-req\-authentication\-scheme [text]
.UNINDENT
.sp
Request http authentication scheme.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
BASIC, BEARER, NONE, OAUTH
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-request\-headers [complex type]
.UNINDENT
.sp
List of request headers. Example: \fI[{“headerName”: “content\-type”, “headerValue”:”json”}]\fP
.sp
This option is a JSON list with items of type Header.  For documentation on Header please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/Header\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-request\-method [text]
.UNINDENT
.sp
Request HTTP method.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
GET, POST
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-request\-post\-body [text]
.UNINDENT
.sp
Request post body content.
.INDENT 0.0
.TP
.B \-\-request\-query\-params [complex type]
.UNINDENT
.sp
List of request query params. Example: \fI[{“paramName”: “sortOrder”, “paramValue”: “asc”}]\fP
.sp
This option is a JSON list with items of type RequestQueryParam.  For documentation on RequestQueryParam please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/RequestQueryParam\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-scheduling\-policy [text]
.UNINDENT
.sp
Scheduling policy to decide the distribution of monitor executions on vantage points.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ALL, BATCHED_ROUND_ROBIN, ROUND_ROBIN
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-script\-id [text]
.UNINDENT
.sp
The \fI\%OCID\fP <\fBhttps://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm\fP> of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
.INDENT 0.0
.TP
.B \-\-script\-parameters [complex type]
.UNINDENT
.sp
List of script parameters in the monitor. This is valid only for SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null. Example: \fI[{“paramName”: “userid”, “paramValue”:”testuser”}]\fP
.sp
This option is a JSON list with items of type MonitorScriptParameter.  For documentation on MonitorScriptParameter please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/MonitorScriptParameter\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-status [text]
.UNINDENT
.sp
Enables or disables the monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DISABLED, ENABLED, INVALID
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-target [text]
.UNINDENT
.sp
Specify the endpoint on which to run the monitor. For BROWSER, REST, NETWORK, DNS and FTP monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is. For NETWORK monitor with TCP protocol, a port needs to be provided along with target. Example: 192.168.0.1:80.
.INDENT 0.0
.TP
.B \-\-timeout\-in\-seconds [integer]
.UNINDENT
.sp
Timeout in seconds. If isFailureRetried is true, then timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. If isFailureRetried is false, then timeout cannot be more than 50% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60 for Scripted REST, Scripted Browser and Browser monitors. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
.INDENT 0.0
.TP
.B \-\-verify\-response\-codes [complex type]
.UNINDENT
.sp
Expected HTTP response codes. For status code range, please set values like 2xx, 3xx.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-verify\-response\-content [text]
.UNINDENT
.sp
Verify response content against regular expression based string. If response content does not match with the verifyResponseContent, then it will be considered as failure.
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-auto\-prompt\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-connection\-timeout\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-max\-retries\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-proxy\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-read\-timeout\fP, \fB\-\-realm\-specific\-endpoint\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-i\fP, \fB\-v\fP
.SS Example using required parameter
.sp
Copy and paste the following example into a JSON file, replacing the example parameters with your own.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    oci apm\-synthetics monitor create\-rest\-monitor \-\-generate\-param\-json\-input vantage\-points > vantage\-points.json
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Copy the following CLI commands into a file named example.sh. Run the command by typing “bash example.sh” and replacing the example parameters with your own.
.sp
Please note this sample will only work in the POSIX\-compliant bash\-like shell. You need to set up \fI\%the OCI configuration\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm#configfile\fP> and \fI\%appropriate security policies\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/Identity/Concepts/policygetstarted.htm\fP> before trying the examples.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    export apm_domain_id=<substitute\-value\-of\-apm_domain_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-rest\-monitor.html#cmdoption\-apm\-domain\-id
    export display_name=<substitute\-value\-of\-display_name> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-rest\-monitor.html#cmdoption\-display\-name
    export monitor_type=<substitute\-value\-of\-monitor_type> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-rest\-monitor.html#cmdoption\-monitor\-type
    export repeat_interval_in_seconds=<substitute\-value\-of\-repeat_interval_in_seconds> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-rest\-monitor.html#cmdoption\-repeat\-interval\-in\-seconds

    oci apm\-synthetics monitor create\-rest\-monitor \-\-apm\-domain\-id $apm_domain_id \-\-display\-name $display_name \-\-monitor\-type $monitor_type \-\-repeat\-interval\-in\-seconds $repeat_interval_in_seconds \-\-vantage\-points file://vantage\-points.json
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBcreate\-scripted\-browser\-monitor\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.IP \(bu 2
\fI\%Example using required parameter\fP
.UNINDENT
.SS Description
.sp
Creates a new monitor.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci apm\-synthetics monitor create\-scripted\-browser\-monitor [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-apm\-domain\-id [text]
.UNINDENT
.sp
The APM domain ID the request is intended for.
.INDENT 0.0
.TP
.B \-\-display\-name [text]
.UNINDENT
.sp
Unique name that can be edited. The name should not contain any confidential information.
.INDENT 0.0
.TP
.B \-\-monitor\-type [text]
.UNINDENT
.sp
Type of monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
BROWSER, DNS, FTP, NETWORK, REST, SCRIPTED_BROWSER, SCRIPTED_REST, SQL
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-repeat\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds for Scripted REST, Scripted Browser and Browser monitors, and 60 seconds for REST monitor.
.INDENT 0.0
.TP
.B \-\-vantage\-points [complex type]
.UNINDENT
.sp
A list of public and dedicated vantage points from which to execute the monitor. Use /publicVantagePoints to fetch public vantage points, and /dedicatedVantagePoints to fetch dedicated vantage points.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-availability\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-batch\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Time interval between two runs in round robin batch mode (SchedulingPolicy \- BATCHED_ROUND_ROBIN).
.INDENT 0.0
.TP
.B \-\-defined\-tags [complex type]
.UNINDENT
.sp
Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: \fI{“foo\-namespace”: {“bar\-key”: “value”}}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-dns\-configuration [complex type]
.UNINDENT
.sp
Dns settings. This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-freeform\-tags [complex type]
.UNINDENT
.sp
Simple key\-value pair that is applied without any predefined name, type or scope. Exists for cross\-compatibility only. Example: \fI{“bar\-key”: “value”}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id –> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our “using CLI with advanced JSON options” link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-is\-certificate\-validation\-enabled [boolean]
.UNINDENT
.sp
If certificate validation enabled, then call will fail for certificate errors.
.INDENT 0.0
.TP
.B \-\-is\-default\-snapshot\-enabled [boolean]
.UNINDENT
.sp
If disabled then auto snapshots are not collected.
.INDENT 0.0
.TP
.B \-\-is\-failure\-retried [boolean]
.UNINDENT
.sp
If isFailureRetried enabled, then if call is failed then it will be retried.
.INDENT 0.0
.TP
.B \-\-is\-ipv6 [boolean]
.UNINDENT
.sp
If enabled, domain name will resolve to an IPv6 address.
.INDENT 0.0
.TP
.B \-\-is\-run\-now [boolean]
.UNINDENT
.sp
If isRunNow is enabled, then the monitor will run immediately.
.INDENT 0.0
.TP
.B \-\-is\-run\-once [boolean]
.UNINDENT
.sp
If runOnce is enabled, then the monitor will run once.
.INDENT 0.0
.TP
.B \-\-maintenance\-window\-schedule [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-network\-configuration [complex type]
.UNINDENT
.sp
Details of the network configuration. This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-scheduling\-policy [text]
.UNINDENT
.sp
Scheduling policy to decide the distribution of monitor executions on vantage points.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ALL, BATCHED_ROUND_ROBIN, ROUND_ROBIN
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-script\-id [text]
.UNINDENT
.sp
The \fI\%OCID\fP <\fBhttps://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm\fP> of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
.INDENT 0.0
.TP
.B \-\-script\-parameters [complex type]
.UNINDENT
.sp
List of script parameters in the monitor. This is valid only for SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null. Example: \fI[{“paramName”: “userid”, “paramValue”:”testuser”}]\fP
.sp
This option is a JSON list with items of type MonitorScriptParameter.  For documentation on MonitorScriptParameter please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/MonitorScriptParameter\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-status [text]
.UNINDENT
.sp
Enables or disables the monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DISABLED, ENABLED, INVALID
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-target [text]
.UNINDENT
.sp
Specify the endpoint on which to run the monitor. For BROWSER, REST, NETWORK, DNS and FTP monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is. For NETWORK monitor with TCP protocol, a port needs to be provided along with target. Example: 192.168.0.1:80.
.INDENT 0.0
.TP
.B \-\-timeout\-in\-seconds [integer]
.UNINDENT
.sp
Timeout in seconds. If isFailureRetried is true, then timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. If isFailureRetried is false, then timeout cannot be more than 50% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60 for Scripted REST, Scripted Browser and Browser monitors. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-auto\-prompt\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-connection\-timeout\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-max\-retries\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-proxy\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-read\-timeout\fP, \fB\-\-realm\-specific\-endpoint\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-i\fP, \fB\-v\fP
.SS Example using required parameter
.sp
Copy and paste the following example into a JSON file, replacing the example parameters with your own.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    oci apm\-synthetics monitor create\-scripted\-browser\-monitor \-\-generate\-param\-json\-input vantage\-points > vantage\-points.json
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Copy the following CLI commands into a file named example.sh. Run the command by typing “bash example.sh” and replacing the example parameters with your own.
.sp
Please note this sample will only work in the POSIX\-compliant bash\-like shell. You need to set up \fI\%the OCI configuration\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm#configfile\fP> and \fI\%appropriate security policies\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/Identity/Concepts/policygetstarted.htm\fP> before trying the examples.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    export apm_domain_id=<substitute\-value\-of\-apm_domain_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-scripted\-browser\-monitor.html#cmdoption\-apm\-domain\-id
    export display_name=<substitute\-value\-of\-display_name> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-scripted\-browser\-monitor.html#cmdoption\-display\-name
    export monitor_type=<substitute\-value\-of\-monitor_type> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-scripted\-browser\-monitor.html#cmdoption\-monitor\-type
    export repeat_interval_in_seconds=<substitute\-value\-of\-repeat_interval_in_seconds> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-scripted\-browser\-monitor.html#cmdoption\-repeat\-interval\-in\-seconds

    oci apm\-synthetics monitor create\-scripted\-browser\-monitor \-\-apm\-domain\-id $apm_domain_id \-\-display\-name $display_name \-\-monitor\-type $monitor_type \-\-repeat\-interval\-in\-seconds $repeat_interval_in_seconds \-\-vantage\-points file://vantage\-points.json
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBcreate\-scripted\-rest\-monitor\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.IP \(bu 2
\fI\%Example using required parameter\fP
.UNINDENT
.SS Description
.sp
Creates a new monitor.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci apm\-synthetics monitor create\-scripted\-rest\-monitor [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-apm\-domain\-id [text]
.UNINDENT
.sp
The APM domain ID the request is intended for.
.INDENT 0.0
.TP
.B \-\-display\-name [text]
.UNINDENT
.sp
Unique name that can be edited. The name should not contain any confidential information.
.INDENT 0.0
.TP
.B \-\-monitor\-type [text]
.UNINDENT
.sp
Type of monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
BROWSER, DNS, FTP, NETWORK, REST, SCRIPTED_BROWSER, SCRIPTED_REST, SQL
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-repeat\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds for Scripted REST, Scripted Browser and Browser monitors, and 60 seconds for REST monitor.
.INDENT 0.0
.TP
.B \-\-vantage\-points [complex type]
.UNINDENT
.sp
A list of public and dedicated vantage points from which to execute the monitor. Use /publicVantagePoints to fetch public vantage points, and /dedicatedVantagePoints to fetch dedicated vantage points.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-availability\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-batch\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Time interval between two runs in round robin batch mode (SchedulingPolicy \- BATCHED_ROUND_ROBIN).
.INDENT 0.0
.TP
.B \-\-defined\-tags [complex type]
.UNINDENT
.sp
Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: \fI{“foo\-namespace”: {“bar\-key”: “value”}}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-dns\-configuration [complex type]
.UNINDENT
.sp
Dns settings. This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-freeform\-tags [complex type]
.UNINDENT
.sp
Simple key\-value pair that is applied without any predefined name, type or scope. Exists for cross\-compatibility only. Example: \fI{“bar\-key”: “value”}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id –> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our “using CLI with advanced JSON options” link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-is\-failure\-retried [boolean]
.UNINDENT
.sp
If isFailureRetried enabled, then if call is failed then it will be retried.
.INDENT 0.0
.TP
.B \-\-is\-ipv6 [boolean]
.UNINDENT
.sp
If enabled, domain name will resolve to an IPv6 address.
.INDENT 0.0
.TP
.B \-\-is\-run\-now [boolean]
.UNINDENT
.sp
If isRunNow is enabled, then the monitor will run immediately.
.INDENT 0.0
.TP
.B \-\-is\-run\-once [boolean]
.UNINDENT
.sp
If runOnce is enabled, then the monitor will run once.
.INDENT 0.0
.TP
.B \-\-maintenance\-window\-schedule [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-network\-configuration [complex type]
.UNINDENT
.sp
Details of the network configuration. This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-req\-authentication\-scheme [text]
.UNINDENT
.sp
Request HTTP authentication scheme.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
NONE, RESOURCE_PRINCIPAL
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-scheduling\-policy [text]
.UNINDENT
.sp
Scheduling policy to decide the distribution of monitor executions on vantage points.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ALL, BATCHED_ROUND_ROBIN, ROUND_ROBIN
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-script\-id [text]
.UNINDENT
.sp
The \fI\%OCID\fP <\fBhttps://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm\fP> of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
.INDENT 0.0
.TP
.B \-\-script\-parameters [complex type]
.UNINDENT
.sp
List of script parameters in the monitor. This is valid only for SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null. Example: \fI[{“paramName”: “userid”, “paramValue”:”testuser”}]\fP
.sp
This option is a JSON list with items of type MonitorScriptParameter.  For documentation on MonitorScriptParameter please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/MonitorScriptParameter\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-status [text]
.UNINDENT
.sp
Enables or disables the monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DISABLED, ENABLED, INVALID
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-target [text]
.UNINDENT
.sp
Specify the endpoint on which to run the monitor. For BROWSER, REST, NETWORK, DNS and FTP monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is. For NETWORK monitor with TCP protocol, a port needs to be provided along with target. Example: 192.168.0.1:80.
.INDENT 0.0
.TP
.B \-\-timeout\-in\-seconds [integer]
.UNINDENT
.sp
Timeout in seconds. If isFailureRetried is true, then timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. If isFailureRetried is false, then timeout cannot be more than 50% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60 for Scripted REST, Scripted Browser and Browser monitors. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
.INDENT 0.0
.TP
.B \-\-verify\-response\-codes [complex type]
.UNINDENT
.sp
Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-auto\-prompt\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-connection\-timeout\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-max\-retries\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-proxy\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-read\-timeout\fP, \fB\-\-realm\-specific\-endpoint\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-i\fP, \fB\-v\fP
.SS Example using required parameter
.sp
Copy and paste the following example into a JSON file, replacing the example parameters with your own.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    oci apm\-synthetics monitor create\-scripted\-rest\-monitor \-\-generate\-param\-json\-input vantage\-points > vantage\-points.json
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Copy the following CLI commands into a file named example.sh. Run the command by typing “bash example.sh” and replacing the example parameters with your own.
.sp
Please note this sample will only work in the POSIX\-compliant bash\-like shell. You need to set up \fI\%the OCI configuration\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm#configfile\fP> and \fI\%appropriate security policies\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/Identity/Concepts/policygetstarted.htm\fP> before trying the examples.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    export apm_domain_id=<substitute\-value\-of\-apm_domain_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-scripted\-rest\-monitor.html#cmdoption\-apm\-domain\-id
    export display_name=<substitute\-value\-of\-display_name> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-scripted\-rest\-monitor.html#cmdoption\-display\-name
    export monitor_type=<substitute\-value\-of\-monitor_type> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-scripted\-rest\-monitor.html#cmdoption\-monitor\-type
    export repeat_interval_in_seconds=<substitute\-value\-of\-repeat_interval_in_seconds> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-scripted\-rest\-monitor.html#cmdoption\-repeat\-interval\-in\-seconds

    oci apm\-synthetics monitor create\-scripted\-rest\-monitor \-\-apm\-domain\-id $apm_domain_id \-\-display\-name $display_name \-\-monitor\-type $monitor_type \-\-repeat\-interval\-in\-seconds $repeat_interval_in_seconds \-\-vantage\-points file://vantage\-points.json
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBcreate\-sql\-monitor\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.IP \(bu 2
\fI\%Example using required parameter\fP
.UNINDENT
.SS Description
.sp
Creates a new monitor.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci apm\-synthetics monitor create\-sql\-monitor [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-apm\-domain\-id [text]
.UNINDENT
.sp
The APM domain ID the request is intended for.
.INDENT 0.0
.TP
.B \-\-display\-name [text]
.UNINDENT
.sp
Unique name that can be edited. The name should not contain any confidential information.
.INDENT 0.0
.TP
.B \-\-monitor\-type [text]
.UNINDENT
.sp
Type of monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
BROWSER, DNS, FTP, NETWORK, REST, SCRIPTED_BROWSER, SCRIPTED_REST, SQL
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-repeat\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds for Scripted REST, Scripted Browser and Browser monitors, and 60 seconds for REST monitor.
.INDENT 0.0
.TP
.B \-\-vantage\-points [complex type]
.UNINDENT
.sp
A list of public and dedicated vantage points from which to execute the monitor. Use /publicVantagePoints to fetch public vantage points, and /dedicatedVantagePoints to fetch dedicated vantage points.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-availability\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-batch\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Time interval between two runs in round robin batch mode (SchedulingPolicy \- BATCHED_ROUND_ROBIN).
.INDENT 0.0
.TP
.B \-\-connection\-string [text]
.UNINDENT
.sp
Database connection string. Required for database\-connection\-type CUSTOM_JDBC
.INDENT 0.0
.TP
.B \-\-database\-authentication\-details [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-database\-connection\-type [text]
.UNINDENT
.sp
Database connection type.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
CLOUD_WALLET, CUSTOM_JDBC
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-database\-query [text]
.UNINDENT
.sp
SQL query to be executed.
.INDENT 0.0
.TP
.B \-\-database\-role [text]
.UNINDENT
.sp
Database role.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DEFAULT, SYSASM, SYSBACKUP, SYSDBA, SYSDG, SYSKM, SYSOPER
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-database\-service\-name [text]
.UNINDENT
.sp
Service name of the database. Required for database\-connection\-type CLOUD_WALLET
.INDENT 0.0
.TP
.B \-\-database\-type [text]
.UNINDENT
.sp
Database type.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
MYSQL, ORACLE
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-database\-wallet [text]
.UNINDENT
.sp
The database wallet configuration zip file path. Required for database\-connection\-type CLOUD_WALLET
.INDENT 0.0
.TP
.B \-\-defined\-tags [complex type]
.UNINDENT
.sp
Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: \fI{“foo\-namespace”: {“bar\-key”: “value”}}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-dns\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-freeform\-tags [complex type]
.UNINDENT
.sp
Simple key\-value pair that is applied without any predefined name, type or scope. Exists for cross\-compatibility only. Example: \fI{“bar\-key”: “value”}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id –> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our “using CLI with advanced JSON options” link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-is\-failure\-retried [boolean]
.UNINDENT
.sp
If isFailureRetried is enabled, then a failed call will be retried.
.INDENT 0.0
.TP
.B \-\-is\-ipv6 [boolean]
.UNINDENT
.sp
If enabled, domain name will resolve to an IPv6 address.
.INDENT 0.0
.TP
.B \-\-is\-run\-now [boolean]
.UNINDENT
.sp
If isRunNow is enabled, then the monitor will run immediately.
.INDENT 0.0
.TP
.B \-\-is\-run\-once [boolean]
.UNINDENT
.sp
If runOnce is enabled, then the monitor will run once.
.INDENT 0.0
.TP
.B \-\-maintenance\-window\-schedule [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-scheduling\-policy [text]
.UNINDENT
.sp
Scheduling policy to decide the distribution of monitor executions on vantage points.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ALL, BATCHED_ROUND_ROBIN, ROUND_ROBIN
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-script\-id [text]
.UNINDENT
.sp
The \fI\%OCID\fP <\fBhttps://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm\fP> of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
.INDENT 0.0
.TP
.B \-\-script\-parameters [complex type]
.UNINDENT
.sp
List of script parameters in the monitor. This is valid only for SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null. Example: \fI[{“paramName”: “userid”, “paramValue”:”testuser”}]\fP
.sp
This option is a JSON list with items of type MonitorScriptParameter.  For documentation on MonitorScriptParameter please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/MonitorScriptParameter\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-status [text]
.UNINDENT
.sp
Enables or disables the monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DISABLED, ENABLED, INVALID
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-target [text]
.UNINDENT
.sp
Specify the endpoint on which to run the monitor. For BROWSER, REST, NETWORK, DNS and FTP monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is. For NETWORK monitor with TCP protocol, a port needs to be provided along with target. Example: 192.168.0.1:80.
.INDENT 0.0
.TP
.B \-\-timeout\-in\-seconds [integer]
.UNINDENT
.sp
Timeout in seconds. If isFailureRetried is true, then timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. If isFailureRetried is false, then timeout cannot be more than 50% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60 for Scripted REST, Scripted Browser and Browser monitors. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-auto\-prompt\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-connection\-timeout\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-max\-retries\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-proxy\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-read\-timeout\fP, \fB\-\-realm\-specific\-endpoint\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-i\fP, \fB\-v\fP
.SS Example using required parameter
.sp
Copy and paste the following example into a JSON file, replacing the example parameters with your own.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    oci apm\-synthetics monitor create\-sql\-monitor \-\-generate\-param\-json\-input vantage\-points > vantage\-points.json
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Copy the following CLI commands into a file named example.sh. Run the command by typing “bash example.sh” and replacing the example parameters with your own.
.sp
Please note this sample will only work in the POSIX\-compliant bash\-like shell. You need to set up \fI\%the OCI configuration\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm#configfile\fP> and \fI\%appropriate security policies\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/Identity/Concepts/policygetstarted.htm\fP> before trying the examples.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    export apm_domain_id=<substitute\-value\-of\-apm_domain_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-sql\-monitor.html#cmdoption\-apm\-domain\-id
    export display_name=<substitute\-value\-of\-display_name> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-sql\-monitor.html#cmdoption\-display\-name
    export monitor_type=<substitute\-value\-of\-monitor_type> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-sql\-monitor.html#cmdoption\-monitor\-type
    export repeat_interval_in_seconds=<substitute\-value\-of\-repeat_interval_in_seconds> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/create\-sql\-monitor.html#cmdoption\-repeat\-interval\-in\-seconds

    oci apm\-synthetics monitor create\-sql\-monitor \-\-apm\-domain\-id $apm_domain_id \-\-display\-name $display_name \-\-monitor\-type $monitor_type \-\-repeat\-interval\-in\-seconds $repeat_interval_in_seconds \-\-vantage\-points file://vantage\-points.json
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBdelete\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.IP \(bu 2
\fI\%Example using required parameter\fP
.UNINDENT
.SS Description
.sp
Deletes the specified monitor.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci apm\-synthetics monitor delete [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-apm\-domain\-id [text]
.UNINDENT
.sp
The APM domain ID the request is intended for.
.INDENT 0.0
.TP
.B \-\-monitor\-id [text]
.UNINDENT
.sp
The OCID of the monitor.
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-force
.UNINDENT
.sp
Perform deletion without prompting for confirmation.
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id –> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our “using CLI with advanced JSON options” link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-if\-match [text]
.UNINDENT
.sp
For optimistic concurrency control. In the PUT or DELETE call for a resource, set the \fIif\-match\fP parameter to the value of the etag from a previous GET or POST response for that resource. The resource will be updated or deleted only if the etag you provide matches the resource’s current etag value.
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-auto\-prompt\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-connection\-timeout\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-max\-retries\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-proxy\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-read\-timeout\fP, \fB\-\-realm\-specific\-endpoint\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-i\fP, \fB\-v\fP
.SS Example using required parameter
.sp
Copy the following CLI commands into a file named example.sh. Run the command by typing “bash example.sh” and replacing the example parameters with your own.
.sp
Please note this sample will only work in the POSIX\-compliant bash\-like shell. You need to set up \fI\%the OCI configuration\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm#configfile\fP> and \fI\%appropriate security policies\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/Identity/Concepts/policygetstarted.htm\fP> before trying the examples.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    export apm_domain_id=<substitute\-value\-of\-apm_domain_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/delete.html#cmdoption\-apm\-domain\-id
    export monitor_id=<substitute\-value\-of\-monitor_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/delete.html#cmdoption\-monitor\-id

    oci apm\-synthetics monitor delete \-\-apm\-domain\-id $apm_domain_id \-\-monitor\-id $monitor_id
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBget\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.IP \(bu 2
\fI\%Example using required parameter\fP
.UNINDENT
.SS Description
.sp
Gets the configuration of the monitor identified by the OCID.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci apm\-synthetics monitor get [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-apm\-domain\-id [text]
.UNINDENT
.sp
The APM domain ID the request is intended for.
.INDENT 0.0
.TP
.B \-\-monitor\-id [text]
.UNINDENT
.sp
The OCID of the monitor.
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id –> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our “using CLI with advanced JSON options” link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-auto\-prompt\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-connection\-timeout\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-max\-retries\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-proxy\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-read\-timeout\fP, \fB\-\-realm\-specific\-endpoint\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-i\fP, \fB\-v\fP
.SS Example using required parameter
.sp
Copy the following CLI commands into a file named example.sh. Run the command by typing “bash example.sh” and replacing the example parameters with your own.
.sp
Please note this sample will only work in the POSIX\-compliant bash\-like shell. You need to set up \fI\%the OCI configuration\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm#configfile\fP> and \fI\%appropriate security policies\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/Identity/Concepts/policygetstarted.htm\fP> before trying the examples.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    export apm_domain_id=<substitute\-value\-of\-apm_domain_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/get.html#cmdoption\-apm\-domain\-id
    export monitor_id=<substitute\-value\-of\-monitor_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/get.html#cmdoption\-monitor\-id

    oci apm\-synthetics monitor get \-\-apm\-domain\-id $apm_domain_id \-\-monitor\-id $monitor_id
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBupdate\-browser\-monitor\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.IP \(bu 2
\fI\%Example using required parameter\fP
.UNINDENT
.SS Description
.sp
Updates the monitor.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci apm\-synthetics monitor update\-browser\-monitor [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-apm\-domain\-id [text]
.UNINDENT
.sp
The APM domain ID the request is intended for.
.INDENT 0.0
.TP
.B \-\-monitor\-id [text]
.UNINDENT
.sp
The OCID of the monitor.
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-availability\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-batch\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Time interval between two runs in round robin batch mode (SchedulingPolicy \- BATCHED_ROUND_ROBIN).
.INDENT 0.0
.TP
.B \-\-defined\-tags [complex type]
.UNINDENT
.sp
Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: \fI{“foo\-namespace”: {“bar\-key”: “value”}}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-display\-name [text]
.UNINDENT
.sp
Unique name that can be edited. The name should not contain any confidential information.
.INDENT 0.0
.TP
.B \-\-dns\-configuration [complex type]
.UNINDENT
.sp
Dns settings. This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-force
.UNINDENT
.sp
Perform update without prompting for confirmation.
.INDENT 0.0
.TP
.B \-\-freeform\-tags [complex type]
.UNINDENT
.sp
Simple key\-value pair that is applied without any predefined name, type or scope. Exists for cross\-compatibility only. Example: \fI{“bar\-key”: “value”}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id –> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our “using CLI with advanced JSON options” link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-if\-match [text]
.UNINDENT
.sp
For optimistic concurrency control. In the PUT or DELETE call for a resource, set the \fIif\-match\fP parameter to the value of the etag from a previous GET or POST response for that resource. The resource will be updated or deleted only if the etag you provide matches the resource’s current etag value.
.INDENT 0.0
.TP
.B \-\-is\-certificate\-validation\-enabled [boolean]
.UNINDENT
.sp
If validation enabled, then call will fail for certificate errors.
.INDENT 0.0
.TP
.B \-\-is\-default\-snapshot\-enabled [boolean]
.UNINDENT
.sp
If disabled then auto snapshots are not collected.
.INDENT 0.0
.TP
.B \-\-is\-failure\-retried [boolean]
.UNINDENT
.sp
If isFailureRetried enabled, then if call is failed then it will be retried.
.INDENT 0.0
.TP
.B \-\-is\-ipv6 [boolean]
.UNINDENT
.sp
If enabled, domain name will resolve to an IPv6 address.
.INDENT 0.0
.TP
.B \-\-is\-run\-now [boolean]
.UNINDENT
.sp
If isRunNow is enabled, then the monitor will run immediately.
.INDENT 0.0
.TP
.B \-\-is\-run\-once [boolean]
.UNINDENT
.sp
If runOnce is enabled, then the monitor will run once.
.INDENT 0.0
.TP
.B \-\-maintenance\-window\-schedule [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-network\-configuration [complex type]
.UNINDENT
.sp
Details of the network configuration. This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-repeat\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds for Scripted REST, Scripted Browser and Browser monitors, and 60 seconds for REST monitor.
.INDENT 0.0
.TP
.B \-\-scheduling\-policy [text]
.UNINDENT
.sp
Scheduling policy to decide the distribution of monitor executions on vantage points.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ALL, BATCHED_ROUND_ROBIN, ROUND_ROBIN
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-script\-id [text]
.UNINDENT
.sp
The \fI\%OCID\fP <\fBhttps://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm\fP> of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
.INDENT 0.0
.TP
.B \-\-script\-parameters [complex type]
.UNINDENT
.sp
List of script parameters in the monitor. This is valid only for SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null. Example: \fI[{“paramName”: “userid”, “paramValue”:”testuser”}]\fP
.sp
This option is a JSON list with items of type MonitorScriptParameter.  For documentation on MonitorScriptParameter please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/MonitorScriptParameter\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-status [text]
.UNINDENT
.sp
Enables or disables the monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DISABLED, ENABLED, INVALID
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-target [text]
.UNINDENT
.sp
Specify the endpoint on which to run the monitor. For BROWSER, REST, NETWORK, DNS and FTP monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is. For NETWORK monitor with TCP protocol, a port needs to be provided along with target. Example: 192.168.0.1:80.
.INDENT 0.0
.TP
.B \-\-timeout\-in\-seconds [integer]
.UNINDENT
.sp
Timeout in seconds. If isFailureRetried is true, then timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. If isFailureRetried is false, then timeout cannot be more than 50% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60 for Scripted REST, Scripted Browser and Browser monitors. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
.INDENT 0.0
.TP
.B \-\-vantage\-points [complex type]
.UNINDENT
.sp
A list of public and dedicated vantage points from which to execute the monitor. Use /publicVantagePoints to fetch public vantage points, and /dedicatedVantagePoints to fetch dedicated vantage points.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-verify\-response\-codes [complex type]
.UNINDENT
.sp
Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-verify\-texts [complex type]
.UNINDENT
.sp
Verify all the search strings present in response. If any search string is not present in the response, then it will be considered as a failure.
.sp
This option is a JSON list with items of type VerifyText.  For documentation on VerifyText please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/VerifyText\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-auto\-prompt\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-connection\-timeout\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-max\-retries\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-proxy\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-read\-timeout\fP, \fB\-\-realm\-specific\-endpoint\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-i\fP, \fB\-v\fP
.SS Example using required parameter
.sp
Copy the following CLI commands into a file named example.sh. Run the command by typing “bash example.sh” and replacing the example parameters with your own.
.sp
Please note this sample will only work in the POSIX\-compliant bash\-like shell. You need to set up \fI\%the OCI configuration\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm#configfile\fP> and \fI\%appropriate security policies\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/Identity/Concepts/policygetstarted.htm\fP> before trying the examples.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    export apm_domain_id=<substitute\-value\-of\-apm_domain_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/update\-browser\-monitor.html#cmdoption\-apm\-domain\-id
    export monitor_id=<substitute\-value\-of\-monitor_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/update\-browser\-monitor.html#cmdoption\-monitor\-id

    oci apm\-synthetics monitor update\-browser\-monitor \-\-apm\-domain\-id $apm_domain_id \-\-monitor\-id $monitor_id
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBupdate\-dns\-sec\-monitor\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.IP \(bu 2
\fI\%Example using required parameter\fP
.UNINDENT
.SS Description
.sp
Updates the monitor.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci apm\-synthetics monitor update\-dns\-sec\-monitor [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-apm\-domain\-id [text]
.UNINDENT
.sp
The APM domain ID the request is intended for.
.INDENT 0.0
.TP
.B \-\-monitor\-id [text]
.UNINDENT
.sp
The OCID of the monitor.
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-availability\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-batch\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Time interval between two runs in round robin batch mode (SchedulingPolicy \- BATCHED_ROUND_ROBIN).
.INDENT 0.0
.TP
.B \-\-defined\-tags [complex type]
.UNINDENT
.sp
Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: \fI{“foo\-namespace”: {“bar\-key”: “value”}}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-display\-name [text]
.UNINDENT
.sp
Unique name that can be edited. The name should not contain any confidential information.
.INDENT 0.0
.TP
.B \-\-dns\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-force
.UNINDENT
.sp
Perform update without prompting for confirmation.
.INDENT 0.0
.TP
.B \-\-freeform\-tags [complex type]
.UNINDENT
.sp
Simple key\-value pair that is applied without any predefined name, type or scope. Exists for cross\-compatibility only. Example: \fI{“bar\-key”: “value”}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id –> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our “using CLI with advanced JSON options” link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-if\-match [text]
.UNINDENT
.sp
For optimistic concurrency control. In the PUT or DELETE call for a resource, set the \fIif\-match\fP parameter to the value of the etag from a previous GET or POST response for that resource. The resource will be updated or deleted only if the etag you provide matches the resource’s current etag value.
.INDENT 0.0
.TP
.B \-\-is\-failure\-retried [boolean]
.UNINDENT
.sp
If isFailureRetried is enabled, then a failed call will be retried.
.INDENT 0.0
.TP
.B \-\-is\-ipv6 [boolean]
.UNINDENT
.sp
If enabled, domain name will resolve to an IPv6 address.
.INDENT 0.0
.TP
.B \-\-is\-run\-now [boolean]
.UNINDENT
.sp
If isRunNow is enabled, then the monitor will run immediately.
.INDENT 0.0
.TP
.B \-\-is\-run\-once [boolean]
.UNINDENT
.sp
If runOnce is enabled, then the monitor will run once.
.INDENT 0.0
.TP
.B \-\-maintenance\-window\-schedule [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-record\-type [text]
.UNINDENT
.sp
DNS record type.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
A, AAAA, ANY, CNAME, DNSKEY, DS, MX, NS, NSEC, NULL_REC, PTR, RRSIG, SOA, TXT
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-repeat\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds for Scripted REST, Scripted Browser and Browser monitors, and 60 seconds for REST monitor.
.INDENT 0.0
.TP
.B \-\-scheduling\-policy [text]
.UNINDENT
.sp
Scheduling policy to decide the distribution of monitor executions on vantage points.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ALL, BATCHED_ROUND_ROBIN, ROUND_ROBIN
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-script\-id [text]
.UNINDENT
.sp
The \fI\%OCID\fP <\fBhttps://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm\fP> of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
.INDENT 0.0
.TP
.B \-\-script\-parameters [complex type]
.UNINDENT
.sp
List of script parameters in the monitor. This is valid only for SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null. Example: \fI[{“paramName”: “userid”, “paramValue”:”testuser”}]\fP
.sp
This option is a JSON list with items of type MonitorScriptParameter.  For documentation on MonitorScriptParameter please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/MonitorScriptParameter\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-status [text]
.UNINDENT
.sp
Enables or disables the monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DISABLED, ENABLED, INVALID
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-target [text]
.UNINDENT
.sp
Specify the endpoint on which to run the monitor. For BROWSER, REST, NETWORK, DNS and FTP monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is. For NETWORK monitor with TCP protocol, a port needs to be provided along with target. Example: 192.168.0.1:80.
.INDENT 0.0
.TP
.B \-\-timeout\-in\-seconds [integer]
.UNINDENT
.sp
Timeout in seconds. If isFailureRetried is true, then timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. If isFailureRetried is false, then timeout cannot be more than 50% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60 for Scripted REST, Scripted Browser and Browser monitors. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
.INDENT 0.0
.TP
.B \-\-vantage\-points [complex type]
.UNINDENT
.sp
A list of public and dedicated vantage points from which to execute the monitor. Use /publicVantagePoints to fetch public vantage points, and /dedicatedVantagePoints to fetch dedicated vantage points.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-verify\-response\-content [text]
.UNINDENT
.sp
Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-auto\-prompt\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-connection\-timeout\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-max\-retries\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-proxy\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-read\-timeout\fP, \fB\-\-realm\-specific\-endpoint\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-i\fP, \fB\-v\fP
.SS Example using required parameter
.sp
Copy the following CLI commands into a file named example.sh. Run the command by typing “bash example.sh” and replacing the example parameters with your own.
.sp
Please note this sample will only work in the POSIX\-compliant bash\-like shell. You need to set up \fI\%the OCI configuration\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm#configfile\fP> and \fI\%appropriate security policies\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/Identity/Concepts/policygetstarted.htm\fP> before trying the examples.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    export apm_domain_id=<substitute\-value\-of\-apm_domain_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/update\-dns\-sec\-monitor.html#cmdoption\-apm\-domain\-id
    export monitor_id=<substitute\-value\-of\-monitor_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/update\-dns\-sec\-monitor.html#cmdoption\-monitor\-id

    oci apm\-synthetics monitor update\-dns\-sec\-monitor \-\-apm\-domain\-id $apm_domain_id \-\-monitor\-id $monitor_id
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBupdate\-dns\-server\-monitor\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.IP \(bu 2
\fI\%Example using required parameter\fP
.UNINDENT
.SS Description
.sp
Updates the monitor.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci apm\-synthetics monitor update\-dns\-server\-monitor [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-apm\-domain\-id [text]
.UNINDENT
.sp
The APM domain ID the request is intended for.
.INDENT 0.0
.TP
.B \-\-monitor\-id [text]
.UNINDENT
.sp
The OCID of the monitor.
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-availability\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-batch\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Time interval between two runs in round robin batch mode (SchedulingPolicy \- BATCHED_ROUND_ROBIN).
.INDENT 0.0
.TP
.B \-\-defined\-tags [complex type]
.UNINDENT
.sp
Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: \fI{“foo\-namespace”: {“bar\-key”: “value”}}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-display\-name [text]
.UNINDENT
.sp
Unique name that can be edited. The name should not contain any confidential information.
.INDENT 0.0
.TP
.B \-\-dns\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-force
.UNINDENT
.sp
Perform update without prompting for confirmation.
.INDENT 0.0
.TP
.B \-\-freeform\-tags [complex type]
.UNINDENT
.sp
Simple key\-value pair that is applied without any predefined name, type or scope. Exists for cross\-compatibility only. Example: \fI{“bar\-key”: “value”}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id –> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our “using CLI with advanced JSON options” link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-if\-match [text]
.UNINDENT
.sp
For optimistic concurrency control. In the PUT or DELETE call for a resource, set the \fIif\-match\fP parameter to the value of the etag from a previous GET or POST response for that resource. The resource will be updated or deleted only if the etag you provide matches the resource’s current etag value.
.INDENT 0.0
.TP
.B \-\-is\-failure\-retried [boolean]
.UNINDENT
.sp
If isFailureRetried is enabled, then a failed call will be retried.
.INDENT 0.0
.TP
.B \-\-is\-ipv6 [boolean]
.UNINDENT
.sp
If enabled, domain name will resolve to an IPv6 address.
.INDENT 0.0
.TP
.B \-\-is\-query\-recursive [boolean]
.UNINDENT
.sp
If isQueryRecursive is enabled, then queries will be sent recursively to the target server.
.INDENT 0.0
.TP
.B \-\-is\-run\-now [boolean]
.UNINDENT
.sp
If isRunNow is enabled, then the monitor will run immediately.
.INDENT 0.0
.TP
.B \-\-is\-run\-once [boolean]
.UNINDENT
.sp
If runOnce is enabled, then the monitor will run once.
.INDENT 0.0
.TP
.B \-\-maintenance\-window\-schedule [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-name\-server [text]
.UNINDENT
.sp
Name of the server that will be used to perform DNS lookup.
.INDENT 0.0
.TP
.B \-\-network\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-protocol [text]
.UNINDENT
.sp
Type of protocol.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
TCP, UDP
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-record\-type [text]
.UNINDENT
.sp
DNS record type.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
A, AAAA, ANY, CNAME, DNSKEY, DS, MX, NS, NSEC, NULL_REC, PTR, RRSIG, SOA, TXT
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-repeat\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds for Scripted REST, Scripted Browser and Browser monitors, and 60 seconds for REST monitor.
.INDENT 0.0
.TP
.B \-\-scheduling\-policy [text]
.UNINDENT
.sp
Scheduling policy to decide the distribution of monitor executions on vantage points.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ALL, BATCHED_ROUND_ROBIN, ROUND_ROBIN
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-script\-id [text]
.UNINDENT
.sp
The \fI\%OCID\fP <\fBhttps://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm\fP> of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
.INDENT 0.0
.TP
.B \-\-script\-parameters [complex type]
.UNINDENT
.sp
List of script parameters in the monitor. This is valid only for SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null. Example: \fI[{“paramName”: “userid”, “paramValue”:”testuser”}]\fP
.sp
This option is a JSON list with items of type MonitorScriptParameter.  For documentation on MonitorScriptParameter please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/MonitorScriptParameter\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-status [text]
.UNINDENT
.sp
Enables or disables the monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DISABLED, ENABLED, INVALID
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-target [text]
.UNINDENT
.sp
Specify the endpoint on which to run the monitor. For BROWSER, REST, NETWORK, DNS and FTP monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is. For NETWORK monitor with TCP protocol, a port needs to be provided along with target. Example: 192.168.0.1:80.
.INDENT 0.0
.TP
.B \-\-timeout\-in\-seconds [integer]
.UNINDENT
.sp
Timeout in seconds. If isFailureRetried is true, then timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. If isFailureRetried is false, then timeout cannot be more than 50% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60 for Scripted REST, Scripted Browser and Browser monitors. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
.INDENT 0.0
.TP
.B \-\-vantage\-points [complex type]
.UNINDENT
.sp
A list of public and dedicated vantage points from which to execute the monitor. Use /publicVantagePoints to fetch public vantage points, and /dedicatedVantagePoints to fetch dedicated vantage points.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-verify\-response\-content [text]
.UNINDENT
.sp
Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-auto\-prompt\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-connection\-timeout\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-max\-retries\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-proxy\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-read\-timeout\fP, \fB\-\-realm\-specific\-endpoint\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-i\fP, \fB\-v\fP
.SS Example using required parameter
.sp
Copy the following CLI commands into a file named example.sh. Run the command by typing “bash example.sh” and replacing the example parameters with your own.
.sp
Please note this sample will only work in the POSIX\-compliant bash\-like shell. You need to set up \fI\%the OCI configuration\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm#configfile\fP> and \fI\%appropriate security policies\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/Identity/Concepts/policygetstarted.htm\fP> before trying the examples.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    export apm_domain_id=<substitute\-value\-of\-apm_domain_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/update\-dns\-server\-monitor.html#cmdoption\-apm\-domain\-id
    export monitor_id=<substitute\-value\-of\-monitor_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/update\-dns\-server\-monitor.html#cmdoption\-monitor\-id

    oci apm\-synthetics monitor update\-dns\-server\-monitor \-\-apm\-domain\-id $apm_domain_id \-\-monitor\-id $monitor_id
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBupdate\-dns\-trace\-monitor\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.IP \(bu 2
\fI\%Example using required parameter\fP
.UNINDENT
.SS Description
.sp
Updates the monitor.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci apm\-synthetics monitor update\-dns\-trace\-monitor [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-apm\-domain\-id [text]
.UNINDENT
.sp
The APM domain ID the request is intended for.
.INDENT 0.0
.TP
.B \-\-monitor\-id [text]
.UNINDENT
.sp
The OCID of the monitor.
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-availability\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-batch\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Time interval between two runs in round robin batch mode (SchedulingPolicy \- BATCHED_ROUND_ROBIN).
.INDENT 0.0
.TP
.B \-\-defined\-tags [complex type]
.UNINDENT
.sp
Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: \fI{“foo\-namespace”: {“bar\-key”: “value”}}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-display\-name [text]
.UNINDENT
.sp
Unique name that can be edited. The name should not contain any confidential information.
.INDENT 0.0
.TP
.B \-\-dns\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-force
.UNINDENT
.sp
Perform update without prompting for confirmation.
.INDENT 0.0
.TP
.B \-\-freeform\-tags [complex type]
.UNINDENT
.sp
Simple key\-value pair that is applied without any predefined name, type or scope. Exists for cross\-compatibility only. Example: \fI{“bar\-key”: “value”}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id –> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our “using CLI with advanced JSON options” link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-if\-match [text]
.UNINDENT
.sp
For optimistic concurrency control. In the PUT or DELETE call for a resource, set the \fIif\-match\fP parameter to the value of the etag from a previous GET or POST response for that resource. The resource will be updated or deleted only if the etag you provide matches the resource’s current etag value.
.INDENT 0.0
.TP
.B \-\-is\-failure\-retried [boolean]
.UNINDENT
.sp
If isFailureRetried is enabled, then a failed call will be retried.
.INDENT 0.0
.TP
.B \-\-is\-ipv6 [boolean]
.UNINDENT
.sp
If enabled, domain name will resolve to an IPv6 address.
.INDENT 0.0
.TP
.B \-\-is\-run\-now [boolean]
.UNINDENT
.sp
If isRunNow is enabled, then the monitor will run immediately.
.INDENT 0.0
.TP
.B \-\-is\-run\-once [boolean]
.UNINDENT
.sp
If runOnce is enabled, then the monitor will run once.
.INDENT 0.0
.TP
.B \-\-maintenance\-window\-schedule [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-protocol [text]
.UNINDENT
.sp
Type of protocol.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
TCP, UDP
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-record\-type [text]
.UNINDENT
.sp
DNS record type.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
A, AAAA, ANY, CNAME, DNSKEY, DS, MX, NS, NSEC, NULL_REC, PTR, RRSIG, SOA, TXT
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-repeat\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds for Scripted REST, Scripted Browser and Browser monitors, and 60 seconds for REST monitor.
.INDENT 0.0
.TP
.B \-\-scheduling\-policy [text]
.UNINDENT
.sp
Scheduling policy to decide the distribution of monitor executions on vantage points.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ALL, BATCHED_ROUND_ROBIN, ROUND_ROBIN
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-script\-id [text]
.UNINDENT
.sp
The \fI\%OCID\fP <\fBhttps://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm\fP> of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
.INDENT 0.0
.TP
.B \-\-script\-parameters [complex type]
.UNINDENT
.sp
List of script parameters in the monitor. This is valid only for SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null. Example: \fI[{“paramName”: “userid”, “paramValue”:”testuser”}]\fP
.sp
This option is a JSON list with items of type MonitorScriptParameter.  For documentation on MonitorScriptParameter please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/MonitorScriptParameter\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-status [text]
.UNINDENT
.sp
Enables or disables the monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DISABLED, ENABLED, INVALID
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-target [text]
.UNINDENT
.sp
Specify the endpoint on which to run the monitor. For BROWSER, REST, NETWORK, DNS and FTP monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is. For NETWORK monitor with TCP protocol, a port needs to be provided along with target. Example: 192.168.0.1:80.
.INDENT 0.0
.TP
.B \-\-timeout\-in\-seconds [integer]
.UNINDENT
.sp
Timeout in seconds. If isFailureRetried is true, then timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. If isFailureRetried is false, then timeout cannot be more than 50% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60 for Scripted REST, Scripted Browser and Browser monitors. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
.INDENT 0.0
.TP
.B \-\-vantage\-points [complex type]
.UNINDENT
.sp
A list of public and dedicated vantage points from which to execute the monitor. Use /publicVantagePoints to fetch public vantage points, and /dedicatedVantagePoints to fetch dedicated vantage points.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-verify\-response\-content [text]
.UNINDENT
.sp
Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-auto\-prompt\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-connection\-timeout\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-max\-retries\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-proxy\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-read\-timeout\fP, \fB\-\-realm\-specific\-endpoint\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-i\fP, \fB\-v\fP
.SS Example using required parameter
.sp
Copy the following CLI commands into a file named example.sh. Run the command by typing “bash example.sh” and replacing the example parameters with your own.
.sp
Please note this sample will only work in the POSIX\-compliant bash\-like shell. You need to set up \fI\%the OCI configuration\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm#configfile\fP> and \fI\%appropriate security policies\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/Identity/Concepts/policygetstarted.htm\fP> before trying the examples.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    export apm_domain_id=<substitute\-value\-of\-apm_domain_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/update\-dns\-trace\-monitor.html#cmdoption\-apm\-domain\-id
    export monitor_id=<substitute\-value\-of\-monitor_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/update\-dns\-trace\-monitor.html#cmdoption\-monitor\-id

    oci apm\-synthetics monitor update\-dns\-trace\-monitor \-\-apm\-domain\-id $apm_domain_id \-\-monitor\-id $monitor_id
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBupdate\-ftp\-monitor\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.IP \(bu 2
\fI\%Example using required parameter\fP
.UNINDENT
.SS Description
.sp
Updates the monitor.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci apm\-synthetics monitor update\-ftp\-monitor [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-apm\-domain\-id [text]
.UNINDENT
.sp
The APM domain ID the request is intended for.
.INDENT 0.0
.TP
.B \-\-monitor\-id [text]
.UNINDENT
.sp
The OCID of the monitor.
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-availability\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-batch\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Time interval between two runs in round robin batch mode (SchedulingPolicy \- BATCHED_ROUND_ROBIN).
.INDENT 0.0
.TP
.B \-\-defined\-tags [complex type]
.UNINDENT
.sp
Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: \fI{“foo\-namespace”: {“bar\-key”: “value”}}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-display\-name [text]
.UNINDENT
.sp
Unique name that can be edited. The name should not contain any confidential information.
.INDENT 0.0
.TP
.B \-\-dns\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-download\-size\-limit\-in\-bytes [integer]
.UNINDENT
.sp
Download size limit in Bytes, at which to stop the transfer. Maximum download size limit is 5 MiB.
.INDENT 0.0
.TP
.B \-\-force
.UNINDENT
.sp
Perform update without prompting for confirmation.
.INDENT 0.0
.TP
.B \-\-freeform\-tags [complex type]
.UNINDENT
.sp
Simple key\-value pair that is applied without any predefined name, type or scope. Exists for cross\-compatibility only. Example: \fI{“bar\-key”: “value”}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id –> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our “using CLI with advanced JSON options” link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-ftp\-basic\-authentication\-details [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-ftp\-request\-type [text]
.UNINDENT
.sp
FTP monitor request type.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DOWNLOAD, LIST, UPLOAD
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-if\-match [text]
.UNINDENT
.sp
For optimistic concurrency control. In the PUT or DELETE call for a resource, set the \fIif\-match\fP parameter to the value of the etag from a previous GET or POST response for that resource. The resource will be updated or deleted only if the etag you provide matches the resource’s current etag value.
.INDENT 0.0
.TP
.B \-\-is\-active\-mode [boolean]
.UNINDENT
.sp
If enabled, Active mode will be used for the FTP connection.
.INDENT 0.0
.TP
.B \-\-is\-failure\-retried [boolean]
.UNINDENT
.sp
If isFailureRetried is enabled, then a failed call will be retried.
.INDENT 0.0
.TP
.B \-\-is\-ipv6 [boolean]
.UNINDENT
.sp
If enabled, domain name will resolve to an IPv6 address.
.INDENT 0.0
.TP
.B \-\-is\-run\-now [boolean]
.UNINDENT
.sp
If isRunNow is enabled, then the monitor will run immediately.
.INDENT 0.0
.TP
.B \-\-is\-run\-once [boolean]
.UNINDENT
.sp
If runOnce is enabled, then the monitor will run once.
.INDENT 0.0
.TP
.B \-\-maintenance\-window\-schedule [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-network\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-repeat\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds for Scripted REST, Scripted Browser and Browser monitors, and 60 seconds for REST monitor.
.INDENT 0.0
.TP
.B \-\-scheduling\-policy [text]
.UNINDENT
.sp
Scheduling policy to decide the distribution of monitor executions on vantage points.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ALL, BATCHED_ROUND_ROBIN, ROUND_ROBIN
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-script\-id [text]
.UNINDENT
.sp
The \fI\%OCID\fP <\fBhttps://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm\fP> of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
.INDENT 0.0
.TP
.B \-\-script\-parameters [complex type]
.UNINDENT
.sp
List of script parameters in the monitor. This is valid only for SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null. Example: \fI[{“paramName”: “userid”, “paramValue”:”testuser”}]\fP
.sp
This option is a JSON list with items of type MonitorScriptParameter.  For documentation on MonitorScriptParameter please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/MonitorScriptParameter\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-status [text]
.UNINDENT
.sp
Enables or disables the monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DISABLED, ENABLED, INVALID
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-target [text]
.UNINDENT
.sp
Specify the endpoint on which to run the monitor. For BROWSER, REST, NETWORK, DNS and FTP monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is. For NETWORK monitor with TCP protocol, a port needs to be provided along with target. Example: 192.168.0.1:80.
.INDENT 0.0
.TP
.B \-\-timeout\-in\-seconds [integer]
.UNINDENT
.sp
Timeout in seconds. If isFailureRetried is true, then timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. If isFailureRetried is false, then timeout cannot be more than 50% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60 for Scripted REST, Scripted Browser and Browser monitors. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
.INDENT 0.0
.TP
.B \-\-upload\-file\-size\-in\-bytes [integer]
.UNINDENT
.sp
File upload size in Bytes, at which to stop the transfer. Maximum upload size is 5 MiB.
.INDENT 0.0
.TP
.B \-\-vantage\-points [complex type]
.UNINDENT
.sp
A list of public and dedicated vantage points from which to execute the monitor. Use /publicVantagePoints to fetch public vantage points, and /dedicatedVantagePoints to fetch dedicated vantage points.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-verify\-response\-codes [complex type]
.UNINDENT
.sp
Expected FTP response codes. For status code range, set values such as 2xx, 3xx.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-verify\-response\-content [text]
.UNINDENT
.sp
Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-auto\-prompt\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-connection\-timeout\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-max\-retries\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-proxy\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-read\-timeout\fP, \fB\-\-realm\-specific\-endpoint\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-i\fP, \fB\-v\fP
.SS Example using required parameter
.sp
Copy the following CLI commands into a file named example.sh. Run the command by typing “bash example.sh” and replacing the example parameters with your own.
.sp
Please note this sample will only work in the POSIX\-compliant bash\-like shell. You need to set up \fI\%the OCI configuration\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm#configfile\fP> and \fI\%appropriate security policies\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/Identity/Concepts/policygetstarted.htm\fP> before trying the examples.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    export apm_domain_id=<substitute\-value\-of\-apm_domain_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/update\-ftp\-monitor.html#cmdoption\-apm\-domain\-id
    export monitor_id=<substitute\-value\-of\-monitor_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/update\-ftp\-monitor.html#cmdoption\-monitor\-id

    oci apm\-synthetics monitor update\-ftp\-monitor \-\-apm\-domain\-id $apm_domain_id \-\-monitor\-id $monitor_id
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBupdate\-network\-monitor\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.IP \(bu 2
\fI\%Example using required parameter\fP
.UNINDENT
.SS Description
.sp
Updates the monitor.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci apm\-synthetics monitor update\-network\-monitor [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-apm\-domain\-id [text]
.UNINDENT
.sp
The APM domain ID the request is intended for.
.INDENT 0.0
.TP
.B \-\-monitor\-id [text]
.UNINDENT
.sp
The OCID of the monitor.
.INDENT 0.0
.TP
.B \-\-network\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-availability\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-batch\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Time interval between two runs in round robin batch mode (SchedulingPolicy \- BATCHED_ROUND_ROBIN).
.INDENT 0.0
.TP
.B \-\-defined\-tags [complex type]
.UNINDENT
.sp
Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: \fI{“foo\-namespace”: {“bar\-key”: “value”}}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-display\-name [text]
.UNINDENT
.sp
Unique name that can be edited. The name should not contain any confidential information.
.INDENT 0.0
.TP
.B \-\-dns\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-force
.UNINDENT
.sp
Perform update without prompting for confirmation.
.INDENT 0.0
.TP
.B \-\-freeform\-tags [complex type]
.UNINDENT
.sp
Simple key\-value pair that is applied without any predefined name, type or scope. Exists for cross\-compatibility only. Example: \fI{“bar\-key”: “value”}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id –> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our “using CLI with advanced JSON options” link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-if\-match [text]
.UNINDENT
.sp
For optimistic concurrency control. In the PUT or DELETE call for a resource, set the \fIif\-match\fP parameter to the value of the etag from a previous GET or POST response for that resource. The resource will be updated or deleted only if the etag you provide matches the resource’s current etag value.
.INDENT 0.0
.TP
.B \-\-is\-failure\-retried [boolean]
.UNINDENT
.sp
If isFailureRetried is enabled, then a failed call will be retried.
.INDENT 0.0
.TP
.B \-\-is\-ipv6 [boolean]
.UNINDENT
.sp
If enabled, domain name will resolve to an IPv6 address.
.INDENT 0.0
.TP
.B \-\-is\-run\-now [boolean]
.UNINDENT
.sp
If isRunNow is enabled, then the monitor will run immediately.
.INDENT 0.0
.TP
.B \-\-is\-run\-once [boolean]
.UNINDENT
.sp
If runOnce is enabled, then the monitor will run once.
.INDENT 0.0
.TP
.B \-\-maintenance\-window\-schedule [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-repeat\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds for Scripted REST, Scripted Browser and Browser monitors, and 60 seconds for REST monitor.
.INDENT 0.0
.TP
.B \-\-scheduling\-policy [text]
.UNINDENT
.sp
Scheduling policy to decide the distribution of monitor executions on vantage points.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ALL, BATCHED_ROUND_ROBIN, ROUND_ROBIN
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-script\-id [text]
.UNINDENT
.sp
The \fI\%OCID\fP <\fBhttps://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm\fP> of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
.INDENT 0.0
.TP
.B \-\-script\-parameters [complex type]
.UNINDENT
.sp
List of script parameters in the monitor. This is valid only for SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null. Example: \fI[{“paramName”: “userid”, “paramValue”:”testuser”}]\fP
.sp
This option is a JSON list with items of type MonitorScriptParameter.  For documentation on MonitorScriptParameter please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/MonitorScriptParameter\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-status [text]
.UNINDENT
.sp
Enables or disables the monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DISABLED, ENABLED, INVALID
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-target [text]
.UNINDENT
.sp
Specify the endpoint on which to run the monitor. For BROWSER, REST, NETWORK, DNS and FTP monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is. For NETWORK monitor with TCP protocol, a port needs to be provided along with target. Example: 192.168.0.1:80.
.INDENT 0.0
.TP
.B \-\-timeout\-in\-seconds [integer]
.UNINDENT
.sp
Timeout in seconds. If isFailureRetried is true, then timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. If isFailureRetried is false, then timeout cannot be more than 50% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60 for Scripted REST, Scripted Browser and Browser monitors. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
.INDENT 0.0
.TP
.B \-\-vantage\-points [complex type]
.UNINDENT
.sp
A list of public and dedicated vantage points from which to execute the monitor. Use /publicVantagePoints to fetch public vantage points, and /dedicatedVantagePoints to fetch dedicated vantage points.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-auto\-prompt\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-connection\-timeout\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-max\-retries\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-proxy\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-read\-timeout\fP, \fB\-\-realm\-specific\-endpoint\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-i\fP, \fB\-v\fP
.SS Example using required parameter
.sp
Copy and paste the following example into a JSON file, replacing the example parameters with your own.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    oci apm\-synthetics monitor update\-network\-monitor \-\-generate\-param\-json\-input network\-configuration > network\-configuration.json
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Copy the following CLI commands into a file named example.sh. Run the command by typing “bash example.sh” and replacing the example parameters with your own.
.sp
Please note this sample will only work in the POSIX\-compliant bash\-like shell. You need to set up \fI\%the OCI configuration\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm#configfile\fP> and \fI\%appropriate security policies\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/Identity/Concepts/policygetstarted.htm\fP> before trying the examples.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    export apm_domain_id=<substitute\-value\-of\-apm_domain_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/update\-network\-monitor.html#cmdoption\-apm\-domain\-id
    export monitor_id=<substitute\-value\-of\-monitor_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/update\-network\-monitor.html#cmdoption\-monitor\-id

    oci apm\-synthetics monitor update\-network\-monitor \-\-apm\-domain\-id $apm_domain_id \-\-monitor\-id $monitor_id \-\-network\-configuration file://network\-configuration.json
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBupdate\-rest\-monitor\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.IP \(bu 2
\fI\%Example using required parameter\fP
.UNINDENT
.SS Description
.sp
Updates the monitor.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci apm\-synthetics monitor update\-rest\-monitor [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-apm\-domain\-id [text]
.UNINDENT
.sp
The APM domain ID the request is intended for.
.INDENT 0.0
.TP
.B \-\-monitor\-id [text]
.UNINDENT
.sp
The OCID of the monitor.
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-availability\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-batch\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Time interval between two runs in round robin batch mode (SchedulingPolicy \- BATCHED_ROUND_ROBIN).
.INDENT 0.0
.TP
.B \-\-client\-certificate\-details [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-defined\-tags [complex type]
.UNINDENT
.sp
Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: \fI{“foo\-namespace”: {“bar\-key”: “value”}}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-display\-name [text]
.UNINDENT
.sp
Unique name that can be edited. The name should not contain any confidential information.
.INDENT 0.0
.TP
.B \-\-dns\-configuration [complex type]
.UNINDENT
.sp
Dns settings. This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-force
.UNINDENT
.sp
Perform update without prompting for confirmation.
.INDENT 0.0
.TP
.B \-\-freeform\-tags [complex type]
.UNINDENT
.sp
Simple key\-value pair that is applied without any predefined name, type or scope. Exists for cross\-compatibility only. Example: \fI{“bar\-key”: “value”}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id –> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our “using CLI with advanced JSON options” link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-if\-match [text]
.UNINDENT
.sp
For optimistic concurrency control. In the PUT or DELETE call for a resource, set the \fIif\-match\fP parameter to the value of the etag from a previous GET or POST response for that resource. The resource will be updated or deleted only if the etag you provide matches the resource’s current etag value.
.INDENT 0.0
.TP
.B \-\-is\-certificate\-validation\-enabled [boolean]
.UNINDENT
.sp
If certificate validation enabled, then call will fail for certificate errors.
.INDENT 0.0
.TP
.B \-\-is\-failure\-retried [boolean]
.UNINDENT
.sp
If isFailureRetried enabled, then if call is failed then it will be retried.
.INDENT 0.0
.TP
.B \-\-is\-ipv6 [boolean]
.UNINDENT
.sp
If enabled, domain name will resolve to an IPv6 address.
.INDENT 0.0
.TP
.B \-\-is\-redirection\-enabled [boolean]
.UNINDENT
.sp
If redirection enabled, then redirects will be allowed while accessing target URL.
.INDENT 0.0
.TP
.B \-\-is\-run\-now [boolean]
.UNINDENT
.sp
If isRunNow is enabled, then the monitor will run immediately.
.INDENT 0.0
.TP
.B \-\-is\-run\-once [boolean]
.UNINDENT
.sp
If runOnce is enabled, then the monitor will run once.
.INDENT 0.0
.TP
.B \-\-maintenance\-window\-schedule [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-network\-configuration [complex type]
.UNINDENT
.sp
Details of the network configuration. This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-repeat\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds for Scripted REST, Scripted Browser and Browser monitors, and 60 seconds for REST monitor.
.INDENT 0.0
.TP
.B \-\-req\-authentication\-details [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-req\-authentication\-scheme [text]
.UNINDENT
.sp
Request http authentication scheme.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
BASIC, BEARER, NONE, OAUTH
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-request\-headers [complex type]
.UNINDENT
.sp
List of request headers. Example: \fI[{“headerName”: “content\-type”, “headerValue”:”json”}]\fP
.sp
This option is a JSON list with items of type Header.  For documentation on Header please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/Header\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-request\-method [text]
.UNINDENT
.sp
Request HTTP method.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
GET, POST
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-request\-post\-body [text]
.UNINDENT
.sp
Request post body content.
.INDENT 0.0
.TP
.B \-\-request\-query\-params [complex type]
.UNINDENT
.sp
List of request query params. Example: \fI[{“paramName”: “sortOrder”, “paramValue”: “asc”}]\fP
.sp
This option is a JSON list with items of type RequestQueryParam.  For documentation on RequestQueryParam please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/RequestQueryParam\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-scheduling\-policy [text]
.UNINDENT
.sp
Scheduling policy to decide the distribution of monitor executions on vantage points.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ALL, BATCHED_ROUND_ROBIN, ROUND_ROBIN
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-script\-id [text]
.UNINDENT
.sp
The \fI\%OCID\fP <\fBhttps://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm\fP> of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
.INDENT 0.0
.TP
.B \-\-script\-parameters [complex type]
.UNINDENT
.sp
List of script parameters in the monitor. This is valid only for SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null. Example: \fI[{“paramName”: “userid”, “paramValue”:”testuser”}]\fP
.sp
This option is a JSON list with items of type MonitorScriptParameter.  For documentation on MonitorScriptParameter please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/MonitorScriptParameter\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-status [text]
.UNINDENT
.sp
Enables or disables the monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DISABLED, ENABLED, INVALID
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-target [text]
.UNINDENT
.sp
Specify the endpoint on which to run the monitor. For BROWSER, REST, NETWORK, DNS and FTP monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is. For NETWORK monitor with TCP protocol, a port needs to be provided along with target. Example: 192.168.0.1:80.
.INDENT 0.0
.TP
.B \-\-timeout\-in\-seconds [integer]
.UNINDENT
.sp
Timeout in seconds. If isFailureRetried is true, then timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. If isFailureRetried is false, then timeout cannot be more than 50% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60 for Scripted REST, Scripted Browser and Browser monitors. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
.INDENT 0.0
.TP
.B \-\-vantage\-points [complex type]
.UNINDENT
.sp
A list of public and dedicated vantage points from which to execute the monitor. Use /publicVantagePoints to fetch public vantage points, and /dedicatedVantagePoints to fetch dedicated vantage points.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-verify\-response\-codes [complex type]
.UNINDENT
.sp
Expected HTTP response codes. For status code range, please set values like 2xx, 3xx.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-verify\-response\-content [text]
.UNINDENT
.sp
Verify response content against regular expression based string. If response content does not match with the verifyResponseContent, then it will be considered as failure.
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-auto\-prompt\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-connection\-timeout\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-max\-retries\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-proxy\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-read\-timeout\fP, \fB\-\-realm\-specific\-endpoint\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-i\fP, \fB\-v\fP
.SS Example using required parameter
.sp
Copy the following CLI commands into a file named example.sh. Run the command by typing “bash example.sh” and replacing the example parameters with your own.
.sp
Please note this sample will only work in the POSIX\-compliant bash\-like shell. You need to set up \fI\%the OCI configuration\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm#configfile\fP> and \fI\%appropriate security policies\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/Identity/Concepts/policygetstarted.htm\fP> before trying the examples.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    export apm_domain_id=<substitute\-value\-of\-apm_domain_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/update\-rest\-monitor.html#cmdoption\-apm\-domain\-id
    export monitor_id=<substitute\-value\-of\-monitor_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/update\-rest\-monitor.html#cmdoption\-monitor\-id

    oci apm\-synthetics monitor update\-rest\-monitor \-\-apm\-domain\-id $apm_domain_id \-\-monitor\-id $monitor_id
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBupdate\-scripted\-browser\-monitor\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.IP \(bu 2
\fI\%Example using required parameter\fP
.UNINDENT
.SS Description
.sp
Updates the monitor.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci apm\-synthetics monitor update\-scripted\-browser\-monitor [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-apm\-domain\-id [text]
.UNINDENT
.sp
The APM domain ID the request is intended for.
.INDENT 0.0
.TP
.B \-\-monitor\-id [text]
.UNINDENT
.sp
The OCID of the monitor.
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-availability\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-batch\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Time interval between two runs in round robin batch mode (SchedulingPolicy \- BATCHED_ROUND_ROBIN).
.INDENT 0.0
.TP
.B \-\-defined\-tags [complex type]
.UNINDENT
.sp
Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: \fI{“foo\-namespace”: {“bar\-key”: “value”}}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-display\-name [text]
.UNINDENT
.sp
Unique name that can be edited. The name should not contain any confidential information.
.INDENT 0.0
.TP
.B \-\-dns\-configuration [complex type]
.UNINDENT
.sp
Dns settings. This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-force
.UNINDENT
.sp
Perform update without prompting for confirmation.
.INDENT 0.0
.TP
.B \-\-freeform\-tags [complex type]
.UNINDENT
.sp
Simple key\-value pair that is applied without any predefined name, type or scope. Exists for cross\-compatibility only. Example: \fI{“bar\-key”: “value”}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id –> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our “using CLI with advanced JSON options” link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-if\-match [text]
.UNINDENT
.sp
For optimistic concurrency control. In the PUT or DELETE call for a resource, set the \fIif\-match\fP parameter to the value of the etag from a previous GET or POST response for that resource. The resource will be updated or deleted only if the etag you provide matches the resource’s current etag value.
.INDENT 0.0
.TP
.B \-\-is\-certificate\-validation\-enabled [boolean]
.UNINDENT
.sp
If certificate validation enabled, then call will fail for certificate errors.
.INDENT 0.0
.TP
.B \-\-is\-default\-snapshot\-enabled [boolean]
.UNINDENT
.sp
If disabled then auto snapshots are not collected.
.INDENT 0.0
.TP
.B \-\-is\-failure\-retried [boolean]
.UNINDENT
.sp
If isFailureRetried enabled, then if call is failed then it will be retried.
.INDENT 0.0
.TP
.B \-\-is\-ipv6 [boolean]
.UNINDENT
.sp
If enabled, domain name will resolve to an IPv6 address.
.INDENT 0.0
.TP
.B \-\-is\-run\-now [boolean]
.UNINDENT
.sp
If isRunNow is enabled, then the monitor will run immediately.
.INDENT 0.0
.TP
.B \-\-is\-run\-once [boolean]
.UNINDENT
.sp
If runOnce is enabled, then the monitor will run once.
.INDENT 0.0
.TP
.B \-\-maintenance\-window\-schedule [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-network\-configuration [complex type]
.UNINDENT
.sp
Details of the network configuration. This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-repeat\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds for Scripted REST, Scripted Browser and Browser monitors, and 60 seconds for REST monitor.
.INDENT 0.0
.TP
.B \-\-scheduling\-policy [text]
.UNINDENT
.sp
Scheduling policy to decide the distribution of monitor executions on vantage points.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ALL, BATCHED_ROUND_ROBIN, ROUND_ROBIN
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-script\-id [text]
.UNINDENT
.sp
The \fI\%OCID\fP <\fBhttps://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm\fP> of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
.INDENT 0.0
.TP
.B \-\-script\-parameters [complex type]
.UNINDENT
.sp
List of script parameters in the monitor. This is valid only for SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null. Example: \fI[{“paramName”: “userid”, “paramValue”:”testuser”}]\fP
.sp
This option is a JSON list with items of type MonitorScriptParameter.  For documentation on MonitorScriptParameter please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/MonitorScriptParameter\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-status [text]
.UNINDENT
.sp
Enables or disables the monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DISABLED, ENABLED, INVALID
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-target [text]
.UNINDENT
.sp
Specify the endpoint on which to run the monitor. For BROWSER, REST, NETWORK, DNS and FTP monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is. For NETWORK monitor with TCP protocol, a port needs to be provided along with target. Example: 192.168.0.1:80.
.INDENT 0.0
.TP
.B \-\-timeout\-in\-seconds [integer]
.UNINDENT
.sp
Timeout in seconds. If isFailureRetried is true, then timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. If isFailureRetried is false, then timeout cannot be more than 50% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60 for Scripted REST, Scripted Browser and Browser monitors. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
.INDENT 0.0
.TP
.B \-\-vantage\-points [complex type]
.UNINDENT
.sp
A list of public and dedicated vantage points from which to execute the monitor. Use /publicVantagePoints to fetch public vantage points, and /dedicatedVantagePoints to fetch dedicated vantage points.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-auto\-prompt\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-connection\-timeout\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-max\-retries\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-proxy\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-read\-timeout\fP, \fB\-\-realm\-specific\-endpoint\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-i\fP, \fB\-v\fP
.SS Example using required parameter
.sp
Copy the following CLI commands into a file named example.sh. Run the command by typing “bash example.sh” and replacing the example parameters with your own.
.sp
Please note this sample will only work in the POSIX\-compliant bash\-like shell. You need to set up \fI\%the OCI configuration\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm#configfile\fP> and \fI\%appropriate security policies\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/Identity/Concepts/policygetstarted.htm\fP> before trying the examples.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    export apm_domain_id=<substitute\-value\-of\-apm_domain_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/update\-scripted\-browser\-monitor.html#cmdoption\-apm\-domain\-id
    export monitor_id=<substitute\-value\-of\-monitor_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/update\-scripted\-browser\-monitor.html#cmdoption\-monitor\-id

    oci apm\-synthetics monitor update\-scripted\-browser\-monitor \-\-apm\-domain\-id $apm_domain_id \-\-monitor\-id $monitor_id
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBupdate\-scripted\-rest\-monitor\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.IP \(bu 2
\fI\%Example using required parameter\fP
.UNINDENT
.SS Description
.sp
Updates the monitor.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci apm\-synthetics monitor update\-scripted\-rest\-monitor [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-apm\-domain\-id [text]
.UNINDENT
.sp
The APM domain ID the request is intended for.
.INDENT 0.0
.TP
.B \-\-monitor\-id [text]
.UNINDENT
.sp
The OCID of the monitor.
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-availability\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-batch\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Time interval between two runs in round robin batch mode (SchedulingPolicy \- BATCHED_ROUND_ROBIN).
.INDENT 0.0
.TP
.B \-\-defined\-tags [complex type]
.UNINDENT
.sp
Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: \fI{“foo\-namespace”: {“bar\-key”: “value”}}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-display\-name [text]
.UNINDENT
.sp
Unique name that can be edited. The name should not contain any confidential information.
.INDENT 0.0
.TP
.B \-\-dns\-configuration [complex type]
.UNINDENT
.sp
Dns settings. This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-force
.UNINDENT
.sp
Perform update without prompting for confirmation.
.INDENT 0.0
.TP
.B \-\-freeform\-tags [complex type]
.UNINDENT
.sp
Simple key\-value pair that is applied without any predefined name, type or scope. Exists for cross\-compatibility only. Example: \fI{“bar\-key”: “value”}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id –> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our “using CLI with advanced JSON options” link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-if\-match [text]
.UNINDENT
.sp
For optimistic concurrency control. In the PUT or DELETE call for a resource, set the \fIif\-match\fP parameter to the value of the etag from a previous GET or POST response for that resource. The resource will be updated or deleted only if the etag you provide matches the resource’s current etag value.
.INDENT 0.0
.TP
.B \-\-is\-failure\-retried [boolean]
.UNINDENT
.sp
If isFailureRetried enabled, then if call is failed then it will be retried.
.INDENT 0.0
.TP
.B \-\-is\-ipv6 [boolean]
.UNINDENT
.sp
If enabled, domain name will resolve to an IPv6 address.
.INDENT 0.0
.TP
.B \-\-is\-run\-now [boolean]
.UNINDENT
.sp
If isRunNow is enabled, then the monitor will run immediately.
.INDENT 0.0
.TP
.B \-\-is\-run\-once [boolean]
.UNINDENT
.sp
If runOnce is enabled, then the monitor will run once.
.INDENT 0.0
.TP
.B \-\-maintenance\-window\-schedule [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-network\-configuration [complex type]
.UNINDENT
.sp
Details of the network configuration. This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-repeat\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds for Scripted REST, Scripted Browser and Browser monitors, and 60 seconds for REST monitor.
.INDENT 0.0
.TP
.B \-\-req\-authentication\-scheme [text]
.UNINDENT
.sp
Request HTTP authentication scheme.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
NONE, RESOURCE_PRINCIPAL
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-scheduling\-policy [text]
.UNINDENT
.sp
Scheduling policy to decide the distribution of monitor executions on vantage points.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ALL, BATCHED_ROUND_ROBIN, ROUND_ROBIN
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-script\-id [text]
.UNINDENT
.sp
The \fI\%OCID\fP <\fBhttps://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm\fP> of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
.INDENT 0.0
.TP
.B \-\-script\-parameters [complex type]
.UNINDENT
.sp
List of script parameters in the monitor. This is valid only for SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null. Example: \fI[{“paramName”: “userid”, “paramValue”:”testuser”}]\fP
.sp
This option is a JSON list with items of type MonitorScriptParameter.  For documentation on MonitorScriptParameter please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/MonitorScriptParameter\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-status [text]
.UNINDENT
.sp
Enables or disables the monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DISABLED, ENABLED, INVALID
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-target [text]
.UNINDENT
.sp
Specify the endpoint on which to run the monitor. For BROWSER, REST, NETWORK, DNS and FTP monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is. For NETWORK monitor with TCP protocol, a port needs to be provided along with target. Example: 192.168.0.1:80.
.INDENT 0.0
.TP
.B \-\-timeout\-in\-seconds [integer]
.UNINDENT
.sp
Timeout in seconds. If isFailureRetried is true, then timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. If isFailureRetried is false, then timeout cannot be more than 50% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60 for Scripted REST, Scripted Browser and Browser monitors. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
.INDENT 0.0
.TP
.B \-\-vantage\-points [complex type]
.UNINDENT
.sp
A list of public and dedicated vantage points from which to execute the monitor. Use /publicVantagePoints to fetch public vantage points, and /dedicatedVantagePoints to fetch dedicated vantage points.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-verify\-response\-codes [complex type]
.UNINDENT
.sp
Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-auto\-prompt\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-connection\-timeout\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-max\-retries\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-proxy\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-read\-timeout\fP, \fB\-\-realm\-specific\-endpoint\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-i\fP, \fB\-v\fP
.SS Example using required parameter
.sp
Copy the following CLI commands into a file named example.sh. Run the command by typing “bash example.sh” and replacing the example parameters with your own.
.sp
Please note this sample will only work in the POSIX\-compliant bash\-like shell. You need to set up \fI\%the OCI configuration\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm#configfile\fP> and \fI\%appropriate security policies\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/Identity/Concepts/policygetstarted.htm\fP> before trying the examples.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    export apm_domain_id=<substitute\-value\-of\-apm_domain_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/update\-scripted\-rest\-monitor.html#cmdoption\-apm\-domain\-id
    export monitor_id=<substitute\-value\-of\-monitor_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/update\-scripted\-rest\-monitor.html#cmdoption\-monitor\-id

    oci apm\-synthetics monitor update\-scripted\-rest\-monitor \-\-apm\-domain\-id $apm_domain_id \-\-monitor\-id $monitor_id
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBupdate\-sql\-monitor\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.IP \(bu 2
\fI\%Example using required parameter\fP
.UNINDENT
.SS Description
.sp
Updates the monitor.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci apm\-synthetics monitor update\-sql\-monitor [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-apm\-domain\-id [text]
.UNINDENT
.sp
The APM domain ID the request is intended for.
.INDENT 0.0
.TP
.B \-\-monitor\-id [text]
.UNINDENT
.sp
The OCID of the monitor.
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-availability\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-batch\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Time interval between two runs in round robin batch mode (SchedulingPolicy \- BATCHED_ROUND_ROBIN).
.INDENT 0.0
.TP
.B \-\-connection\-string [text]
.UNINDENT
.sp
Database connection string. Required for database\-connection\-type CUSTOM_JDBC
.INDENT 0.0
.TP
.B \-\-database\-authentication\-details [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-database\-connection\-type [text]
.UNINDENT
.sp
Database connection type.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
CLOUD_WALLET, CUSTOM_JDBC
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-database\-query [text]
.UNINDENT
.sp
SQL query to be executed.
.INDENT 0.0
.TP
.B \-\-database\-role [text]
.UNINDENT
.sp
Database role.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DEFAULT, SYSASM, SYSBACKUP, SYSDBA, SYSDG, SYSKM, SYSOPER
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-database\-service\-name [text]
.UNINDENT
.sp
Service name of the database. Required for database\-connection\-type CLOUD_WALLET
.INDENT 0.0
.TP
.B \-\-database\-type [text]
.UNINDENT
.sp
Database type.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
MYSQL, ORACLE
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-database\-wallet [text]
.UNINDENT
.sp
The database wallet configuration zip file path. Required for database\-connection\-type CLOUD_WALLET
.INDENT 0.0
.TP
.B \-\-defined\-tags [complex type]
.UNINDENT
.sp
Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: \fI{“foo\-namespace”: {“bar\-key”: “value”}}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-display\-name [text]
.UNINDENT
.sp
Unique name that can be edited. The name should not contain any confidential information.
.INDENT 0.0
.TP
.B \-\-dns\-configuration [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-force
.UNINDENT
.sp
Perform update without prompting for confirmation.
.INDENT 0.0
.TP
.B \-\-freeform\-tags [complex type]
.UNINDENT
.sp
Simple key\-value pair that is applied without any predefined name, type or scope. Exists for cross\-compatibility only. Example: \fI{“bar\-key”: “value”}\fP
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id –> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our “using CLI with advanced JSON options” link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-if\-match [text]
.UNINDENT
.sp
For optimistic concurrency control. In the PUT or DELETE call for a resource, set the \fIif\-match\fP parameter to the value of the etag from a previous GET or POST response for that resource. The resource will be updated or deleted only if the etag you provide matches the resource’s current etag value.
.INDENT 0.0
.TP
.B \-\-is\-failure\-retried [boolean]
.UNINDENT
.sp
If isFailureRetried is enabled, then a failed call will be retried.
.INDENT 0.0
.TP
.B \-\-is\-ipv6 [boolean]
.UNINDENT
.sp
If enabled, domain name will resolve to an IPv6 address.
.INDENT 0.0
.TP
.B \-\-is\-run\-now [boolean]
.UNINDENT
.sp
If isRunNow is enabled, then the monitor will run immediately.
.INDENT 0.0
.TP
.B \-\-is\-run\-once [boolean]
.UNINDENT
.sp
If runOnce is enabled, then the monitor will run once.
.INDENT 0.0
.TP
.B \-\-maintenance\-window\-schedule [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-repeat\-interval\-in\-seconds [integer]
.UNINDENT
.sp
Interval in seconds after the start time when the job should be repeated. Minimum repeatIntervalInSeconds should be 300 seconds for Scripted REST, Scripted Browser and Browser monitors, and 60 seconds for REST monitor.
.INDENT 0.0
.TP
.B \-\-scheduling\-policy [text]
.UNINDENT
.sp
Scheduling policy to decide the distribution of monitor executions on vantage points.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ALL, BATCHED_ROUND_ROBIN, ROUND_ROBIN
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-script\-id [text]
.UNINDENT
.sp
The \fI\%OCID\fP <\fBhttps://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm\fP> of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
.INDENT 0.0
.TP
.B \-\-script\-parameters [complex type]
.UNINDENT
.sp
List of script parameters in the monitor. This is valid only for SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null. Example: \fI[{“paramName”: “userid”, “paramValue”:”testuser”}]\fP
.sp
This option is a JSON list with items of type MonitorScriptParameter.  For documentation on MonitorScriptParameter please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/MonitorScriptParameter\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-status [text]
.UNINDENT
.sp
Enables or disables the monitor.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DISABLED, ENABLED, INVALID
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-target [text]
.UNINDENT
.sp
Specify the endpoint on which to run the monitor. For BROWSER, REST, NETWORK, DNS and FTP monitor types, target is mandatory. If target is specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script (specified by scriptId in monitor) against the specified target endpoint. If target is not specified in the SCRIPTED_BROWSER monitor type, then the monitor will run the selected script as it is. For NETWORK monitor with TCP protocol, a port needs to be provided along with target. Example: 192.168.0.1:80.
.INDENT 0.0
.TP
.B \-\-timeout\-in\-seconds [integer]
.UNINDENT
.sp
Timeout in seconds. If isFailureRetried is true, then timeout cannot be more than 30% of repeatIntervalInSeconds time for monitors. If isFailureRetried is false, then timeout cannot be more than 50% of repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds should be a multiple of 60 for Scripted REST, Scripted Browser and Browser monitors. Monitor will be allowed to run only for timeoutInSeconds time. It would be terminated after that.
.INDENT 0.0
.TP
.B \-\-vantage\-points [complex type]
.UNINDENT
.sp
A list of public and dedicated vantage points from which to execute the monitor. Use /publicVantagePoints to fetch public vantage points, and /dedicatedVantagePoints to fetch dedicated vantage points.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-auto\-prompt\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-connection\-timeout\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-max\-retries\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-proxy\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-read\-timeout\fP, \fB\-\-realm\-specific\-endpoint\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-i\fP, \fB\-v\fP
.SS Example using required parameter
.sp
Copy the following CLI commands into a file named example.sh. Run the command by typing “bash example.sh” and replacing the example parameters with your own.
.sp
Please note this sample will only work in the POSIX\-compliant bash\-like shell. You need to set up \fI\%the OCI configuration\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm#configfile\fP> and \fI\%appropriate security policies\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/Identity/Concepts/policygetstarted.htm\fP> before trying the examples.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    export apm_domain_id=<substitute\-value\-of\-apm_domain_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/update\-sql\-monitor.html#cmdoption\-apm\-domain\-id
    export monitor_id=<substitute\-value\-of\-monitor_id> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/apm\-synthetics/monitor/update\-sql\-monitor.html#cmdoption\-monitor\-id

    oci apm\-synthetics monitor update\-sql\-monitor \-\-apm\-domain\-id $apm_domain_id \-\-monitor\-id $monitor_id
.ft P
.fi
.UNINDENT
.UNINDENT
.SH AUTHOR
Oracle
.SH COPYRIGHT
2016, 2025, Oracle
.\" Generated by docutils manpage writer.
.
