.\" Man page generated from reStructuredText.
.
.TH "IDENTITY-DOMAINS_USER_CREATE" "1" "Apr 23, 2025" "3.54.5" "OCI CLI Command Reference"
.SH NAME
identity-domains_user_create \- 
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.IP \(bu 2
\fI\%Example using required parameter\fP
.UNINDENT
.SH DESCRIPTION
.sp
Create a user.
.sp
The top level –endpoint parameter must be supplied for this operation.
.SH USAGE
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci identity\-domains user create [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH REQUIRED PARAMETERS
.INDENT 0.0
.TP
.B \-\-schemas [complex type]
.UNINDENT
.sp
REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard “enterprise” extension. All representations of SCIM schema MUST include a non\-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
.sp
\fBSCIM++ Properties:\fP  \- caseExact: false  \- idcsSearchable: false  \- multiValued: true  \- mutability: readWrite  \- required: true  \- returned: default  \- type: string  \- uniqueness: none
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-user\-name [text]
.UNINDENT
.sp
User name
.sp
\fBSCIM++ Properties:\fP  \- caseExact: false  \- idcsCsvAttributeName: User ID  \- idcsCsvAttributeNameMappings: [[columnHeaderName:User Name, deprecatedColumnHeaderName:User ID]]  \- idcsPii: true  \- idcsSearchable: true  \- multiValued: false  \- mutability: readWrite  \- required: true  \- returned: always  \- type: string  \- uniqueness: global
.SH OPTIONAL PARAMETERS
.INDENT 0.0
.TP
.B \-\-active [boolean]
.UNINDENT
.sp
User status
.sp
\fBSCIM++ Properties:\fP  \- caseExact: false  \- idcsCsvAttributeName: Active  \- idcsCsvAttributeNameMappings: [[columnHeaderName:Active]]  \- idcsSearchable: true  \- multiValued: false  \- mutability: readWrite  \- required: false  \- returned: default  \- type: boolean  \- uniqueness: none
.INDENT 0.0
.TP
.B \-\-addresses [complex type]
.UNINDENT
.sp
A physical mailing address for this User, as described in (address Element). Canonical Type Values of work, home, and other. The value attribute is a complex type with the following sub\-attributes.
.sp
\fBSCIM++ Properties:\fP  \- idcsCompositeKey: [type]  \- idcsCsvAttributeNameMappings: [[columnHeaderName:Work Address Street, deprecatedColumnHeaderName:Work Street Address, mapsTo:addresses[work].streetAddress], [columnHeaderName:Work Address Locality, deprecatedColumnHeaderName:Work City, mapsTo:addresses[work].locality], [columnHeaderName:Work Address Region, deprecatedColumnHeaderName:Work State, mapsTo:addresses[work].region], [columnHeaderName:Work Address Postal Code, deprecatedColumnHeaderName:Work Postal Code, mapsTo:addresses[work].postalCode], [columnHeaderName:Work Address Country, deprecatedColumnHeaderName:Work Country, mapsTo:addresses[work].country], [columnHeaderName:Work Address Formatted, mapsTo:addresses[work].formatted], [columnHeaderName:Home Address Formatted, mapsTo:addresses[home].formatted], [columnHeaderName:Other Address Formatted, mapsTo:addresses[other].formatted], [columnHeaderName:Home Address Street, mapsTo:addresses[home].streetAddress], [columnHeaderName:Other Address Street, mapsTo:addresses[other].streetAddress], [columnHeaderName:Home Address Locality, mapsTo:addresses[home].locality], [columnHeaderName:Other Address Locality, mapsTo:addresses[other].locality], [columnHeaderName:Home Address Region, mapsTo:addresses[home].region], [columnHeaderName:Other Address Region, mapsTo:addresses[other].region], [columnHeaderName:Home Address Country, mapsTo:addresses[home].country], [columnHeaderName:Other Address Country, mapsTo:addresses[other].country], [columnHeaderName:Home Address Postal Code, mapsTo:addresses[home].postalCode], [columnHeaderName:Other Address Postal Code, mapsTo:addresses[other].postalCode], [columnHeaderName:Primary Address Type, mapsTo:addresses[$(type)].primary]]  \- idcsPii: true  \- multiValued: true  \- mutability: readWrite  \- required: false  \- returned: default  \- type: complex  \- uniqueness: none
.sp
This option is a JSON list with items of type Addresses.  For documentation on addresses please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Addresses\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-attribute\-sets [text]
.UNINDENT
.sp
A multi\-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If ‘attributes’ query parameter is also available, union of the two is fetched. Valid values \- all, always, never, request, default. Values are case\-insensitive.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
all, always, default, never, request
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-attributes [text]
.UNINDENT
.sp
A comma\-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
.INDENT 0.0
.TP
.B \-\-authorization [text]
.UNINDENT
.sp
The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
.INDENT 0.0
.TP
.B \-\-compartment\-ocid [text]
.UNINDENT
.sp
OCI Compartment Id (ocid) in which the resource lives.
.sp
\fBSCIM++ Properties:\fP  \- caseExact: false  \- idcsSearchable: false  \- multiValued: false  \- mutability: readOnly  \- required: false  \- returned: default  \- type: string  \- uniqueness: none
.INDENT 0.0
.TP
.B \-\-delete\-in\-progress [boolean]
.UNINDENT
.sp
A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
.sp
\fBSCIM++ Properties:\fP  \- caseExact: false  \- idcsSearchable: true  \- multiValued: false  \- mutability: readOnly  \- required: false  \- returned: default  \- type: boolean  \- uniqueness: none
.INDENT 0.0
.TP
.B \-\-description [text]
.UNINDENT
.sp
Description of the user
.sp
\fBAdded In:\fP 2012271618
.sp
\fBSCIM++ Properties:\fP  \- caseExact: false  \- idcsPii: true  \- idcsSearchable: false  \- multiValued: false  \- mutability: readWrite  \- required: false  \- returned: default  \- type: string  \- uniqueness: none
.INDENT 0.0
.TP
.B \-\-display\-name [text]
.UNINDENT
.sp
Display name
.sp
\fBSCIM++ Properties:\fP  \- caseExact: false  \- idcsCsvAttributeName: Display Name  \- idcsCsvAttributeNameMappings: [[columnHeaderName:Display Name]]  \- idcsPii: true  \- idcsSearchable: true  \- multiValued: false  \- mutability: readWrite  \- required: false  \- returned: default  \- type: string  \- uniqueness: none
.INDENT 0.0
.TP
.B \-\-domain\-ocid [text]
.UNINDENT
.sp
OCI Domain Id (ocid) in which the resource lives.
.sp
\fBSCIM++ Properties:\fP  \- caseExact: false  \- idcsSearchable: false  \- multiValued: false  \- mutability: readOnly  \- required: false  \- returned: default  \- type: string  \- uniqueness: none
.INDENT 0.0
.TP
.B \-\-emails [complex type]
.UNINDENT
.sp
A complex attribute representing emails
.sp
\fBSCIM++ Properties:\fP  \- idcsCompositeKey: [value, type]  \- idcsCsvAttributeNameMappings: [[columnHeaderName:Work Email, mapsTo:emails[work].value], [columnHeaderName:Home Email, mapsTo:emails[home].value], [columnHeaderName:Primary Email Type, mapsTo:emails[$(type)].primary], [columnHeaderName:Other Email, mapsTo:emails[other].value], [columnHeaderName:Recovery Email, mapsTo:emails[recovery].value], [columnHeaderName:Work Email Verified, mapsTo:emails[work].verified], [columnHeaderName:Home Email Verified, mapsTo:emails[home].verified], [columnHeaderName:Other Email Verified, mapsTo:emails[other].verified], [columnHeaderName:Recovery Email Verified, mapsTo:emails[recovery].verified]]  \- idcsPii: true  \- multiValued: true  \- mutability: readWrite  \- required: false  \- returned: default  \- type: complex  \- uniqueness: none
.sp
This option is a JSON list with items of type UserEmails.  For documentation on UserEmails please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/UserEmails\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-entitlements [complex type]
.UNINDENT
.sp
A list of entitlements for the User that represent a thing the User has.
.sp
\fBSCIM++ Properties:\fP  \- idcsCompositeKey: [value, type]  \- multiValued: true  \- mutability: readWrite  \- required: false  \- returned: default  \- type: complex  \- uniqueness: none
.sp
This option is a JSON list with items of type UserEntitlements.  For documentation on UserEntitlements please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/UserEntitlements\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-ext\-adaptive\-user [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-ext\-capabilities\-user [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-ext\-db\-credentials\-user [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-ext\-db\-user\-user [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-ext\-enterprise\-20\-user [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-ext\-kerberos\-user\-user [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-ext\-mfa\-user [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-ext\-oci\-tags [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-ext\-password\-state\-user [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-ext\-passwordless\-user [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-ext\-posix\-user [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-ext\-security\-questions\-user [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-ext\-self\-change\-user [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-ext\-self\-registration\-user [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-ext\-sff\-user [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-ext\-social\-account\-user [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-ext\-terms\-of\-use\-user [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-ext\-user\-credentials\-user [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-ext\-user\-state\-user [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-ext\-user\-user [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-external\-id [text]
.UNINDENT
.sp
An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non\-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer’s tenant.
.sp
\fBSCIM++ Properties:\fP  \- caseExact: false  \- idcsCsvAttributeNameMappings: [[columnHeaderName:External Id]]  \- idcsPii: true  \- idcsSearchable: true  \- multiValued: false  \- mutability: readWrite  \- required: false  \- returned: default  \- type: string  \- uniqueness: none
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id –> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our “using CLI with advanced JSON options” link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-groups [complex type]
.UNINDENT
.sp
A list of groups that the user belongs to, either thorough direct membership, nested groups, or dynamically calculated
.sp
\fBSCIM++ Properties:\fP  \- idcsCompositeKey: [value]  \- idcsSearchable: true  \- multiValued: true  \- mutability: readOnly  \- required: false  \- returned: request  \- type: complex  \- uniqueness: none
.sp
This option is a JSON list with items of type UserGroups.  For documentation on UserGroups please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/UserGroups\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-id [text]
.UNINDENT
.sp
Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non\-empty id value. This identifier MUST be unique across the Service Provider’s entire set of Resources. It MUST be a stable, non\-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
.sp
\fBSCIM++ Properties:\fP  \- caseExact: false  \- idcsSearchable: true  \- multiValued: false  \- mutability: readOnly  \- required: false  \- returned: always  \- type: string  \- uniqueness: global
.INDENT 0.0
.TP
.B \-\-idcs\-created\-by [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-idcs\-last\-modified\-by [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-idcs\-last\-upgraded\-in\-release [text]
.UNINDENT
.sp
The release number when the resource was upgraded.
.sp
\fBSCIM++ Properties:\fP  \- caseExact: false  \- idcsSearchable: false  \- multiValued: false  \- mutability: readOnly  \- required: false  \- returned: request  \- type: string  \- uniqueness: none
.INDENT 0.0
.TP
.B \-\-idcs\-prevented\-operations [text]
.UNINDENT
.sp
Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
.sp
\fBSCIM++ Properties:\fP  \- idcsSearchable: false  \- multiValued: true  \- mutability: readOnly  \- required: false  \- returned: request  \- type: string  \- uniqueness: none
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
delete, replace, update
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-ims [complex type]
.UNINDENT
.sp
User’s instant messaging addresses
.sp
\fBSCIM++ Properties:\fP  \- idcsCompositeKey: [value, type]  \- idcsPii: true  \- multiValued: true  \- mutability: readWrite  \- required: false  \- returned: default  \- type: complex  \- uniqueness: none
.sp
This option is a JSON list with items of type UserIms.  For documentation on UserIms please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/UserIms\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-locale [text]
.UNINDENT
.sp
Used to indicate the User’s default location for purposes of localizing items such as currency, date and time format, numerical representations, and so on.
.sp
\fBSCIM++ Properties:\fP  \- caseExact: false  \- idcsCsvAttributeName: Locale  \- idcsCsvAttributeNameMappings: [[columnHeaderName:Locale]]  \- idcsSearchable: true  \- multiValued: false  \- mutability: readWrite  \- required: false  \- returned: default  \- type: string  \- uniqueness: none
.INDENT 0.0
.TP
.B \-\-meta [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-name [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-nick\-name [text]
.UNINDENT
.sp
Nick name
.sp
\fBSCIM++ Properties:\fP  \- caseExact: false  \- idcsCsvAttributeName: Nick Name  \- idcsCsvAttributeNameMappings: [[columnHeaderName:Nick Name]]  \- idcsPii: true  \- idcsSearchable: true  \- multiValued: false  \- mutability: readWrite  \- required: false  \- returned: default  \- type: string  \- uniqueness: none
.INDENT 0.0
.TP
.B \-\-ocid [text]
.UNINDENT
.sp
Unique OCI identifier for the SCIM Resource.
.sp
\fBSCIM++ Properties:\fP  \- caseExact: true  \- idcsSearchable: true  \- multiValued: false  \- mutability: immutable  \- required: false  \- returned: default  \- type: string  \- uniqueness: global
.INDENT 0.0
.TP
.B \-\-password [text]
.UNINDENT
.sp
Password attribute. Max length for password is controlled via Password Policy.
.sp
\fBSCIM++ Properties:\fP  \- idcsCsvAttributeName: Password  \- idcsCsvAttributeNameMappings: [[columnHeaderName:Password]]  \- idcsPii: true  \- idcsSearchable: false  \- idcsSensitive: hash  \- multiValued: false  \- mutability: writeOnly  \- required: false  \- returned: never  \- type: string  \- uniqueness: none
.INDENT 0.0
.TP
.B \-\-phone\-numbers [complex type]
.UNINDENT
.sp
Phone numbers
.sp
\fBSCIM++ Properties:\fP  \- idcsCompositeKey: [value, type]  \- idcsCsvAttributeNameMappings: [[columnHeaderName:Work Phone, mapsTo:phoneNumbers[work].value], [columnHeaderName:Mobile No, mapsTo:phoneNumbers[mobile].value], [columnHeaderName:Home Phone, mapsTo:phoneNumbers[home].value], [columnHeaderName:Fax, mapsTo:phoneNumbers[fax].value], [columnHeaderName:Pager, mapsTo:phoneNumbers[pager].value], [columnHeaderName:Other Phone, mapsTo:phoneNumbers[other].value], [columnHeaderName:Recovery Phone, mapsTo:phoneNumbers[recovery].value], [columnHeaderName:Primary Phone Type, mapsTo:phoneNumbers[$(type)].primary]]  \- idcsPii: true  \- multiValued: true  \- mutability: readWrite  \- required: false  \- returned: default  \- type: complex  \- uniqueness: none
.sp
This option is a JSON list with items of type UserPhoneNumbers.  For documentation on UserPhoneNumbers please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/UserPhoneNumbers\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-photos [complex type]
.UNINDENT
.sp
URLs of photos for the User
.sp
\fBSCIM++ Properties:\fP  \- idcsCompositeKey: [value, type]  \- idcsPii: true  \- multiValued: true  \- mutability: readWrite  \- required: false  \- returned: default  \- type: complex  \- uniqueness: none
.sp
This option is a JSON list with items of type UserPhotos.  For documentation on UserPhotos please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/UserPhotos\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-preferred\-language [text]
.UNINDENT
.sp
User’s preferred written or spoken language used for localized user interfaces
.sp
\fBSCIM++ Properties:\fP  \- caseExact: false  \- idcsCsvAttributeName: Preferred Language  \- idcsCsvAttributeNameMappings: [[columnHeaderName:Preferred Language]]  \- idcsSearchable: true  \- multiValued: false  \- mutability: readWrite  \- required: false  \- returned: default  \- type: string  \- uniqueness: none
.INDENT 0.0
.TP
.B \-\-profile\-url [text]
.UNINDENT
.sp
A fully\-qualified URL to a page representing the User’s online profile
.sp
\fBSCIM++ Properties:\fP  \- caseExact: false  \- idcsCsvAttributeName: Profile URL  \- idcsCsvAttributeNameMappings: [[columnHeaderName:Profile Url]]  \- idcsPii: true  \- idcsSearchable: true  \- multiValued: false  \- mutability: readWrite  \- required: false  \- returned: default  \- type: reference  \- uniqueness: none
.INDENT 0.0
.TP
.B \-\-resource\-type\-schema\-version [text]
.UNINDENT
.sp
An endpoint\-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
.INDENT 0.0
.TP
.B \-\-roles [complex type]
.UNINDENT
.sp
A list of roles for the User that collectively represent who the User is; e.g., ‘Student’, ‘Faculty’.
.sp
\fBSCIM++ Properties:\fP  \- idcsCompositeKey: [value, type]  \- multiValued: true  \- mutability: readWrite  \- required: false  \- returned: default  \- type: complex  \- uniqueness: none
.sp
This option is a JSON list with items of type UserRoles.  For documentation on UserRoles please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/UserRoles\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-tags [complex type]
.UNINDENT
.sp
A list of tags on this resource.
.sp
\fBSCIM++ Properties:\fP  \- idcsCompositeKey: [key, value]  \- idcsSearchable: true  \- multiValued: true  \- mutability: readWrite  \- required: false  \- returned: request  \- type: complex  \- uniqueness: none
.sp
This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-tenancy\-ocid [text]
.UNINDENT
.sp
OCI Tenant Id (ocid) in which the resource lives.
.sp
\fBSCIM++ Properties:\fP  \- caseExact: false  \- idcsSearchable: false  \- multiValued: false  \- mutability: readOnly  \- required: false  \- returned: default  \- type: string  \- uniqueness: none
.INDENT 0.0
.TP
.B \-\-timezone [text]
.UNINDENT
.sp
User’s timezone
.sp
\fBSCIM++ Properties:\fP  \- caseExact: false  \- idcsCanonicalValueSourceFilter: attrName eq “timezones” and attrValues.value eq “$(timezone)”  \- idcsCanonicalValueSourceResourceType: AllowedValue  \- idcsCsvAttributeName: TimeZone  \- idcsCsvAttributeNameMappings: [[columnHeaderName:Time Zone, deprecatedColumnHeaderName:TimeZone]]  \- idcsSearchable: true  \- multiValued: false  \- mutability: readWrite  \- required: false  \- returned: default  \- type: string  \- uniqueness: none
.INDENT 0.0
.TP
.B \-\-title [text]
.UNINDENT
.sp
Title
.sp
\fBSCIM++ Properties:\fP  \- caseExact: false  \- idcsCsvAttributeName: Title  \- idcsCsvAttributeNameMappings: [[columnHeaderName:Title]]  \- idcsPii: true  \- idcsSearchable: true  \- multiValued: false  \- mutability: readWrite  \- required: false  \- returned: default  \- type: string  \- uniqueness: none
.INDENT 0.0
.TP
.B \-\-user\-type [text]
.UNINDENT
.sp
Used to identify the organization\-to\-user relationship
.sp
\fBSCIM++ Properties:\fP  \- caseExact: false  \- idcsCsvAttributeName: User Type  \- idcsCsvAttributeNameMappings: [[columnHeaderName:User Type]]  \- idcsPii: true  \- idcsSearchable: true  \- multiValued: false  \- mutability: readWrite  \- required: false  \- returned: default  \- type: string  \- uniqueness: none
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
Contractor, Employee, External, Generic, Intern, Service, Temp
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-x509\-certificates [complex type]
.UNINDENT
.sp
A list of certificates issued to the User.
.sp
\fBSCIM++ Properties:\fP  \- idcsCompositeKey: [value]  \- multiValued: true  \- mutability: readWrite  \- required: false  \- returned: default  \- type: complex  \- uniqueness: none
.sp
This option is a JSON list with items of type UserX509Certificates.  For documentation on UserX509Certificates please see our API reference: \fI\%https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/UserX509Certificates\fP\&.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SH GLOBAL PARAMETERS
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-auto\-prompt\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-connection\-timeout\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-max\-retries\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-proxy\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-read\-timeout\fP, \fB\-\-realm\-specific\-endpoint\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-i\fP, \fB\-v\fP
.SH EXAMPLE USING REQUIRED PARAMETER
.sp
Copy and paste the following example into a JSON file, replacing the example parameters with your own.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    oci identity\-domains user create \-\-generate\-param\-json\-input schemas > schemas.json
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Copy the following CLI commands into a file named example.sh. Run the command by typing “bash example.sh” and replacing the example parameters with your own.
.sp
Please note this sample will only work in the POSIX\-compliant bash\-like shell. You need to set up \fI\%the OCI configuration\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/API/SDKDocs/cliinstall.htm#configfile\fP> and \fI\%appropriate security policies\fP <\fBhttps://docs.oracle.com/en-us/iaas/Content/Identity/Concepts/policygetstarted.htm\fP> before trying the examples.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
    export user_name=<substitute\-value\-of\-user_name> # https://docs.cloud.oracle.com/en\-us/iaas/tools/oci\-cli/latest/oci_cli_docs/cmdref/identity\-domains/user/create.html#cmdoption\-user\-name

    oci identity\-domains user create \-\-schemas file://schemas.json \-\-user\-name $user_name
.ft P
.fi
.UNINDENT
.UNINDENT
.SH AUTHOR
Oracle
.SH COPYRIGHT
2016, 2025, Oracle
.\" Generated by docutils manpage writer.
.
