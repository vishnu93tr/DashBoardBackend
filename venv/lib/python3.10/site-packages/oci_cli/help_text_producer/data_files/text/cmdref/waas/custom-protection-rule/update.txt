"update"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Updates the configuration of a custom protection rule. Only the fields
specified in the request body will be updated; all other properties
will remain unchanged.


Usage
=====

   oci waas custom-protection-rule update [OPTIONS]


Required Parameters
===================

--custom-protection-rule-id [text]

The OCID of the custom protection rule. This number is generated when
the custom protection rule is added to the compartment.


Optional Parameters
===================

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. For more information, see Resource Tags.

Example:

   {"Operations": {"CostCenter": "42"}}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--description [text]

A description for the custom protection rule.

--display-name [text]

A user-friendly name for the custom protection rule.

--force

Perform update without prompting for confirmation.

--freeform-tags [complex type]

Free-form tags for this resource. Each tag is a simple key-value pair
with no predefined name, type, or namespace. For more information, see
Resource Tags.

Example:

   {"Department": "Finance"}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--if-match [text]

For optimistic concurrency control. In the *PUT* or *DELETE* call for
a resource, set the *if-match* parameter to the value of the etag from
a previous *GET* or *POST* response for that resource. The resource
will be updated or deleted only if the etag provided matches the
resource’s current etag value.

--max-wait-seconds [integer]

The maximum time to wait for the resource to reach the lifecycle state
defined by "--wait-for-state". Defaults to 1200 seconds.

--template [text]

The template text of the custom protection rule. All custom protection
rules are expressed in ModSecurity Rule Language.

Additionally, each rule must include two placeholder variables that
are updated by the WAF service upon publication of the rule.

*id: {{id_1}}* - This field is populated with a unique rule ID
generated by the WAF service which identifies a *SecRule*. More than
one *SecRule* can be defined in the *template* field of a
CreateCustomSecurityRule call. The value of the first *SecRule* must
be *id: {{id_1}}* and the *id* field of each subsequent *SecRule*
should increase by one, as shown in the example.

*ctl:ruleEngine={{mode}}* - The action to be taken when the criteria
of the *SecRule* are met, either *OFF*, *DETECT* or *BLOCK*. This
field is automatically populated with the corresponding value of the
*action* field of the *CustomProtectionRuleSetting* schema when the
*WafConfig* is updated.

*Example:*   "`   SecRule REQUEST_COOKIES "regex matching SQL
injection - part 1/2" \           "phase:2,
\           msg:'Detects chained SQL injection attempts 1/2.',
\           id: {{id_1}},
\           ctl:ruleEngine={{mode}},
\           deny"   SecRule REQUEST_COOKIES "regex matching SQL
injection - part 2/2" \           "phase:2,
\           msg:'Detects chained SQL injection attempts 2/2.',
\           id: {{id_2}},
\           ctl:ruleEngine={{mode}},
\           deny"   `"

   The example contains two *SecRules* each having distinct regex
   expression to match the *Cookie* header value during the second
   input analysis phase.

For more information about custom protection rules, see Custom
Protection Rules.

For more information about ModSecurity syntax, see Making Rules: The
Basic Syntax.

For more information about ModSecurity’s open source WAF rules, see
Mod Security’s OWASP Core Rule Set documentation.

--wait-for-state [text]

This operation creates, modifies or deletes a resource that has a
defined lifecycle state. Specify this option to perform the action and
then wait until the resource reaches a given lifecycle state. Multiple
states can be specified, returning on the first state. For example, "
--wait-for-state" SUCCEEDED "--wait-for-state" FAILED would return on
whichever lifecycle state is reached first. If timeout is reached, a
return code of 2 is returned. For any other error, a return code of 1
is returned.

Accepted values are:

   ACTIVE, CREATING, DELETED, DELETING, FAILED, UPDATING

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the resource has
reached the lifecycle state defined by "--wait-for-state". Defaults to
30 seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/waas/custom-protection-rule/create.html#cmdoption-compartment-id
       export display_name=<substitute-value-of-display_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/waas/custom-protection-rule/create.html#cmdoption-display-name
       export template=<substitute-value-of-template> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/waas/custom-protection-rule/create.html#cmdoption-template

       custom_protection_rule_id=$(oci waas custom-protection-rule create --compartment-id $compartment_id --display-name $display_name --template $template --query data.id --raw-output)

       oci waas custom-protection-rule update --custom-protection-rule-id $custom_protection_rule_id
