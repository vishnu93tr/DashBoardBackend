"generate-wallet"
*****************

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Creates and downloads a wallet for the specified Autonomous Database.


Usage
=====

   oci db autonomous-database generate-wallet [OPTIONS]


Required Parameters
===================

--autonomous-database-id [text]

The database OCID.

--file [filename]

The name of the file that will receive the response data, or ‘-‘ to
write to STDOUT.

--password [text]

The password to encrypt the keys inside the wallet. The password must
be at least 8 characters long and must include at least 1 letter and
either 1 numeric character or 1 special character.


Optional Parameters
===================

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--generate-type [text]

The type of wallet to generate.

**Serverless instance usage:** * *SINGLE* - used to generate a wallet
for a single database * *ALL* - used to generate wallet for all
databases in the region

**Dedicated Exadata infrastructure usage:** Value must be *NULL* if
attribute is used.

Accepted values are:

   ALL, SINGLE

--is-regional [boolean]

True when requesting regional connection strings in PDB connect info,
applicable to cross-region DG only.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/autonomous-database/create.html#cmdoption-compartment-id
       export db_name=<substitute-value-of-db_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/autonomous-database/create.html#cmdoption-db-name
       export file=<substitute-value-of-file> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/autonomous-database/generate-wallet.html#cmdoption-file
       export password=<substitute-value-of-password> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/autonomous-database/generate-wallet.html#cmdoption-password

       autonomous_database_id=$(oci db autonomous-database create --compartment-id $compartment_id --db-name $db_name --query data.id --raw-output)

       oci db autonomous-database generate-wallet --autonomous-database-id $autonomous_database_id --file $file --password $password
