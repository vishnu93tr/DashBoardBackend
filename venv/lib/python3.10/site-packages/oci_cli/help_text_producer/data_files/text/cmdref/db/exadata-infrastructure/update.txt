"update"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Updates the Exadata infrastructure resource. Applies to Exadata
Cloud@Customer instances only. To update an Exadata Cloud Service
infrastructure resource, use the  UpdateCloudExadataInfrastructure
operation.


Usage
=====

   oci db exadata-infrastructure update [OPTIONS]


Required Parameters
===================

--exadata-infrastructure-id [text]

The Exadata infrastructure OCID.


Optional Parameters
===================

--additional-compute-count [integer]

The requested number of additional compute servers for the Exadata
infrastructure.

--additional-compute-system-model [text]

Oracle Exadata System Model specification. The system model determines
the amount of compute or storage server resources available for use.
For more information, please see System and Shape Configuration
Options (https://docs.oracle.com/en/engineered-systems/exadata-cloud-
at-customer/ecccm/ecc-system-config-options.html#GUID-
9E090174-5C57-4EB1-9243-B470F9F10D6B)

Accepted values are:

   X10M, X11M, X7, X8, X8M, X9M

--additional-storage-count [integer]

The requested number of additional storage servers for the Exadata
infrastructure.

--admin-network-cidr [text]

The CIDR block for the Exadata administration network.

--cloud-control-plane-server1 [text]

The IP address for the first control plane server.

--cloud-control-plane-server2 [text]

The IP address for the second control plane server.

--contacts [complex type]

The list of contacts for the Exadata infrastructure.

This option is a JSON list with items of type
ExadataInfrastructureContact.  For documentation on
ExadataInfrastructureContact please see our API reference: https://do
cs.cloud.oracle.com/api/#/en/database/20160918/datatypes/ExadataInfra
structureContact. This is a complex type whose value must be valid
JSON. The value can be provided as a string on the command line or
passed in as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--corporate-proxy [text]

The corporate network proxy for access to the control plane network.

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. For more information, see Resource Tags. This is a complex
type whose value must be valid JSON. The value can be provided as a
string on the command line or passed in as a file using the
file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--dns-server [complex type]

The list of DNS server IP addresses. Maximum of 3 allowed. This is a
complex type whose value must be valid JSON. The value can be provided
as a string on the command line or passed in as a file using the
file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--force

Perform update without prompting for confirmation.

--freeform-tags [complex type]

Free-form tags for this resource. Each tag is a simple key-value pair
with no predefined name, type, or namespace. For more information, see
Resource Tags.

Example:

   {"Department": "Finance"}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--gateway [text]

The gateway for the control plane network.

--if-match [text]

For optimistic concurrency control. In the PUT or DELETE call for a
resource, set the *if-match* parameter to the value of the etag from a
previous GET or POST response for that resource.  The resource will be
updated or deleted only if the etag you provide matches the resource’s
current etag value.

--infini-band-network-cidr [text]

The CIDR block for the Exadata InfiniBand interconnect.

--is-cps-offline-report-enabled [boolean]

Indicates whether cps offline diagnostic report is enabled for this
Exadata infrastructure. This will allow a customer to quickly check
status themselves and fix problems on their end, saving time and
frustration for both Oracle and the customer when they find the CPS in
a disconnected state.You can enable offline diagnostic report during
Exadata infrastructure provisioning. You can also disable or enable it
at any time using the UpdateExadatainfrastructure API.

--is-multi-rack-deployment [boolean]

Indicates if deployment is Multi-Rack or not.

--maintenance-window [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--max-wait-seconds [integer]

The maximum time to wait for the resource to reach the lifecycle state
defined by "--wait-for-state". Defaults to 1200 seconds.

--multi-rack-configuration-file [text]

The base64 encoded Multi-Rack configuration json file.

--netmask [text]

The netmask for the control plane network.

--network-bonding-mode-details [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--ntp-server [complex type]

The list of NTP server IP addresses. Maximum of 3 allowed. This is a
complex type whose value must be valid JSON. The value can be provided
as a string on the command line or passed in as a file using the
file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--time-zone [text]

The time zone of the Exadata infrastructure. For details, see Exadata
Infrastructure Time Zones.

--wait-for-state [text]

This operation creates, modifies or deletes a resource that has a
defined lifecycle state. Specify this option to perform the action and
then wait until the resource reaches a given lifecycle state. Multiple
states can be specified, returning on the first state. For example, "
--wait-for-state" SUCCEEDED "--wait-for-state" FAILED would return on
whichever lifecycle state is reached first. If timeout is reached, a
return code of 2 is returned. For any other error, a return code of 1
is returned.

Accepted values are:

   ACTIVATING, ACTIVATION_FAILED, ACTIVE, CREATING, DELETED, DELETING, DISCONNECTED, FAILED, MAINTENANCE_IN_PROGRESS, REQUIRES_ACTIVATION, UPDATING, WAITING_FOR_CONNECTIVITY

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the resource has
reached the lifecycle state defined by "--wait-for-state". Defaults to
30 seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy and paste the following example into a JSON file, replacing the
example parameters with your own.

       oci db exadata-infrastructure create --generate-param-json-input dns-server > dns-server.json
       oci db exadata-infrastructure create --generate-param-json-input ntp-server > ntp-server.json

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export admin_network_cidr=<substitute-value-of-admin_network_cidr> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/exadata-infrastructure/create.html#cmdoption-admin-network-cidr
       export cloud_control_plane_server1=<substitute-value-of-cloud_control_plane_server1> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/exadata-infrastructure/create.html#cmdoption-cloud-control-plane-server1
       export cloud_control_plane_server2=<substitute-value-of-cloud_control_plane_server2> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/exadata-infrastructure/create.html#cmdoption-cloud-control-plane-server2
       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/exadata-infrastructure/create.html#cmdoption-compartment-id
       export display_name=<substitute-value-of-display_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/exadata-infrastructure/create.html#cmdoption-display-name
       export gateway=<substitute-value-of-gateway> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/exadata-infrastructure/create.html#cmdoption-gateway
       export infini_band_network_cidr=<substitute-value-of-infini_band_network_cidr> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/exadata-infrastructure/create.html#cmdoption-infini-band-network-cidr
       export netmask=<substitute-value-of-netmask> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/exadata-infrastructure/create.html#cmdoption-netmask
       export shape=<substitute-value-of-shape> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/exadata-infrastructure/create.html#cmdoption-shape
       export time_zone=<substitute-value-of-time_zone> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/exadata-infrastructure/create.html#cmdoption-time-zone

       exadata_infrastructure_id=$(oci db exadata-infrastructure create --admin-network-cidr $admin_network_cidr --cloud-control-plane-server1 $cloud_control_plane_server1 --cloud-control-plane-server2 $cloud_control_plane_server2 --compartment-id $compartment_id --display-name $display_name --dns-server file://dns-server.json --gateway $gateway --infini-band-network-cidr $infini_band_network_cidr --netmask $netmask --ntp-server file://ntp-server.json --shape $shape --time-zone $time_zone --query data.id --raw-output)

       oci db exadata-infrastructure update --exadata-infrastructure-id $exadata_infrastructure_id
