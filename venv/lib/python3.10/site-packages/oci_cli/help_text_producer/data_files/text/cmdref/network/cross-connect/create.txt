"create"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Creates a new cross-connect. Oracle recommends you create each cross-
connect in a CrossConnectGroup so you can use link aggregation with
the connection.

After creating the *CrossConnect* object, you need to go the
FastConnect location and request to have the physical cable installed.
For more information, see FastConnect Overview.

For the purposes of access control, you must provide the OCID of the
compartment where you want the cross-connect to reside. If you’re not
sure which compartment to use, put the cross-connect in the same
compartment with your VCN. For more information about compartments and
access control, see Overview of the IAM Service. For information about
OCIDs, see Resource Identifiers.

You may optionally specify a *display name* for the cross-connect. It
does not have to be unique, and you can change it. Avoid entering
confidential information.


Usage
=====

   oci network cross-connect create [OPTIONS]


Required Parameters
===================

--compartment-id, -c [text]

The OCID of the compartment to contain the cross-connect.

--location-name [text]

The name of the FastConnect location where this cross-connect will be
installed. To get a list of the available locations, see
ListCrossConnectLocations.

Example:

   CyrusOne, Chandler, AZ

--port-speed-shape-name [text]

The port speed for this cross-connect. To get a list of the available
port speeds, see ListCrossConnectPortSpeedShapes.

Example:

   10 Gbps


Optional Parameters
===================

--cross-connect-group-id [text]

The OCID of the cross-connect group to put this cross-connect in.

--customer-reference-name [text]

A reference name or identifier for the physical fiber connection that
this cross-connect uses.

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. For more information, see Resource Tags.

Example:

   {"Operations": {"CostCenter": "42"}}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--display-name [text]

A user-friendly name. Does not have to be unique, and it’s changeable.
Avoid entering confidential information.

--far-cross-connect-or-cross-connect-group-id [text]

If you already have an existing cross-connect or cross-connect group
at this FastConnect location, and you want this new cross-connect to
be on a different router (for the purposes of redundancy), provide the
OCID of that existing cross-connect or cross-connect group.

--freeform-tags [complex type]

Free-form tags for this resource. Each tag is a simple key-value pair
with no predefined name, type, or namespace. For more information, see
Resource Tags.

Example:

   {"Department": "Finance"}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--macsec-properties [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--max-wait-seconds [integer]

The maximum time to wait for the resource to reach the lifecycle state
defined by "--wait-for-state". Defaults to 1200 seconds.

--near-cross-connect-or-cross-connect-group-id [text]

If you already have an existing cross-connect or cross-connect group
at this FastConnect location, and you want this new cross-connect to
be on the same router, provide the OCID of that existing cross-connect
or cross-connect group.

--wait-for-state [text]

This operation creates, modifies or deletes a resource that has a
defined lifecycle state. Specify this option to perform the action and
then wait until the resource reaches a given lifecycle state. Multiple
states can be specified, returning on the first state. For example, "
--wait-for-state" SUCCEEDED "--wait-for-state" FAILED would return on
whichever lifecycle state is reached first. If timeout is reached, a
return code of 2 is returned. For any other error, a return code of 1
is returned.

Accepted values are:

   INACTIVE, PENDING_CUSTOMER, PROVISIONED, PROVISIONING, TERMINATED, TERMINATING

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the resource has
reached the lifecycle state defined by "--wait-for-state". Defaults to
30 seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/network/cross-connect/create.html#cmdoption-compartment-id
       export location_name=<substitute-value-of-location_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/network/cross-connect/create.html#cmdoption-location-name
       export port_speed_shape_name=<substitute-value-of-port_speed_shape_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/network/cross-connect/create.html#cmdoption-port-speed-shape-name

       oci network cross-connect create --compartment-id $compartment_id --location-name $location_name --port-speed-shape-name $port_speed_shape_name
