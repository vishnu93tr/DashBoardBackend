"create"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters


Description
===========

Creates an Exadata VM cluster on Exascale Infrastructure


Usage
=====

   oci db exadb-vm-cluster create [OPTIONS]


Required Parameters
===================

--availability-domain [text]

The name of the availability domain in which the Exadata VM cluster on
Exascale Infrastructure is located.

--backup-subnet-id [text]

The OCID of the backup network subnet associated with the Exadata VM
cluster on Exascale Infrastructure.

--compartment-id, -c [text]

The OCID of the compartment.

--display-name [text]

The user-friendly name for the Exadata VM cluster on Exascale
Infrastructure. The name does not need to be unique.

--enabled-e-cpu-count [integer]

The number of ECPUs to enable for an Exadata VM cluster on Exascale
Infrastructure.

--grid-image-id [text]

Grid Setup will be done using this grid image id.

The grid image ID can be obtained using the API /20160918/giVersions/
{majorVersion}/minorVersions?compartmentId=<compartmentId>&shapeFamil
y=EXADB_XS&availabilityDomain=<AD name>. The list of supported major
versions can be obtained using the API /20160918/giVersions?compartme
ntId=<compartmentId>&shape=ExaDbXS&availabilityDomain=<AD name>

--hostname [text]

The hostname for the Exadata VM cluster on Exascale Infrastructure.
The hostname must begin with an alphabetic character, and can contain
alphanumeric characters and hyphens (-). For Exadata systems, the
maximum length of the hostname is 12 characters.

The maximum length of the combined hostname and domain is 63
characters.

**Note:** The hostname must be unique within the subnet. If it is not
unique, then the Exadata VM cluster on Exascale Infrastructure will
fail to provision.

--node-count [integer]

The number of nodes in the Exadata VM cluster on Exascale
Infrastructure.

--shape [text]

The shape of the Exadata VM cluster on Exascale Infrastructure
resource

--ssh-authorized-keys-file [filename]

A file containing one or more public SSH keys to use for SSH access to
the Exadb VM Cluster. Use a newline character to separate multiple
keys. The length of the combined keys cannot exceed 10,000 characters.

--subnet-id [text]

The OCID of the subnet associated with the Exadata VM cluster on
Exascale Infrastructure.

--total-e-cpu-count [integer]

The number of Total ECPUs for an Exadata VM cluster on Exascale
Infrastructure.

--vault-id [text]

The OCID of the Exadata Database Storage Vault.

--vm-file-system-storage [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.


Optional Parameters
===================

--backup-network-nsg-ids [complex type]

A list of the OCIDs of the network security groups (NSGs) that the
backup network of this DB system belongs to. Setting this to an empty
array after the list is created removes the resource from all NSGs.
For more information about NSGs, see Security Rules. Applicable only
to Exadata systems. This is a complex type whose value must be valid
JSON. The value can be provided as a string on the command line or
passed in as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--cluster-name [text]

The cluster name for Exadata VM cluster on Exascale Infrastructure.
The cluster name must begin with an alphabetic character, and may
contain hyphens (-). Underscores (_) are not permitted. The cluster
name can be no longer than 11 characters and is not case sensitive.

--data-collection-options [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. For more information, see Resource Tags. This is a complex
type whose value must be valid JSON. The value can be provided as a
string on the command line or passed in as a file using the
file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--domain [text]

A domain name used for the Exadata VM cluster on Exascale
Infrastructure. If the Oracle-provided internet and VCN resolver is
enabled for the specified subnet, then the domain name for the subnet
is used (do not provide one). Otherwise, provide a valid DNS domain
name. Hyphens (-) are not permitted. Applies to Exadata Database
Service on Exascale Infrastructure only.

--freeform-tags [complex type]

Free-form tags for this resource. Each tag is a simple key-value pair
with no predefined name, type, or namespace. For more information, see
Resource Tags.

Example:

   {"Department": "Finance"}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--license-model [text]

The Oracle license model that applies to the Exadata VM cluster on
Exascale Infrastructure. The default is BRING_YOUR_OWN_LICENSE.

Accepted values are:

   BRING_YOUR_OWN_LICENSE, LICENSE_INCLUDED

--max-wait-seconds [integer]

The maximum time to wait for the resource to reach the lifecycle state
defined by "--wait-for-state". Defaults to 1200 seconds.

--nsg-ids [complex type]

The list of OCIDs for the network security groups (NSGs) to which this
resource belongs. Setting this to an empty list removes all resources
from all NSGs. For more information about NSGs, see Security Rules.
**NsgIds restrictions:** - A network security group (NSG) is optional
for Autonomous Databases with private access. The nsgIds list can be
empty. This is a complex type whose value must be valid JSON. The
value can be provided as a string on the command line or passed in as
a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--private-zone-id [text]

The private zone ID in which you want DNS records to be created.

--scan-listener-port-tcp [integer]

The TCP Single Client Access Name (SCAN) port. The default port is
1521.

--scan-listener-port-tcps [integer]

The Secured Communication (TCPS) protocol Single Client Access Name
(SCAN) port. The default port is 2484.

--security-attributes [complex type]

Security Attributes for this resource. Each key is predefined and
scoped to a namespace. For more information, see Resource Tags.
Example: *{“Oracle-ZPR”: {“MaxEgressCount”: {“value”: “42”, “mode”:
“audit”}}}* This is a complex type whose value must be valid JSON. The
value can be provided as a string on the command line or passed in as
a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--subscription-id [text]

The OCID of the subscription with which resource needs to be
associated with.

--system-version [text]

Operating system version of the image.

--time-zone [text]

The time zone to use for the Exadata VM cluster on Exascale
Infrastructure. For details, see Time Zones.

--wait-for-state [text]

This operation creates, modifies or deletes a resource that has a
defined lifecycle state. Specify this option to perform the action and
then wait until the resource reaches a given lifecycle state. Multiple
states can be specified, returning on the first state. For example, "
--wait-for-state" SUCCEEDED "--wait-for-state" FAILED would return on
whichever lifecycle state is reached first. If timeout is reached, a
return code of 2 is returned. For any other error, a return code of 1
is returned.

Accepted values are:

   AVAILABLE, FAILED, MAINTENANCE_IN_PROGRESS, PROVISIONING, TERMINATED, TERMINATING, UPDATING

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the resource has
reached the lifecycle state defined by "--wait-for-state". Defaults to
30 seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"
