"create"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter

* Other Examples


Description
===========

Creates a Compute Cloud@Customer infrastructure. Once created, Oracle
Services must connect the rack in the data center to this Oracle Cloud
Infrastructure resource.


Usage
=====

   oci ccc infrastructure create [OPTIONS]


Required Parameters
===================

--compartment-id, -c [text]

The compartment OCID associated with the infrastructure.

--display-name [text]

The name that will be used to display the Compute Cloud@Customer
infrastructure in the Oracle Cloud Infrastructure console. Does not
have to be unique and can be changed. Avoid entering confidential
information.

--subnet-id [text]

Identifier for network subnet that will be used to communicate with
Compute Cloud@Customer infrastructure.


Optional Parameters
===================

--connection-details [text]

A message describing the current connection state in more detail.

--connection-state [text]

The current connection state of the Compute Cloud@Customer
infrastructure. This value will default to REJECT if the value is not
provided. The only valid value at creation time is REJECT.

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. Example: *{“foo-namespace”: {“bar-key”: “value”}}* This is
a complex type whose value must be valid JSON. The value can be
provided as a string on the command line or passed in as a file using
the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--description [text]

A mutable client-meaningful text description of the Compute
Cloud@Customer infrastructure. Avoid entering confidential
information.

--freeform-tags [complex type]

Simple key-value pair that is applied without any predefined name,
type or scope. Exists for cross-compatibility only. Example: *{“bar-
key”: “value”}* This is a complex type whose value must be valid JSON.
The value can be provided as a string on the command line or passed in
as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--max-wait-seconds [integer]

The maximum time to wait for the resource to reach the lifecycle state
defined by "--wait-for-state". Defaults to 1200 seconds.

--upgrade-schedule-id [text]

Schedule used for upgrades. If no schedule is associated with the
infrastructure, it can be updated at any time.

--wait-for-state [text]

This operation creates, modifies or deletes a resource that has a
defined lifecycle state. Specify this option to perform the action and
then wait until the resource reaches a given lifecycle state. Multiple
states can be specified, returning on the first state. For example, "
--wait-for-state" SUCCEEDED "--wait-for-state" FAILED would return on
whichever lifecycle state is reached first. If timeout is reached, a
return code of 2 is returned. For any other error, a return code of 1
is returned.

Accepted values are:

   ACTIVE, DELETED, FAILED, NEEDS_ATTENTION

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the resource has
reached the lifecycle state defined by "--wait-for-state". Defaults to
30 seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/ccc/infrastructure/create.html#cmdoption-compartment-id
       export display_name=<substitute-value-of-display_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/ccc/infrastructure/create.html#cmdoption-display-name
       export subnet_id=<substitute-value-of-subnet_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/ccc/infrastructure/create.html#cmdoption-subnet-id

       oci ccc infrastructure create --compartment-id $compartment_id --display-name $display_name --subnet-id $subnet_id


Other Examples
==============


Description
-----------

Creates a new Compute Cloud@Customer infrastructure in the specified
compartment with a display name and a subnet. Avoid entering
confidential information.


Command
-------

    oci ccc infrastructure create -c <compartment_OCID> --display-name 'some text' --subnet-id <subnet_OCID>


Output
------

   {
    "data": {
         "ccc-upgrade-schedule-id": "null",
         "compartment-id": "<compartment_OCID>",
         "connection-details": "null",
         "connection-state": "REJECT",
         "defined-tags": {
              "Oracle-Tags": {
                   "CreatedBy": "user",
                   "CreatedOn": "2023-06-28T08:44:42.165Z"
              }
         },
         "description": "null",
         "display-name": "some text",
         "freeform-tags": {},
         "id": "<infrastructure_OCID>",
         "infrastructure-inventory": "null",
         "infrastructure-network-configuration": "null",
         "lifecycle-details": "null",
         "lifecycle-state": "ACTIVE",
         "provisioning-fingerprint": "null",
         "provisioning-pin": "<PIN>",
         "short-name": "<infrastructure_SHORTNAME>",
         "subnet-id": "<subnet_OCID>",
         "system-tags": {},
         "time-created": "2023-06-28T08:44:42.386000+00:00",
         "time-updated": "2023-06-28T08:44:42.386000+00:00",
         "upgrade-information": "null"
    }
   }
