"update"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters


Description
===========

Updates the specified tunnel. This operation lets you change tunnel
attributes such as the routing type (BGP dynamic routing or static
routing). Here are some important notes:

   * If you change the tunnel’s routing type or BGP session
     configuration, the tunnel will go     down while it’s
     reprovisioned.

   * If you want to switch the tunnel’s *routing* from *STATIC* to
     *BGP*, make sure the tunnel’s     BGP session configuration
     attributes have been set (bgpSessionConfig).

   * If you want to switch the tunnel’s *routing* from *BGP* to
     *STATIC*, make sure the     IPSecConnection already has at least
     one valid CIDR     static route.


Usage
=====

   oci network ip-sec-tunnel update [OPTIONS]


Required Parameters
===================

--ipsc-id [text]

The OCID of the IPSec connection.

--tunnel-id [text]

The OCID of the tunnel.


Optional Parameters
===================

--bgp-session-config [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--display-name [text]

A user-friendly name. Does not have to be unique, and it’s changeable.
Avoid entering confidential information.

--dpd-config [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--encryption-domain-config [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--force

Perform update without prompting for confirmation.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--if-match [text]

For optimistic concurrency control. In the PUT or DELETE call for a
resource, set the *if-match* parameter to the value of the etag from a
previous GET or POST response for that resource. The resource will be
updated or deleted only if the etag you provide matches the resource’s
current etag value.

--ike-version [text]

Internet Key Exchange protocol version.

Accepted values are:

   V1, V2

--max-wait-seconds [integer]

The maximum time to wait for the resource to reach the lifecycle state
defined by "--wait-for-state". Defaults to 1200 seconds.

--nat-translation-enabled [text]

By default (the *AUTO* setting), IKE sends packets with a source and
destination port set to 500, and when it detects that the port used to
forward packets has changed (most likely because a NAT device is
between the CPE device and the Oracle VPN headend) it will try to
negotiate the use of NAT-T.

The *ENABLED* option sets the IKE protocol to use port 4500 instead of
500 and forces encapsulating traffic with the ESP protocol inside UDP
packets.

The *DISABLED* option directs IKE to completely refuse to negotiate
NAT-T even if it senses there may be a NAT device in use.

Accepted values are:

   AUTO, DISABLED, ENABLED

--oracle-initiation [text]

Indicates whether the Oracle end of the IPSec connection is able to
initiate starting up the IPSec tunnel.

Accepted values are:

   INITIATOR_OR_RESPONDER, RESPONDER_ONLY

--phase-one-config [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--phase-two-config [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--routing [text]

The type of routing to use for this tunnel (BGP dynamic routing,
static routing, or policy-based routing).

Accepted values are:

   BGP, POLICY, STATIC

--wait-for-state [text]

This operation creates, modifies or deletes a resource that has a
defined lifecycle state. Specify this option to perform the action and
then wait until the resource reaches a given lifecycle state. Multiple
states can be specified, returning on the first state. For example, "
--wait-for-state" SUCCEEDED "--wait-for-state" FAILED would return on
whichever lifecycle state is reached first. If timeout is reached, a
return code of 2 is returned. For any other error, a return code of 1
is returned.

Accepted values are:

   AVAILABLE, PROVISIONING, TERMINATED, TERMINATING

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the resource has
reached the lifecycle state defined by "--wait-for-state". Defaults to
30 seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"
