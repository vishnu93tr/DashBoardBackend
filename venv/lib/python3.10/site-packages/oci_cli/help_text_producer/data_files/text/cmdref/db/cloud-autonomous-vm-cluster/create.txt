"create"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Creates an Autonomous Exadata VM cluster in the Oracle cloud. For
Exadata Cloud@Customer systems, see CreateAutonomousVmCluster.


Usage
=====

   oci db cloud-autonomous-vm-cluster create [OPTIONS]


Required Parameters
===================

--cloud-exadata-infrastructure-id [text]

The OCID of the cloud Exadata infrastructure.

--compartment-id, -c [text]

The OCID of the compartment.

--display-name [text]

The user-friendly name for the cloud Autonomous VM cluster. The name
does not need to be unique.

--subnet-id [text]

The OCID of the subnet the cloud Autonomous VM Cluster is associated
with.


Optional Parameters
===================

--autonomous-data-storage-size-in-tbs [text]

The data disk group size to be allocated for Autonomous Databases, in
TBs.

--cluster-time-zone [text]

The time zone to use for the Cloud Autonomous VM cluster. For details,
see DB System Time Zones.

--compute-model [text]

The compute model of the Cloud Autonomous VM Cluster. ECPU compute
model is the recommended model and OCPU compute model is legacy.

Accepted values are:

   ECPU, OCPU

--cpu-core-count-per-node [integer]

The number of CPU cores to be enabled per VM cluster node.

--db-servers [complex type]

The list of database servers. This is a complex type whose value must
be valid JSON. The value can be provided as a string on the command
line or passed in as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. For more information, see Resource Tags. This is a complex
type whose value must be valid JSON. The value can be provided as a
string on the command line or passed in as a file using the
file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--description [text]

User defined description of the cloud Autonomous VM cluster.

--freeform-tags [complex type]

Free-form tags for this resource. Each tag is a simple key-value pair
with no predefined name, type, or namespace. For more information, see
Resource Tags.

Example:

   {"Department": "Finance"}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--is-mtls-enabled-vm-cluster [boolean]

Enable mutual TLS(mTLS) authentication for database at time of
provisioning a VMCluster. This is applicable to database TLS
Certificates only. Default is TLS

--license-model [text]

The Oracle license model that applies to the Oracle Autonomous
Database. Bring your own license (BYOL) allows you to apply your
current on-premises Oracle software licenses to equivalent, highly
automated Oracle services in the cloud. License Included allows you to
subscribe to new Oracle Database software licenses and the Oracle
Database service. Note that when provisioning an Autonomous Database
on dedicated Exadata infrastructure, this attribute must be null. It
is already set at the Autonomous Exadata Infrastructure level. When
provisioning an Autonomous Database Serverless  database, if a value
is not specified, the system defaults the value to
*BRING_YOUR_OWN_LICENSE*. Bring your own license (BYOL) also allows
you to select the DB edition using the optional parameter.

This cannot be updated in parallel with any of the following:
cpuCoreCount, computeCount, dataStorageSizeInTBs, adminPassword,
isMTLSConnectionRequired, dbWorkload, privateEndpointLabel, nsgIds,
dbVersion, dbName, scheduledOperations, dbToolsDetails, or isFreeTier.

Accepted values are:

   BRING_YOUR_OWN_LICENSE, LICENSE_INCLUDED

--maintenance-window-details [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--max-wait-seconds [integer]

The maximum time to wait for the resource to reach the lifecycle state
defined by "--wait-for-state". Defaults to 1200 seconds.

--memory-per-oracle-compute-unit-in-gbs [integer]

The amount of memory (in GBs) to be enabled per OCPU or ECPU.

--nsg-ids [complex type]

The list of OCIDs for the network security groups (NSGs) to which this
resource belongs. Setting this to an empty list removes all resources
from all NSGs. For more information about NSGs, see Security Rules.
**NsgIds restrictions:** - A network security group (NSG) is optional
for Autonomous Databases with private access. The nsgIds list can be
empty. This is a complex type whose value must be valid JSON. The
value can be provided as a string on the command line or passed in as
a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--scan-listener-port-non-tls [integer]

The SCAN Listener Non TLS port. Default is 1521.

--scan-listener-port-tls [integer]

The SCAN Listener TLS port. Default is 2484.

--security-attributes [complex type]

Security Attributes for this resource. Each key is predefined and
scoped to a namespace. For more information, see Resource Tags.
Example: *{“Oracle-ZPR”: {“MaxEgressCount”: {“value”: “42”, “mode”:
“audit”}}}* This is a complex type whose value must be valid JSON. The
value can be provided as a string on the command line or passed in as
a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--total-container-databases [integer]

The total number of Autonomous Container Databases that can be
created.

--wait-for-state [text]

This operation creates, modifies or deletes a resource that has a
defined lifecycle state. Specify this option to perform the action and
then wait until the resource reaches a given lifecycle state. Multiple
states can be specified, returning on the first state. For example, "
--wait-for-state" SUCCEEDED "--wait-for-state" FAILED would return on
whichever lifecycle state is reached first. If timeout is reached, a
return code of 2 is returned. For any other error, a return code of 1
is returned.

Accepted values are:

   AVAILABLE, FAILED, MAINTENANCE_IN_PROGRESS, PROVISIONING, TERMINATED, TERMINATING, UPDATING

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the resource has
reached the lifecycle state defined by "--wait-for-state". Defaults to
30 seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export cloud_exadata_infrastructure_id=<substitute-value-of-cloud_exadata_infrastructure_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/cloud-autonomous-vm-cluster/create.html#cmdoption-cloud-exadata-infrastructure-id
       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/cloud-autonomous-vm-cluster/create.html#cmdoption-compartment-id
       export display_name=<substitute-value-of-display_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/cloud-autonomous-vm-cluster/create.html#cmdoption-display-name
       export subnet_id=<substitute-value-of-subnet_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/cloud-autonomous-vm-cluster/create.html#cmdoption-subnet-id

       oci db cloud-autonomous-vm-cluster create --cloud-exadata-infrastructure-id $cloud_exadata_infrastructure_id --compartment-id $compartment_id --display-name $display_name --subnet-id $subnet_id
