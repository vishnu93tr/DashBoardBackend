"create"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Create a vSphere Cluster in software-defined data center (SDDC).

Use the WorkRequest operations to track the creation of the Cluster.

**Important:** You must configure the Cluster’s networking resources
with the security rules detailed in Security Rules for Oracle Cloud
VMware Solution SDDCs. Otherwise, provisioning the SDDC will fail. The
rules are based on the requirements set by VMware.


Usage
=====

   oci ocvs cluster cluster create [OPTIONS]


Required Parameters
===================

--compute-availability-domain [text]

The availability domain to create the Cluster’s ESXi hosts in. For
multi-AD Cluster deployment, set to *multi-AD*.

--esxi-hosts-count [integer]

The number of ESXi hosts to create in the Cluster. You can add more
hosts later (see CreateEsxiHost).

**Note:** If you later delete EXSi hosts from a production Cluster to
make SDDC total host count less than 3, you are still billed for the 3
minimum recommended ESXi hosts. Also, you cannot add more VMware
workloads to the Cluster until the SDDC again has at least 3 ESXi
hosts.

--network-configuration [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--sddc-id [text]

The OCID of the SDDC that the Cluster belongs to.


Optional Parameters
===================

--capacity-reservation-id [text]

The OCID of the Capacity Reservation.

--datastores [complex type]

A list of datastore info for the Cluster. This value is required only
when *initialHostShapeName* is a standard shape.

This option is a JSON list with items of type DatastoreInfo.  For
documentation on DatastoreInfo please see our API reference: https://
docs.cloud.oracle.com/api/#/en/cluster/20230701/datatypes/DatastoreIn
fo. This is a complex type whose value must be valid JSON. The value
can be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. For more information, see Resource Tags.

Example:

   {"Operations": {"CostCenter": "42"}}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--display-name [text]

A descriptive name for the Cluster. Cluster name requirements are 1-16
character length limit, Must start with a letter, Must be English
letters, numbers, - only, No repeating hyphens, Must be unique within
the region. Avoid entering confidential information.

--esxi-software-version [text]

The ESXi software bundle to install on the ESXi hosts in the Cluster.
Only versions under the same vmwareSoftwareVersion and have been
validate by Oracle Cloud VMware Solution will be accepted. To get a
list of the available versions, use
ListSupportedVmwareSoftwareVersions.

--freeform-tags [complex type]

Free-form tags for this resource. Each tag is a simple key-value pair
with no predefined name, type, or namespace. For more information, see
Resource Tags.

Example:

   {"Department": "Finance"}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--initial-commitment [text]

The billing option selected during Cluster creation.
ListSupportedCommitments.

Accepted values are:

   HOUR, MONTH, ONE_YEAR, THREE_YEARS

--initial-host-ocpu-count [float]

The initial OCPU count of the Cluster’s ESXi hosts.

--initial-host-shape-name [text]

The initial compute shape of the Cluster’s ESXi hosts.
ListSupportedHostShapes.

--instance-display-name-prefix [text]

A prefix used in the name of each ESXi host and Compute instance in
the Cluster. If this isn’t set, the Cluster’s *displayName* is used as
the prefix.

For example, if the value is *myCluster*, the ESXi hosts are named
*myCluster-1*, *myCluster-2*, and so on.

--is-shielded-instance-enabled [boolean]

Indicates whether shielded instance is enabled for this Cluster.

--max-wait-seconds [integer]

The maximum time to wait for the work request to reach the state
defined by "--wait-for-state". Defaults to 1200 seconds.

--vmware-software-version [text]

The VMware software bundle to install on the ESXi hosts in the
Cluster. To get a list of the available versions, use
ListSupportedVmwareSoftwareVersions.

--wait-for-state [text]

This operation asynchronously creates, modifies or deletes a resource
and uses a work request to track the progress of the operation.
Specify this option to perform the action and then wait until the work
request reaches a certain state. Multiple states can be specified,
returning on the first state. For example, "--wait-for-state"
SUCCEEDED "--wait-for-state" FAILED would return on whichever
lifecycle state is reached first. If timeout is reached, a return code
of 2 is returned. For any other error, a return code of 1 is returned.

Accepted values are:

   ACCEPTED, CANCELED, CANCELING, FAILED, IN_PROGRESS, SUCCEEDED

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the work request
has reached the state defined by "--wait-for-state". Defaults to 30
seconds.

--workload-network-cidr [text]

The CIDR block for the IP addresses that VMware VMs in the Cluster use
to run application workloads.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy and paste the following example into a JSON file, replacing the
example parameters with your own.

       oci ocvs sddc create --generate-param-json-input initial-configuration > initial-configuration.json

       oci ocvs cluster cluster create --generate-param-json-input network-configuration > network-configuration.json

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/ocvs/sddc/create.html#cmdoption-compartment-id
       export hcx_mode=<substitute-value-of-hcx_mode> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/ocvs/sddc/create.html#cmdoption-hcx-mode
       export ssh_authorized_keys=<substitute-value-of-ssh_authorized_keys> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/ocvs/sddc/create.html#cmdoption-ssh-authorized-keys
       export vmware_version=<substitute-value-of-vmware_version> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/ocvs/sddc/create.html#cmdoption-vmware-version
       export compute_availability_domain=<substitute-value-of-compute_availability_domain> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/ocvs/cluster/cluster/create.html#cmdoption-compute-availability-domain
       export esxi_hosts_count=<substitute-value-of-esxi_hosts_count> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/ocvs/cluster/cluster/create.html#cmdoption-esxi-hosts-count

       sddc_id=$(oci ocvs sddc create --compartment-id $compartment_id --hcx-mode $hcx_mode --initial-configuration file://initial-configuration.json --ssh-authorized-keys $ssh_authorized_keys --vmware-version $vmware_version --query data.id --raw-output)

       oci ocvs cluster cluster create --compute-availability-domain $compute_availability_domain --esxi-hosts-count $esxi_hosts_count --network-configuration file://network-configuration.json --sddc-id $sddc_id
