"create"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Creates a new OpensearchCluster Pipeline.


Usage
=====

   oci opensearch pipeline create [OPTIONS]


Required Parameters
===================

--compartment-id, -c [text]

The OCID of the compartment to create the pipeline in.

--data-prepper-configuration-body [text]

The data prepper config in YAML format. The command accepts the data
prepper config as a string or within a .yaml file. If you provide the
configuration as a string, each new line must be escaped with .

--display-name [text]

The name of the cluster pipeline. Avoid entering confidential
information.

--memory-gb [integer]

The amount of memory in GB, for each pipeline node.

--node-count [integer]

The number of nodes configured for the pipeline.

--ocpu-count [integer]

The number of OCPUs configured for each pipeline node.

--pipeline-configuration-body [text]

The pipeline configuration in YAML format. The command accepts the
pipeline configuration as a string or within a .yaml file. If you
provide the configuration as a string, each new line must be escaped
with .


Optional Parameters
===================

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. Example: *{“foo-namespace”: {“bar-key”: “value”}}* This is
a complex type whose value must be valid JSON. The value can be
provided as a string on the command line or passed in as a file using
the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--freeform-tags [complex type]

Simple key-value pair that is applied without any predefined name,
type or scope. Exists for cross-compatibility only. Example: *{“bar-
key”: “value”}* This is a complex type whose value must be valid JSON.
The value can be provided as a string on the command line or passed in
as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--max-wait-seconds [integer]

The maximum time to wait for the work request to reach the state
defined by "--wait-for-state". Defaults to 1200 seconds.

--nsg-id [text]

The OCID of the NSG where the pipeline private endpoint vnic will be
attached.

--opc-dry-run [boolean]

Indicates that the request is a dry run, if set to “true”. A dry run
request does not modify the configuration item details and is used
only to perform validation on the submitted data.

--reverse-connection-endpoints [complex type]

The customer IP and the corresponding fully qualified domain name that
the pipeline will connect to.

This option is a JSON list with items of type
OpensearchPipelineReverseConnectionEndpoint.  For documentation on
OpensearchPipelineReverseConnectionEndpoint please see our API
reference: https://docs.cloud.oracle.com/api/#/en/opensearchclusterpi
peline/20180828/datatypes/OpensearchPipelineReverseConnectionEndpoint.
This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--subnet-compartment-id [text]

The OCID for the compartment where the pipeline’s subnet is located.

--subnet-id [text]

The OCID of the pipeline’s subnet.

--vcn-compartment-id [text]

The OCID for the compartment where the pipeline’s VCN is located.

--vcn-id [text]

The OCID of the pipeline’s VCN.

--wait-for-state [text]

This operation asynchronously creates, modifies or deletes a resource
and uses a work request to track the progress of the operation.
Specify this option to perform the action and then wait until the work
request reaches a certain state. Multiple states can be specified,
returning on the first state. For example, "--wait-for-state"
SUCCEEDED "--wait-for-state" FAILED would return on whichever
lifecycle state is reached first. If timeout is reached, a return code
of 2 is returned. For any other error, a return code of 1 is returned.

Accepted values are:

   ACCEPTED, CANCELED, CANCELING, FAILED, IN_PROGRESS, SUCCEEDED

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the work request
has reached the state defined by "--wait-for-state". Defaults to 30
seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/opensearch/pipeline/create.html#cmdoption-compartment-id
       export data_prepper_configuration_body=<substitute-value-of-data_prepper_configuration_body> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/opensearch/pipeline/create.html#cmdoption-data-prepper-configuration-body
       export display_name=<substitute-value-of-display_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/opensearch/pipeline/create.html#cmdoption-display-name
       export memory_gb=<substitute-value-of-memory_gb> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/opensearch/pipeline/create.html#cmdoption-memory-gb
       export node_count=<substitute-value-of-node_count> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/opensearch/pipeline/create.html#cmdoption-node-count
       export ocpu_count=<substitute-value-of-ocpu_count> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/opensearch/pipeline/create.html#cmdoption-ocpu-count
       export pipeline_configuration_body=<substitute-value-of-pipeline_configuration_body> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/opensearch/pipeline/create.html#cmdoption-pipeline-configuration-body

       oci opensearch pipeline create --compartment-id $compartment_id --data-prepper-configuration-body $data_prepper_configuration_body --display-name $display_name --memory-gb $memory_gb --node-count $node_count --ocpu-count $ocpu_count --pipeline-configuration-body $pipeline_configuration_body
