"query"
*******

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Returns a list of search results within a data catalog.


Usage
=====

   oci data-catalog search query [OPTIONS]


Required Parameters
===================

--catalog-id [text]

Unique catalog identifier.


Optional Parameters
===================

--dimensions [complex type]

List of properties of dataObjects that needs to aggregated on for
facets. This is a complex type whose value must be valid JSON. The
value can be provided as a string on the command line or passed in as
a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--display-name [text]

A filter to return only resources that match the entire display name
given. The match is not case sensitive.

--faceted-query [text]

Query string that a dataObject is to be searched with. Used in the
faceted query request

--filters [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--lifecycle-state [text]

A filter to return only resources that match the specified lifecycle
state. The value is case insensitive.

Accepted values are:

   ACTIVE, CREATING, DELETED, DELETING, FAILED, INACTIVE, MOVING, UPDATING

--limit [integer]

The maximum number of items to return.

--name [text]

Immutable resource name.

--page [text]

The page token representing the page at which to start retrieving
results. This is usually retrieved from a previous list call.

--query-text [text]

Search query dsl that defines the query components including fields
and predicates.

--sort [complex type]

Array of objects having details about sort field and order.

This option is a JSON list with items of type
FacetedSearchSortRequest.  For documentation on
FacetedSearchSortRequest please see our API reference: https://docs.c
loud.oracle.com/api/#/en/datacatalog/20190325/datatypes/FacetedSearch
SortRequest. This is a complex type whose value must be valid JSON.
The value can be provided as a string on the command line or passed in
as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--sort-by [text]

The field to sort by. Only one sort order may be provided. Default
order for TIMECREATED is descending. Default order for DISPLAYNAME is
ascending. If no value is specified TIMECREATED is default.

Accepted values are:

   DISPLAYNAME, TIMECREATED

--sort-order [text]

The sort order to use, either ‘asc’ or ‘desc’.

Accepted values are:

   ASC, DESC

--timeout [text]

A search timeout string (for example, timeout=4000ms), bounding the
search request to be executed within the specified time value and bail
with the hits accumulated up to that point when expired. Defaults to
no timeout.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/data-catalog/catalog/create.html#cmdoption-compartment-id

       catalog_id=$(oci data-catalog catalog create --compartment-id $compartment_id --query data.id --raw-output)

       oci data-catalog search query --catalog-id $catalog_id
