"list"
******

* Description

* Usage

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Lists the users in your tenancy. You must specify your tenancy’s OCID
as the value for the compartment ID (remember that the tenancy is
simply the root compartment). See Where to Get the Tenancy’s OCID and
User’s OCID.


Usage
=====

   oci iam user list [OPTIONS]


Optional Parameters
===================

--all

Fetches all pages of results. If you provide this option, then you
cannot provide the "--limit" option.

--compartment-id, -c [text]

The OCID of the compartment (remember that the tenancy is simply the
root compartment). If not provided, this parameter will use the
tenancy’s OCID (root compartment’s OCID) from the config file.

--external-identifier [text]

The id of a user in the identity provider.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--identity-provider-id [text]

The id of the identity provider.

--lifecycle-state [text]

A filter to only return resources that match the given lifecycle
state.  The state value is case-insensitive.

Accepted values are:

   ACTIVE, CREATING, DELETED, DELETING, INACTIVE

--limit [integer]

The maximum number of items to return in a paginated “List” call.

--name [text]

A filter to only return resources that match the given name exactly.

--page [text]

The value of the *opc-next-page* response header from the previous
“List” call.

--page-size [integer]

When fetching results, the number of results to fetch per call. Only
valid when used with "--all" or "--limit", and ignored otherwise.

--sort-by [text]

The field to sort by. You can provide one sort order (*sortOrder*).
Default order for TIMECREATED is descending. Default order for NAME is
ascending. The NAME sort order is case sensitive.

**Note:** In general, some “List” operations (for example,
*ListInstances*) let you optionally filter by Availability Domain if
the scope of the resource type is within a single Availability Domain.
If you call one of these “List” operations without specifying an
Availability Domain, the resources are grouped by Availability Domain,
then sorted.

Accepted values are:

   NAME, TIMECREATED

--sort-order [text]

The sort order to use, either ascending (*ASC*) or descending
(*DESC*). The NAME sort order is case sensitive.

Accepted values are:

   ASC, DESC


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       oci iam user list
