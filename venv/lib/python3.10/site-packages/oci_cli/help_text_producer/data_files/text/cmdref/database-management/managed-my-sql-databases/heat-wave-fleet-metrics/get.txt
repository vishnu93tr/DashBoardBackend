"get"
*****

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Gets the health metrics for a fleet of HeatWave clusters in a
compartment.


Usage
=====

   oci database-management managed-my-sql-databases heat-wave-fleet-metrics get [OPTIONS]


Required Parameters
===================

--compartment-id, -c [text]

The OCID of the compartment.

--end-time [text]

The end time of the time range to retrieve the health metrics of a
Managed Database in UTC in ISO-8601 format, which is “yyyy-MM-
dd’T’hh:mm:ss.sss’Z’”.

--start-time [text]

The start time of the time range to retrieve the health metrics of a
Managed Database in UTC in ISO-8601 format, which is “yyyy-MM-
dd’T’hh:mm:ss.sss’Z’”.


Optional Parameters
===================

--filter-by-heat-wave-shape [text]

The parameter to filter by HeatWave node shape.

--filter-by-heat-wave-status [text]

The parameter to filter by HeatWave cluster status.

Accepted values are:

   DOWN, UNKNOWN, UP

--filter-by-metric-names [text]

The filter used to retrieve a specific set of metrics by passing the
desired metric names with a comma separator. Note that, by default,
the service returns all supported metrics.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--is-heat-wave-lakehouse-enabled [boolean]

The parameter to filter based on whether HeatWave Lakehouse is enabled
for the cluster.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/database-management/managed-my-sql-databases/heat-wave-fleet-metrics/get.html#cmdoption-compartment-id
       export end_time=<substitute-value-of-end_time> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/database-management/managed-my-sql-databases/heat-wave-fleet-metrics/get.html#cmdoption-end-time
       export start_time=<substitute-value-of-start_time> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/database-management/managed-my-sql-databases/heat-wave-fleet-metrics/get.html#cmdoption-start-time

       oci database-management managed-my-sql-databases heat-wave-fleet-metrics get --compartment-id $compartment_id --end-time $end_time --start-time $start_time
