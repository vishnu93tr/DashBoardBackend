"list"
******

* Description

* Usage

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Lists managed instances that match the specified compartment or
managed instance OCID. Filter the list against a variety of criteria
including but not limited to its name, status, architecture, and OS
version.


Usage
=====

   oci os-management-hub managed-instance list [OPTIONS]


Optional Parameters
===================

--advisory-name [text]

The assigned erratum name. It’s unique and not changeable.

Example:

   ELSA-2020-5804

--agent-version [text]

A filter to return only managed instances with the specified version
of osmh-agent running.

--all

Fetches all pages of results. If you provide this option, then you
cannot provide the "--limit" option.

--arch-type [text]

A filter to return only instances whose architecture type matches the
given architecture.

Accepted values are:

   AARCH64, I386, I686, NOARCH, SRC, X86_64

--compartment-id, -c [text]

The OCID of the compartment that contains the resources to list. This
filter returns only resources contained within the specified
compartment.

--display-name [text]

A filter to return resources that match the given display names.

--display-name-contains [text]

A filter to return resources that may partially match the given
display name.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--group [text]

A filter to return only managed instances that are attached to the
specified group.

--group-ne [text]

A filter to return only managed instances that are NOT attached to the
specified group.

--is-attached-to-group-or-stage [boolean]

A filter to return only managed instances that are attached to the
specified group or lifecycle environment.

--is-managed-by-alx [boolean]

Indicates whether to list only resources managed by the Autonomous
Linux service.

--is-management-station [boolean]

A filter to return only managed instances that are acting as
management stations.

--is-profile-attached [boolean]

A filter to return only managed instances with a registration profile
attached.

--is-reboot-required [boolean]

A filter to return only managed instances that require a reboot to
install updates.

--lifecycle-env-id [text]

A filter to return only managed instances in a specific lifecycle
environment.

--lifecycle-env-id-ne [text]

A filter to return only managed instances that aren’t in a specific
lifecycle environment.

--limit [integer]

For list pagination. The maximum number of results per page, or items
to return in a paginated “List” call. For important details about how
pagination works, see List Pagination.

Example:

   50

--location [text]

A filter to return only resources whose location matches the given
value.

Accepted values are:

   AZURE, EC2, GCP, OCI_COMPUTE, ON_PREMISE

--location-ne [text]

A filter to return only resources whose location does not match the
given value.

Accepted values are:

   AZURE, EC2, GCP, OCI_COMPUTE, ON_PREMISE

--managed-instance-id [text]

The OCID of the managed instance. This filter returns resources
associated with this managed instance.

--management-station [text]

A filter to return resources that are associated with the specified
management station OCIDs.

--management-station-ne [text]

A filter to return resources that aren’t associated with the specified
management station OCIDs.

--os-family [text]

A filter to return only resources that match the given operating
system family.

Accepted values are:

   ALL, ORACLE_LINUX_6, ORACLE_LINUX_7, ORACLE_LINUX_8, ORACLE_LINUX_9, WINDOWS_SERVER_2016, WINDOWS_SERVER_2019, WINDOWS_SERVER_2022

--page [text]

For list pagination. The value of the *opc-next-page* response header
from the previous “List” call. For important details about how
pagination works, see List Pagination.

Example:

   3

--page-size [integer]

When fetching results, the number of results to fetch per call. Only
valid when used with "--all" or "--limit", and ignored otherwise.

--profile-id [text]

A multi filter to return only managed instances that match the given
profile ids.

--profile-id-ne [text]

A multi filter to return only managed instances that don’t contain the
given profile OCIDs.

--software-source-id [text]

The OCID of the software source. This filter returns resources
associated with this software source.

--sort-by [text]

The field to sort by. Only one sort order may be provided. Default
order for timeCreated is descending. Default order for displayName is
ascending.

Accepted values are:

   displayName, timeCreated

--sort-order [text]

The sort order to use, either ‘ASC’ or ‘DESC’.

Accepted values are:

   ASC, DESC

--stage [boolean]

A filter to return only managed instances that are associated with the
specified lifecycle environment.

--stage-ne [text]

A filter to return only managed instances that are NOT associated with
the specified lifecycle environment.

--status [text]

A filter to return only managed instances whose status matches the
status provided.

Accepted values are:

   DELETING, ERROR, NORMAL, ONBOARDING, REBOOTING, REGISTRATION_ERROR, UNREACHABLE, WARNING


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       oci os-management-hub managed-instance list
