"list-stages"
*************

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Returns a list of Remediation Run Stages based on the specified query
parameters and Remediation Run identifier.


Usage
=====

   oci adm remediation-run-stage list-stages [OPTIONS]


Required Parameters
===================

--remediation-run-id [text]

Unique Remediation Run identifier path parameter.


Optional Parameters
===================

--all

Fetches all pages of results. If you provide this option, then you
cannot provide the "--limit" option.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--limit [integer]

The maximum number of items to return.

--page [text]

A token representing the position at which to start retrieving
results. This must come from the *opc-next-page* header field of a
previous response.

--page-size [integer]

When fetching results, the number of results to fetch per call. Only
valid when used with "--all" or "--limit", and ignored otherwise.

--sort-by [text]

The field used to sort Stages. Only one sort order is allowed. Default
order for status is the following sequence: **CREATED, IN_PROGRESS,
SUCCEEDED, FAILED, CANCELING, and CANCELED**. Default order for
_timeCreated_ is **descending**. Default order for _timeFinished_ is
**descending**. Default order for _timeStarted_ is **descending**.
Default order for _type_ is the following sequence: **DETECT,
RECOMMEND, VERIFY, and APPLY**.

Accepted values are:

   status, timeCreated, timeFinished, timeStarted, type

--sort-order [text]

The sort order to use, either ‘ASC’ or ‘DESC’.

Accepted values are:

   ASC, DESC

--status [text]

A filter to return only Stages that match the specified status.

Accepted values are:

   CANCELED, CANCELING, CREATED, FAILED, IN_PROGRESS, SUCCEEDED

--type [text]

A filter to return only Stages that match the specified type.

Accepted values are:

   APPLY, DETECT, RECOMMEND, VERIFY


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy and paste the following example into a JSON file, replacing the
example parameters with your own.

       oci adm remediation-recipe create --generate-param-json-input detect-configuration > detect-configuration.json
       oci adm remediation-recipe create --generate-param-json-input network-configuration > network-configuration.json
       oci adm remediation-recipe create --generate-param-json-input scm-configuration > scm-configuration.json
       oci adm remediation-recipe create --generate-param-json-input verify-configuration > verify-configuration.json

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/adm/knowledge-base/create.html#cmdoption-compartment-id
       export is_run_triggered_on_kb_change=<substitute-value-of-is_run_triggered_on_kb_change> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/adm/remediation-recipe/create.html#cmdoption-is-run-triggered-on-kb-change

       knowledge_base_id=$(oci adm knowledge-base create --compartment-id $compartment_id --query data.id --raw-output)

       remediation_recipe_id=$(oci adm remediation-recipe create --compartment-id $compartment_id --detect-configuration file://detect-configuration.json --is-run-triggered-on-kb-change $is_run_triggered_on_kb_change --knowledge-base-id $knowledge_base_id --network-configuration file://network-configuration.json --scm-configuration file://scm-configuration.json --verify-configuration file://verify-configuration.json --query data.id --raw-output)

       remediation_run_id=$(oci adm remediation-run create --remediation-recipe-id $remediation_recipe_id --query data.id --raw-output)

       oci adm remediation-run-stage list-stages --remediation-run-id $remediation_run_id
