"create"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Create a new AnalyticsInstance in the specified compartment. The
operation is long-running and creates a new WorkRequest.


Usage
=====

   oci analytics analytics-instance create [OPTIONS]


Required Parameters
===================

--capacity-type [text]

The capacity model to use.

--capacity-value [integer]

The capacity value selected (OLPU count, number of users, …etc…). This
parameter affects the number of CPUs, amount of memory or other
resources allocated to the instance.

--compartment-id, -c [text]

The OCID of the compartment.

--feature-set [text]

Analytics feature set.

Accepted values are:

   ENTERPRISE_ANALYTICS, SELF_SERVICE_ANALYTICS

--license-type [text]

The license used for the service.

Accepted values are:

   BRING_YOUR_OWN_LICENSE, LICENSE_INCLUDED

--name [text]

The name of the Analytics instance. This name must be unique in the
tenancy and cannot be changed.


Optional Parameters
===================

--admin-user [text]

user name of the authorized user.

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. For more information, see Resource Tags.

Example:

   {"Operations": {"CostCenter": "42"}}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--description [text]

Optional description.

--domain-id [text]

domain id for which the user is authorized.

--email-notification [text]

Email address receiving notifications.

--feature-bundle [text]

The feature set of an Analytics instance.

Accepted values are:

   EE_EMBEDDED, FAW_FREE, FAW_PAID, SE_EMBEDDED

--freeform-tags [complex type]

Free-form tags for this resource. Each tag is a simple key-value pair
with no predefined name, type, or namespace. For more information, see
Resource Tags.

Example:

   {"Department": "Finance"}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--idcs-access-token-file [filename]

A file containing the IDCS access token identifying a stripe and
service administrator user.

--kms-key-id [text]

OCID of the OCI Vault Key encrypting the customer data stored in this
Analytics instance. A null value indicates Oracle managed default
encryption.

--max-wait-seconds [integer]

The maximum time to wait for the work request to reach the state
defined by "--wait-for-state". Defaults to 1200 seconds.

--network-endpoint-details [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--update-channel [text]

Analytics instance update channel.

Accepted values are:

   EARLY, PHASE_1, PHASE_2, REGULAR

--wait-for-state [text]

This operation asynchronously creates, modifies or deletes a resource
and uses a work request to track the progress of the operation.
Specify this option to perform the action and then wait until the work
request reaches a certain state. Multiple states can be specified,
returning on the first state. For example, "--wait-for-state"
SUCCEEDED "--wait-for-state" FAILED would return on whichever
lifecycle state is reached first. If timeout is reached, a return code
of 2 is returned. For any other error, a return code of 1 is returned.

Accepted values are:

   ACCEPTED, CANCELED, CANCELING, FAILED, IN_PROGRESS, SUCCEEDED

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the work request
has reached the state defined by "--wait-for-state". Defaults to 30
seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export capacity_type=<substitute-value-of-capacity_type> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/analytics/analytics-instance/create.html#cmdoption-capacity-type
       export capacity_value=<substitute-value-of-capacity_value> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/analytics/analytics-instance/create.html#cmdoption-capacity-value
       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/analytics/analytics-instance/create.html#cmdoption-compartment-id
       export feature_set=<substitute-value-of-feature_set> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/analytics/analytics-instance/create.html#cmdoption-feature-set
       export license_type=<substitute-value-of-license_type> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/analytics/analytics-instance/create.html#cmdoption-license-type
       export name=<substitute-value-of-name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/analytics/analytics-instance/create.html#cmdoption-name

       oci analytics analytics-instance create --capacity-type $capacity_type --capacity-value $capacity_value --compartment-id $compartment_id --feature-set $feature_set --license-type $license_type --name $name
