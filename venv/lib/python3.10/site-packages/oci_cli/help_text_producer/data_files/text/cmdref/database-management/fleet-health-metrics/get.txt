"get"
*****

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Gets the health metrics for a fleet of databases in a compartment or
in a Managed Database Group. Either the CompartmentId or the
ManagedDatabaseGroupId query parameters must be provided to retrieve
the health metrics.


Usage
=====

   oci database-management fleet-health-metrics get [OPTIONS]


Required Parameters
===================

--compare-baseline-time [text]

The baseline time for metrics comparison.

--compare-target-time [text]

The target time for metrics comparison.


Optional Parameters
===================

--compare-type [text]

The time window used for metrics comparison.

Accepted values are:

   DAY, HOUR, WEEK

--compartment-id, -c [text]

The OCID of the compartment.

--defined-tag-equals [text]

A list of tag filters to apply.  Only resources with a defined tag
matching the value will be returned. Each item in the list has the
format “{namespace}.{tagName}.{value}”.  All inputs are case-
insensitive. Multiple values for the same key (i.e. same namespace and
tag name) are interpreted as “OR”. Values for different keys (i.e.
different namespaces, different tag names, or both) are interpreted as
“AND”.

--defined-tag-exists [text]

A list of tag existence filters to apply.  Only resources for which
the specified defined tags exist will be returned. Each item in the
list has the format “{namespace}.{tagName}.true” (for checking
existence of a defined tag) or “{namespace}.true”.  All inputs are
case-insensitive. Currently, only existence (“true” at the end) is
supported. Absence (“false” at the end) is not supported. Multiple
values for the same key (i.e. same namespace and tag name) are
interpreted as “OR”. Values for different keys (i.e. different
namespaces, different tag names, or both) are interpreted as “AND”.

--filter-by-database-deployment-type [text]

The filter used to filter the databases in the fleet by a specific
Oracle Database deployment type.

--filter-by-database-sub-type [text]

The filter used to filter the databases in the fleet by a specific
Oracle Database subtype.

--filter-by-database-type [text]

The filter used to filter the databases in the fleet by a specific
Oracle Database type.

--filter-by-database-version [text]

The filter used to filter the databases in the fleet by a specific
Oracle Database version.

--filter-by-metric-names [text]

The filter used to retrieve a specific set of metrics by passing the
desired metric names with a comma separator. Note that, by default,
the service returns all supported metrics.

--freeform-tag-equals [text]

A list of tag filters to apply.  Only resources with a freeform tag
matching the value will be returned. The key for each tag is
“{tagName}.{value}”.  All inputs are case-insensitive. Multiple values
for the same tag name are interpreted as “OR”.  Values for different
tag names are interpreted as “AND”.

--freeform-tag-exists [text]

A list of tag existence filters to apply.  Only resources for which
the specified freeform tags exist the value will be returned. The key
for each tag is “{tagName}.true”.  All inputs are case-insensitive.
Currently, only existence (“true” at the end) is supported. Absence
(“false” at the end) is not supported. Multiple values for different
tag names are interpreted as “AND”.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--limit [integer]

The maximum number of records returned in the paginated response.

--managed-database-group-id [text]

The OCID of the Managed Database Group.

--page [text]

The page token representing the page from where the next set of
paginated results are retrieved. This is usually retrieved from a
previous list call.

--sort-by [text]

The field to sort information by. Only one sortOrder can be used. The
default sort order for ‘TIMECREATED’ is descending and the default
sort order for ‘NAME’ is ascending. The ‘NAME’ sort order is case-
sensitive.

Accepted values are:

   NAME, TIMECREATED

--sort-order [text]

The option to sort information in ascending (‘ASC’) or descending
(‘DESC’) order. Ascending order is the default order.

Accepted values are:

   ASC, DESC


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export compare_baseline_time=<substitute-value-of-compare_baseline_time> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/database-management/fleet-health-metrics/get.html#cmdoption-compare-baseline-time
       export compare_target_time=<substitute-value-of-compare_target_time> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/database-management/fleet-health-metrics/get.html#cmdoption-compare-target-time

       oci database-management fleet-health-metrics get --compare-baseline-time $compare_baseline_time --compare-target-time $compare_target_time
