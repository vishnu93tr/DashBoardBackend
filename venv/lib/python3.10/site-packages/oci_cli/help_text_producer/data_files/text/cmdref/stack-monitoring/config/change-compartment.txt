"change-compartment"
********************

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Moves the configuration item to another compartment. Basically, this
will disable any configuration for this configuration type in thie
compartment, and will enable it in the new one.

For example, if for a HOST resource type, the configuration with
AUTO_PROMOTE in the configuration type and TRUE as value is moved,
automatic discovery will not take place in this compartment any more,
but in the new one.

So this operation will have the same effect as deleting the
configuration item in the old compartment and recreating it in another
compartment.

When provided, If-Match is checked against ETag values of the
resource.


Usage
=====

   oci stack-monitoring config change-compartment [OPTIONS]


Required Parameters
===================

--compartment-id, -c [text]

The OCID of the compartment into which the resource should be moved.

--config-id [text]

Unique Config identifier.


Optional Parameters
===================

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--if-match [text]

For optimistic concurrency control. In the PUT or DELETE call for a
resource, set the *if-match* parameter to the value of the etag from a
previous GET or POST response for that resource. The resource will be
updated or deleted only if the etag you provide matches the resource’s
current etag value.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/stack-monitoring/config/create.html#cmdoption-compartment-id
       export config_type=<substitute-value-of-config_type> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/stack-monitoring/config/create.html#cmdoption-config-type

       config_id=$(oci stack-monitoring config create --compartment-id $compartment_id --config-type $config_type --query data.id --raw-output)

       oci stack-monitoring config change-compartment --compartment-id $compartment_id --config-id $config_id
