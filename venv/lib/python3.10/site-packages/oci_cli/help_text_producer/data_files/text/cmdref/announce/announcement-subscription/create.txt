"create"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Creates a new announcement subscription.

This call is subject to an Announcements limit that applies to the
total number of requests across all read or write operations.
Announcements might throttle this call to reject an otherwise valid
request when the total rate of operations exceeds 20 requests per
second for a given user. The service might also throttle this call to
reject an otherwise valid request when the total rate of operations
exceeds 100 requests per second for a given tenancy.


Usage
=====

   oci announce announcement-subscription create [OPTIONS]


Required Parameters
===================

--compartment-id, -c [text]

The OCID of the compartment where you want to create the announcement
subscription.

--display-name [text]

A user-friendly name for the announcement subscription. Does not have
to be unique, and it’s changeable. Avoid entering confidential
information.

--ons-topic-id [text]

The OCID of the Notifications service topic that is the target for
publishing announcements that match the configured announcement
subscription. The caller of the operation needs the ONS_TOPIC_PUBLISH
permission for the targeted Notifications service topic. For more
information about Notifications permissions, see Details for
Notifications.


Optional Parameters
===================

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. Example: *{“foo-namespace”: {“bar-key”: “value”}}* This is
a complex type whose value must be valid JSON. The value can be
provided as a string on the command line or passed in as a file using
the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--description [text]

A description of the announcement subscription. Avoid entering
confidential information.

--filter-groups [complex type]

A list of filter groups for the announcement subscription. A filter
group combines one or more filters that the Announcements service
applies to announcements for matching purposes.

This option is a JSON dictionary of type dict(str,
FilterGroupDetails).  For documentation on FilterGroupDetails please
see our API reference: https://docs.cloud.oracle.com/api/#/en/announc
ementsubscription/0.0.1/datatypes/FilterGroupDetails. This is a
complex type whose value must be valid JSON. The value can be provided
as a string on the command line or passed in as a file using the
file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--freeform-tags [complex type]

Simple key-value pair that is applied without any predefined name,
type or scope. Exists for cross-compatibility only. Example: *{“bar-
key”: “value”}* This is a complex type whose value must be valid JSON.
The value can be provided as a string on the command line or passed in
as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--max-wait-seconds [integer]

The maximum time to wait for the resource to reach the lifecycle state
defined by "--wait-for-state". Defaults to 1200 seconds.

--preferred-language [text]

(For announcement subscriptions with SaaS configured as the platform
type or Oracle Fusion Applications as the service, or both, only) The
language in which the user prefers to receive emailed announcements.
Specify the preference with a value that uses the x-obmcs-human-
language format. For example fr-FR.

--preferred-time-zone [text]

The time zone in which the user prefers to receive announcements.
Specify the preference with a value that uses the IANA Time Zone
Database format (x-obmcs-time-zone). For example - America/Los_Angeles

--wait-for-state [text]

This operation creates, modifies or deletes a resource that has a
defined lifecycle state. Specify this option to perform the action and
then wait until the resource reaches a given lifecycle state. Multiple
states can be specified, returning on the first state. For example, "
--wait-for-state" SUCCEEDED "--wait-for-state" FAILED would return on
whichever lifecycle state is reached first. If timeout is reached, a
return code of 2 is returned. For any other error, a return code of 1
is returned.

Accepted values are:

   ACTIVE, DELETED, FAILED

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the resource has
reached the lifecycle state defined by "--wait-for-state". Defaults to
30 seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/announce/announcement-subscription/create.html#cmdoption-compartment-id
       export display_name=<substitute-value-of-display_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/announce/announcement-subscription/create.html#cmdoption-display-name
       export ons_topic_id=<substitute-value-of-ons_topic_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/announce/announcement-subscription/create.html#cmdoption-ons-topic-id

       oci announce announcement-subscription create --compartment-id $compartment_id --display-name $display_name --ons-topic-id $ons_topic_id
