"create"
********

* Description

* Usage

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Create a diag bundle


Usage
=====

   oci rover device diagnostics bundle create [OPTIONS]


Optional Parameters
===================

--display-name [text]

Displayed name of diagnostic bundle

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--max-wait-seconds [integer]

Wait for a diagnostic bundle to reach a specific state (seconds)

--node-name [text]

Rover Node Name

--use-basic-auth

Use Basic Authentication for Diagnostic Requets - Retrieved from
Serial Console

--wait-for-state [text]

Wait for a diagnostic bundle to reach a specific state Specify this
option to perform the action and then wait until the resource reaches
a given lifecycle state. Multiple states can be specified, returning
on the first state. For example, "--wait-for-state" COMPLETED "--wait-
for-state" FAILED would return on whichever lifecycle state is reached
first.

Accepted values are:

   ACCEPTED, COMPLETED, FAILED, IN_PROGRESS

--wait-interval-seconds [integer]

Frequency to poll the state of a diagnostic bundle (seconds)


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       oci rover device diagnostics bundle create
