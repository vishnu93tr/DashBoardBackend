"load-spb-from-cc-with-password"
********************************

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Loads plans for statements directly from the shared SQL area, also
called the cursor cache. By applying a filter on the module name, the
schema, or the SQL ID you identify the SQL statement or set of SQL
statements to load.


Usage
=====

   oci database-management managed-database load-spb-from-cc-with-password [OPTIONS]


Required Parameters
===================

--job-name [text]

The name of the database job used for loading SQL plan baselines.

--managed-database-id [text]

The OCID of the Managed Database.

--password [text]

The database user’s password encoded using BASE64 scheme.

--role [text]

The role of the database user.

Accepted values are:

   NORMAL, SYSDBA

--username [text]

The user name used to connect to the database.


Optional Parameters
===================

--database-credential [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--filter-name [text]

The name of the filter.

* SQL_TEXT: Search pattern to apply to SQL text. -
  PARSING_SCHEMA_NAME: Name of the parsing schema. - MODULE: Name of
  the module. - ACTION: Name of the action.

Accepted values are:

   ACTION, MODULE, PARSING_SCHEMA_NAME, SQL_TEXT

--filter-value [text]

The filter value. It is upper-cased except when it is enclosed in
double quotes or filter name is *SQL_TEXT*.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--is-enabled [boolean]

Indicates whether the loaded plans are enabled (*true*) or not
(*false*). By default, they are enabled.

--is-fixed [boolean]

Indicates whether the plans are loaded as fixed plans (*true*) or non-
fixed plans (*false*). By default, they are loaded as non-fixed plans.

--job-description [text]

The description of the job.

--plan-hash [float]

The plan identifier. By default, all plans present in the cursor cache
for the SQL statement identified by *sqlId* are captured.

--sql-handle [text]

The SQL handle to use in identifying the SQL plan baseline into which
the plans are loaded.

--sql-id [text]

The SQL statement identifier. Identifies a SQL statement in the cursor
cache.

--sql-text [text]

The SQL text to use in identifying the SQL plan baseline into which
the plans are loaded. If the SQL plan baseline does not exist, it is
created.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export job_name=<substitute-value-of-job_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/database-management/managed-database/load-spb-from-cc-with-password.html#cmdoption-job-name
       export managed_database_id=<substitute-value-of-managed_database_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/database-management/managed-database/load-spb-from-cc-with-password.html#cmdoption-managed-database-id
       export password=<substitute-value-of-password> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/database-management/managed-database/load-spb-from-cc-with-password.html#cmdoption-password
       export role=<substitute-value-of-role> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/database-management/managed-database/load-spb-from-cc-with-password.html#cmdoption-role
       export username=<substitute-value-of-username> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/database-management/managed-database/load-spb-from-cc-with-password.html#cmdoption-username

       oci database-management managed-database load-spb-from-cc-with-password --job-name $job_name --managed-database-id $managed_database_id --password $password --role $role --username $username
