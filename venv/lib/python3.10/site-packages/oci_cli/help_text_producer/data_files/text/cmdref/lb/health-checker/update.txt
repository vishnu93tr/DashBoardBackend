"update"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Updates the health check policy for a given load balancer and backend
set.


Usage
=====

   oci lb health-checker update [OPTIONS]


Required Parameters
===================

--backend-set-name [text]

The name of the backend set associated with the health check policy to
be retrieved.

Example:

   example_backend_set

--interval-in-millis [integer]

The interval between health checks, in milliseconds.

Example:

   10000

--load-balancer-id [text]

The OCID of the load balancer associated with the health check policy
to be updated.

--port [integer]

The backend server port against which to run the health check.

Example:

   8080

--protocol [text]

The protocol the health check must use; either HTTP or TCP.

Example:

   HTTP

--response-body-regex [text]

A regular expression for parsing the response body from the backend
server.

Example:

   ^((?!false).|\s)*$

--retries [integer]

The number of retries to attempt before a backend server is considered
“unhealthy”. This number also applies when recovering a server to the
“healthy” state.

Example:

   3

--return-code [integer]

The status code a healthy backend server should return.

Example:

   200

--timeout-in-millis [integer]

The maximum time, in milliseconds, to wait for a reply to a health
check. A health check is successful only if a reply returns within
this timeout period.

Example:

   3000


Optional Parameters
===================

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--if-match [text]

For optimistic concurrency control. In the PUT or DELETE call for a
resource, set the if-match parameter to the value of the ETag for the
load balancer. This value can be obtained from a GET or POST response
for any resource of that load balancer.

For example, the eTag returned by getListener can be specified as the
ifMatch for updateRuleSets.

The resource is updated or deleted only if the ETag you provide
matches the resource’s current ETag value.

Example:

   example-etag

--is-force-plain-text [boolean]

Specifies if health checks should always be done using plain text
instead of depending on whether or not the associated backend set is
using SSL.

If “true”, health checks will be done using plain text even if the
associated backend set is configured to use SSL.

If “false”, health checks will be done using SSL encryption if the
associated backend set is configured to use SSL. If the backend set is
not so configured the health checks will be done using plain text.

Example:

   true

--max-wait-seconds [integer]

The maximum time to wait for the work request to reach the state
defined by "--wait-for-state". Defaults to 1200 seconds.

--url-path [text]

The path against which to run the health check.

Example:

   /healthcheck

--wait-for-state [text]

This operation asynchronously creates, modifies or deletes a resource
and uses a work request to track the progress of the operation.
Specify this option to perform the action and then wait until the work
request reaches a certain state. Multiple states can be specified,
returning on the first state. For example, "--wait-for-state"
SUCCEEDED "--wait-for-state" FAILED would return on whichever
lifecycle state is reached first. If timeout is reached, a return code
of 2 is returned. For any other error, a return code of 1 is returned.

Accepted values are:

   ACCEPTED, FAILED, IN_PROGRESS, SUCCEEDED

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the work request
has reached the state defined by "--wait-for-state". Defaults to 30
seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy and paste the following example into a JSON file, replacing the
example parameters with your own.

       oci lb load-balancer create --generate-param-json-input subnet-ids > subnet-ids.json

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/lb/load-balancer/create.html#cmdoption-compartment-id
       export display_name=<substitute-value-of-display_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/lb/load-balancer/create.html#cmdoption-display-name
       export shape_name=<substitute-value-of-shape_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/lb/load-balancer/create.html#cmdoption-shape-name
       export backend_set_name=<substitute-value-of-backend_set_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/lb/health-checker/update.html#cmdoption-backend-set-name
       export interval_in_millis=<substitute-value-of-interval_in_millis> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/lb/health-checker/update.html#cmdoption-interval-in-millis
       export port=<substitute-value-of-port> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/lb/health-checker/update.html#cmdoption-port
       export protocol=<substitute-value-of-protocol> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/lb/health-checker/update.html#cmdoption-protocol
       export response_body_regex=<substitute-value-of-response_body_regex> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/lb/health-checker/update.html#cmdoption-response-body-regex
       export retries=<substitute-value-of-retries> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/lb/health-checker/update.html#cmdoption-retries
       export return_code=<substitute-value-of-return_code> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/lb/health-checker/update.html#cmdoption-return-code
       export timeout_in_millis=<substitute-value-of-timeout_in_millis> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/lb/health-checker/update.html#cmdoption-timeout-in-millis

       load_balancer_id=$(oci lb load-balancer create --compartment-id $compartment_id --display-name $display_name --shape-name $shape_name --subnet-ids file://subnet-ids.json --query data.id --raw-output)

       oci lb health-checker update --backend-set-name $backend_set_name --interval-in-millis $interval_in_millis --load-balancer-id $load_balancer_id --port $port --protocol $protocol --response-body-regex $response_body_regex --retries $retries --return-code $return_code --timeout-in-millis $timeout_in_millis
