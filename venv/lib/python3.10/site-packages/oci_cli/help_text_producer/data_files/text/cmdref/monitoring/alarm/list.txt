"list"
******

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Lists the alarms for the specified compartment. For more information,
see Listing Alarms. For important limits information, see Limits on
Monitoring.

This call is subject to a Monitoring limit that applies to the total
number of requests across all alarm operations. Monitoring might
throttle this call to reject an otherwise valid request when the total
rate of alarm operations exceeds 10 requests, or transactions, per
second (TPS) for a given tenancy.


Usage
=====

   oci monitoring alarm list [OPTIONS]


Required Parameters
===================

--compartment-id, -c [text]

The OCID of the compartment containing the resources monitored by the
metric that you are searching for. Use tenancyId to search in the root
compartment.

Example:

   ocid1.compartment.oc1..exampleuniqueID


Optional Parameters
===================

--all

Fetches all pages of results. If you provide this option, then you
cannot provide the "--limit" option.

--compartment-id-in-subtree [boolean]

When true, returns resources from all compartments and
subcompartments. The parameter can only be set to true when
compartmentId is the tenancy OCID (the tenancy is the root
compartment). A true value requires the user to have tenancy-level
permissions. If this requirement is not met, then the call is
rejected. When false, returns resources from only the compartment
specified in compartmentId. Default is false.

--display-name [text]

A filter to return only resources that match the given display name
exactly. Use this filter to list an alarm by name. Alternatively, when
you know the alarm OCID, use the GetAlarm operation.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--lifecycle-state [text]

A filter to return only alarms that match the given lifecycle state
exactly. When not specified, only alarms in the ACTIVE lifecycle state
are listed.

Accepted values are:

   ACTIVE, DELETED, DELETING

--limit [integer]

For list pagination. The maximum number of results per page, or items
to return in a paginated “List” call. For important details about how
pagination works, see List Pagination.

Default: 1000

Example:

   500

--page [text]

For list pagination. The value of the *opc-next-page* response header
from the previous “List” call. For important details about how
pagination works, see List Pagination.

--page-size [integer]

When fetching results, the number of results to fetch per call. Only
valid when used with "--all" or "--limit", and ignored otherwise.

--sort-by [text]

The field to use when sorting returned alarm definitions. Only one
sorting level is provided.

Example:

   severity

Accepted values are:

   displayName, severity

--sort-order [text]

The sort order to use when sorting returned alarm definitions.
Ascending (ASC) or descending (DESC).

Example:

   ASC

Accepted values are:

   ASC, DESC


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/monitoring/alarm/list.html#cmdoption-compartment-id

       oci monitoring alarm list --compartment-id $compartment_id
