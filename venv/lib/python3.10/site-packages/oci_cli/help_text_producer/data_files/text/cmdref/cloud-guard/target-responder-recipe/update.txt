"update"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Updates the target responder recipe (TargetResponderRecipe resource)
identified by targetResponderRecipeId, attached to a target identified
by targetId. Pass parameters for the update through an
UpdateTargetResponderRecipeDetails resource.


Usage
=====

   oci cloud-guard target-responder-recipe update [OPTIONS]


Required Parameters
===================

--responder-rules [complex type]

List of responder rules to be updated in a target responder recipe.
This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--target-id [text]

OCID of the target

--target-responder-recipe-id [text]

OCID of the target responder recipe.


Optional Parameters
===================

--force

Perform update without prompting for confirmation.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--if-match [text]

For optimistic concurrency control. In the PUT or DELETE call for a
resource, set the *if-match* parameter to the value of the etag from a
previous GET or POST response for that resource. The resource will be
updated or deleted only if the etag you provide matches the resource’s
current etag value.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy and paste the following example into a JSON file, replacing the
example parameters with your own.

       oci cloud-guard target-responder-recipe update --generate-param-json-input responder-rules > responder-rules.json

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/cloud-guard/responder-recipe/create.html#cmdoption-compartment-id
       export display_name=<substitute-value-of-display_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/cloud-guard/responder-recipe/create.html#cmdoption-display-name
       export target_resource_id=<substitute-value-of-target_resource_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/cloud-guard/target/create.html#cmdoption-target-resource-id
       export target_resource_type=<substitute-value-of-target_resource_type> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/cloud-guard/target/create.html#cmdoption-target-resource-type
       export source_responder_recipe_id=<substitute-value-of-source_responder_recipe_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/cloud-guard/responder-recipe/create.html#cmdoption-source-responder-recipe-id
       export target_id=<substitute-value-of-target_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/cloud-guard/target-responder-recipe/create.html#cmdoption-target-id

       target_id=$(oci cloud-guard target create --compartment-id $compartment_id --display-name $display_name --target-resource-id $target_resource_id --target-resource-type $target_resource_type --query data.id --raw-output)

       responder_recipe_id=$(oci cloud-guard responder-recipe create --compartment-id $compartment_id --display-name $display_name --source-responder-recipe-id $source_responder_recipe_id --query data.id --raw-output)

       target_responder_recipe_id=$(oci cloud-guard target-responder-recipe create --responder-recipe-id $responder_recipe_id --target-id $target_id --query data.id --raw-output)

       oci cloud-guard target-responder-recipe update --responder-rules file://responder-rules.json --target-id $target_id --target-responder-recipe-id $target_responder_recipe_id
