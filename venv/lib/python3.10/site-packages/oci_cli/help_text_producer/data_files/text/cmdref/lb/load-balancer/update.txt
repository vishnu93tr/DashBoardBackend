"update"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Updates a load balancer’s configuration.


Usage
=====

   oci lb load-balancer update [OPTIONS]


Required Parameters
===================

--load-balancer-id [text]

The OCID of the load balancer to update.


Optional Parameters
===================

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. For more information, see Resource Tags.

Example:

   {"Operations": {"CostCenter": "42"}}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--display-name [text]

The user-friendly display name for the load balancer. It does not have
to be unique, and it is changeable. Avoid entering confidential
information.

Example:

   example_load_balancer

--force

Perform update without prompting for confirmation.

--freeform-tags [complex type]

Free-form tags for this resource. Each tag is a simple key-value pair
with no predefined name, type, or namespace. For more information, see
Resource Tags.

Example:

   {"Department": "Finance"}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--if-match [text]

For optimistic concurrency control. In the PUT or DELETE call for a
resource, set the if-match parameter to the value of the ETag for the
load balancer. This value can be obtained from a GET or POST response
for any resource of that load balancer.

For example, the eTag returned by getListener can be specified as the
ifMatch for updateRuleSets.

The resource is updated or deleted only if the ETag you provide
matches the resource’s current ETag value.

Example:

   example-etag

--is-delete-protection-enabled [boolean]

Whether or not the load balancer has delete protection enabled.

If “true”, the loadbalancer will be protected against deletion if
configured to accept traffic.

If “false”, the loadbalancer will not be protected against deletion.

If null or unset, the value for delete protection will not be changed.

Example:

   true

--is-request-id-enabled [boolean]

Whether or not the load balancer has the Request Id feature enabled
for HTTP listeners.

If “true”, the load balancer will attach a unique request id header to
every request passed through from the load balancer to load balancer
backends. This same request id header also will be added to the
response the lb received from the backend handling the request before
the load balancer returns the response to the requestor. The name of
the unique request id header is set the by value of requestIdHeader.

If “false”, the loadbalancer not add this unique request id header to
either the request passed through to the load balancer backends nor to
the reponse returned to the user.

New load balancers have the Request Id feature enabled unless
isRequestIdEnabled is set to False.

Example:

   true

--max-wait-seconds [integer]

The maximum time to wait for the work request to reach the state
defined by "--wait-for-state". Defaults to 1200 seconds.

--request-id-header [text]

If isRequestIdEnabled is true then this field contains the name of the
header field that contains the unique request id that is attached to
every request from the load balancer to the load balancer backends and
to every response from the load balancer.

If a request to the load balancer already contains a header with same
name as specified in requestIdHeader then the load balancer will not
change the value of that field.

If isRequestIdEnabled is false then this field is ignored.

**Notes:** * Unless the header name is “” it must start with “X-”
prefix. * Setting the header name to “” will set it to the default: X
-Request-Id.

--security-attributes [complex type]

Extended Defined tags for ZPR for this resource. Each key is
predefined and scoped to a namespace.

Example:

   {"Oracle-ZPR": {"MaxEgressCount": {"value":"42","mode":"audit", "usagetype" : "zpr"}}}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--wait-for-state [text]

This operation asynchronously creates, modifies or deletes a resource
and uses a work request to track the progress of the operation.
Specify this option to perform the action and then wait until the work
request reaches a certain state. Multiple states can be specified,
returning on the first state. For example, "--wait-for-state"
SUCCEEDED "--wait-for-state" FAILED would return on whichever
lifecycle state is reached first. If timeout is reached, a return code
of 2 is returned. For any other error, a return code of 1 is returned.

Accepted values are:

   ACCEPTED, FAILED, IN_PROGRESS, SUCCEEDED

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the work request
has reached the state defined by "--wait-for-state". Defaults to 30
seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy and paste the following example into a JSON file, replacing the
example parameters with your own.

       oci lb load-balancer create --generate-param-json-input subnet-ids > subnet-ids.json

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/lb/load-balancer/create.html#cmdoption-compartment-id
       export display_name=<substitute-value-of-display_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/lb/load-balancer/create.html#cmdoption-display-name
       export shape_name=<substitute-value-of-shape_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/lb/load-balancer/create.html#cmdoption-shape-name

       load_balancer_id=$(oci lb load-balancer create --compartment-id $compartment_id --display-name $display_name --shape-name $shape_name --subnet-ids file://subnet-ids.json --query data.id --raw-output)

       oci lb load-balancer update --load-balancer-id $load_balancer_id
