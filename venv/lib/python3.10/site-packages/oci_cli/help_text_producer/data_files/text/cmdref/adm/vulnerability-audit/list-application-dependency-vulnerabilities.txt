"list-application-dependency-vulnerabilities"
*********************************************

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Returns a list of Application Dependencies with their associated
vulnerabilities.


Usage
=====

   oci adm vulnerability-audit list-application-dependency-vulnerabilities [OPTIONS]


Required Parameters
===================

--vulnerability-audit-id [text]

Unique Vulnerability Audit identifier path parameter.


Optional Parameters
===================

--all

Fetches all pages of results. If you provide this option, then you
cannot provide the "--limit" option.

--cvss-v2-greater-than-or-equal [float]

A filter that returns only Vulnerabilities that have a Common
Vulnerability Scoring System Version 2 (CVSS V2) greater than or equal
to the specified value.

--cvss-v3-greater-than-or-equal [float]

A filter that returns only Vulnerabilities that have a Common
Vulnerability Scoring System Version 3 (CVSS V3) greater than or equal
to the specified value.

--depth [integer]

A filter to limit depth of the application dependencies tree
traversal. Additionally query parameters such as
“cvssV2GreaterThanOrEqual”, “cvssV3GreaterThanOrEqual”, “gav” and
“vulnerabilityId” can’t be used in conjunction with this latter.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--gav [text]

A filter to return only resources that match the entire GAV (Group
Artifact Version) identifier given.

--limit [integer]

The maximum number of items to return.

--page [text]

A token representing the position at which to start retrieving
results. This must come from the *opc-next-page* header field of a
previous response.

--page-size [integer]

When fetching results, the number of results to fetch per call. Only
valid when used with "--all" or "--limit", and ignored otherwise.

--purl [text]

A filter to return only resources that match the entire PURL given
(https://github.com/package-url/purl-spec/).

--root-node-id [text]

A filter to override the top level root identifier with the new given
value. The application dependency tree will only be traversed from the
given node. Query parameters “cvssV2GreaterThanOrEqual”,
“cvssV3GreaterThanOrEqual”, “gav” and “vulnerabilityId” cannot be used
in conjunction with this parameter.

--severity-greater-than-or-equal [text]

A filter that returns only Vulnerabilities that have a severity
greater than or equal to the specified value.

Accepted values are:

   CRITICAL, HIGH, LOW, MEDIUM, NONE

--sort-by [text]

The field to sort by. Only one sort order may be provided. If sort
order is dfs, the nodes are returned by going through the application
dependency tree in a depth-first manner. Children are sorted based on
their GAV property alphabetically (either ascending or descending,
depending on the order parameter). Default order is ascending. If sort
order is bfs, the nodes are returned by going through the application
dependency tree in a breadth-first manner. Children are sorted based
on their GAV property alphabetically (either ascending or descending,
depending on the order parameter). Default order is ascending. Default
order for gav is ascending where ascending corresponds to
alphanumerical order. Default order for purl is ascending where
ascending corresponds to alphabetical order Default order for nodeId
is ascending where ascending corresponds to alphanumerical order.
Sorting by DFS or BFS cannot be used in conjunction with the following
query parameters: “gav”, “cvssV2GreaterThanOrEqual”,
“cvssV3GreaterThanOrEqual” and “vulnerabilityId”.

Accepted values are:

   bfs, dfs, gav, nodeId, purl

--sort-order [text]

The sort order to use, either ‘ASC’ or ‘DESC’.

Accepted values are:

   ASC, DESC

--vulnerability-id [text]

A filter to return only Vulnerability Audits that match the specified
id.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/adm/knowledge-base/create.html#cmdoption-compartment-id

       knowledge_base_id=$(oci adm knowledge-base create --compartment-id $compartment_id --query data.id --raw-output)

       vulnerability_audit_id=$(oci adm vulnerability-audit create --knowledge-base-id $knowledge_base_id --query data.id --raw-output)

       oci adm vulnerability-audit list-application-dependency-vulnerabilities --vulnerability-audit-id $vulnerability_audit_id
