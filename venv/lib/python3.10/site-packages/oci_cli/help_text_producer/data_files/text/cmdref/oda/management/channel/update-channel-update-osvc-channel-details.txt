"update-channel-update-osvc-channel-details"
********************************************

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Updates the specified Channel with the information in the request
body.


Usage
=====

   oci oda management channel update-channel-update-osvc-channel-details [OPTIONS]


Required Parameters
===================

--channel-id [text]

Unique Channel identifier.

--oda-instance-id [text]

Unique Digital Assistant instance identifier.


Optional Parameters
===================

--authentication-provider-name [text]

The name of the Authentication Provider to use to authenticate the
user.

--bot-id [text]

The ID of the Skill or Digital Assistant that the Channel is routed
to.

--channel-service [text]

The type of OSVC service.

Accepted values are:

   FUSION, OSVC

--defined-tags [complex type]

Usage of predefined tag keys. These predefined keys are scoped to
namespaces. Example: *{“foo-namespace”: {“bar-key”: “value”}}* This is
a complex type whose value must be valid JSON. The value can be
provided as a string on the command line or passed in as a file using
the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--description [text]

A short description of the Channel.

--force

Perform update without prompting for confirmation.

--freeform-tags [complex type]

Simple key-value pair that is applied without any predefined name,
type, or scope. Example: *{“bar-key”: “value”}* This is a complex type
whose value must be valid JSON. The value can be provided as a string
on the command line or passed in as a file using the
file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--host [text]

The host.

For OSVC, you can derive these values from the URL that you use to
launch the Agent Browser User Interface or the chat launch page. For
example, if the URL is
https://sitename.exampledomain.com/app/chat/chat_launch, then the host
is sitename.exampledomain.com.

For FUSION, this is the host portion of your Oracle Applications Cloud
(Fusion) instance’s URL. For example: sitename.exampledomain.com.

--if-match [text]

For optimistic concurrency control in a PUT or DELETE call for a
Digital Assistant instance, set the *if-match* query parameter to the
value of the *ETAG* header from a previous GET or POST response for
that instance. The service updates or deletes the instance only if the
etag that you provide matches the instance’s current etag value.

--max-wait-seconds [integer]

The maximum time to wait for the resource to reach the lifecycle state
defined by "--wait-for-state". Defaults to 1200 seconds.

--name [text]

The Channel’s name. The name can contain only letters, numbers,
periods, and underscores. The name must begin with a letter.

--password [text]

The password for the digital-assistant agent.

--port [text]

The port.

--session-expiry-duration-in-milliseconds [integer]

The number of milliseconds before a session expires.

--total-session-count [integer]

The total session count.

--user-name [text]

The user name for the digital-assistant agent.

--wait-for-state [text]

This operation creates, modifies or deletes a resource that has a
defined lifecycle state. Specify this option to perform the action and
then wait until the resource reaches a given lifecycle state. Multiple
states can be specified, returning on the first state. For example, "
--wait-for-state" SUCCEEDED "--wait-for-state" FAILED would return on
whichever lifecycle state is reached first. If timeout is reached, a
return code of 2 is returned. For any other error, a return code of 1
is returned.

Accepted values are:

   ACTIVE, CREATING, DELETED, DELETING, FAILED, INACTIVE, UPDATING

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the resource has
reached the lifecycle state defined by "--wait-for-state". Defaults to
30 seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export name=<substitute-value-of-name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/oda/management/channel/create.html#cmdoption-name
       export oda_instance_id=<substitute-value-of-oda_instance_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/oda/management/channel/create.html#cmdoption-oda-instance-id
       export type=<substitute-value-of-type> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/oda/management/channel/create.html#cmdoption-type

       channel_id=$(oci oda management channel create --name $name --oda-instance-id $oda_instance_id --type $type --query data.id --raw-output)

       oci oda management channel update-channel-update-osvc-channel-details --channel-id $channel_id --oda-instance-id $oda_instance_id
