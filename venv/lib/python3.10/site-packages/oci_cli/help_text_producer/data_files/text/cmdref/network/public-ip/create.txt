"create"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Creates a public IP. Use the *lifetime* property to specify whether
it’s an ephemeral or reserved public IP. For information about limits
on how many you can create, see Public IP Addresses.

* **For an ephemeral public IP assigned to a private IP:** You must
  also specify a *privateIpId* with the OCID of the primary private IP
  you want to assign the public IP to. The public IP is created in the
  same availability domain as the private IP. An ephemeral public IP
  must always be assigned to a private IP, and only to the *primary*
  private IP on a VNIC, not a secondary private IP. Exception: If you
  create a NatGateway, Oracle automatically assigns the NAT gateway a
  regional ephemeral public IP that you cannot remove.

* **For a reserved public IP:** You may also optionally assign the
  public IP to a private IP by specifying *privateIpId*. Or you can
  later assign the public IP with UpdatePublicIp.

**Note:** When assigning a public IP to a private IP, the private IP
must not already have a public IP with *lifecycleState* = ASSIGNING or
ASSIGNED. If it does, an error is returned.

Also, for reserved public IPs, the optional assignment part of this
operation is asynchronous. Poll the public IP’s *lifecycleState* to
determine if the assignment succeeded.


Usage
=====

   oci network public-ip create [OPTIONS]


Required Parameters
===================

--compartment-id, -c [text]

The OCID of the compartment to contain the public IP. For ephemeral
public IPs, you must set this to the private IP’s compartment OCID.

--lifetime [text]

Defines when the public IP is deleted and released back to the Oracle
Cloud Infrastructure public IP pool. For more information, see Public
IP Addresses.

Accepted values are:

   EPHEMERAL, RESERVED


Optional Parameters
===================

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. For more information, see Resource Tags.

Example:

   {"Operations": {"CostCenter": "42"}}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--display-name [text]

A user-friendly name. Does not have to be unique, and it’s changeable.
Avoid entering confidential information.

--freeform-tags [complex type]

Free-form tags for this resource. Each tag is a simple key-value pair
with no predefined name, type, or namespace. For more information, see
Resource Tags.

Example:

   {"Department": "Finance"}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--max-wait-seconds [integer]

The maximum time to wait for the resource to reach the lifecycle state
defined by "--wait-for-state". Defaults to 1200 seconds.

--private-ip-id [text]

The OCID of the private IP to assign the public IP to.

Required for an ephemeral public IP because it must always be assigned
to a private IP (specifically a *primary* private IP).

Optional for a reserved public IP. If you don’t provide it, the public
IP is created but not assigned to a private IP. You can later assign
the public IP with UpdatePublicIp.

--public-ip-pool-id [text]

The OCID of the public IP pool.

--wait-for-state [text]

This operation creates, modifies or deletes a resource that has a
defined lifecycle state. Specify this option to perform the action and
then wait until the resource reaches a given lifecycle state. Multiple
states can be specified, returning on the first state. For example, "
--wait-for-state" SUCCEEDED "--wait-for-state" FAILED would return on
whichever lifecycle state is reached first. If timeout is reached, a
return code of 2 is returned. For any other error, a return code of 1
is returned.

Accepted values are:

   ASSIGNED, ASSIGNING, AVAILABLE, PROVISIONING, TERMINATED, TERMINATING, UNASSIGNED, UNASSIGNING

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the resource has
reached the lifecycle state defined by "--wait-for-state". Defaults to
30 seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/network/public-ip/create.html#cmdoption-compartment-id
       export lifetime=<substitute-value-of-lifetime> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/network/public-ip/create.html#cmdoption-lifetime

       oci network public-ip create --compartment-id $compartment_id --lifetime $lifetime
