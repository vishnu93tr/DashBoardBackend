"update-redis-connection"
*************************

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Updates the Connection.


Usage
=====

   oci goldengate connection update-redis-connection [OPTIONS]


Required Parameters
===================

--connection-id [text]

The OCID of a Connection.


Optional Parameters
===================

--authentication-type [text]

Authenticationentication type for the Redis database.

--defined-tags [complex type]

Tags defined for this resource. Each key is predefined and scoped to a
namespace.

Example:

   {"foo-namespace": {"bar-key": "value"}}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--description [text]

Metadata about this specific object.

--display-name [text]

An object’s Display Name.

--does-use-secret-ids [boolean]

Indicates that sensitive attributes are provided via Secrets.

--force

Perform update without prompting for confirmation.

--freeform-tags [complex type]

A simple key-value pair that is applied without any predefined name,
type, or scope. Exists for cross-compatibility only.

Example:

   {"bar-key": "value"}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--if-match [text]

For optimistic concurrency control. In the PUT or DELETE call for a
resource, set the *if-match* parameter to the value of the etag from a
previous GET or POST response for that resource.  The resource is
updated or deleted only if the etag you provide matches the resource’s
current etag value.

--is-lock-override [boolean]

Whether to override locks (if any exist).

--key-id [text]

Refers to the customer’s master key OCID. If provided, it references a
key to manage secrets. Customers must add policies to permit
GoldenGate to use this key.

--key-store [text]

The base64 encoded content of the KeyStore file. Deprecated: This
field is deprecated and replaced by “keyStoreSecretId”. This field
will be removed after February 15 2026.

--key-store-password [text]

The KeyStore password. Deprecated: This field is deprecated and
replaced by “keyStorePasswordSecretId”. This field will be removed
after February 15 2026.

--key-store-password-secret-id [text]

The OCID of the Secret where the Redis KeyStore password is stored.
Note: When provided, ‘keyStorePassword’ field must not be provided.

--key-store-secret-id [text]

The OCID of the Secret that stores the content of the KeyStore file.
Note: When provided, ‘keyStore’ field must not be provided.

--max-wait-seconds [integer]

The maximum time to wait for the work request to reach the state
defined by "--wait-for-state". Defaults to 1200 seconds.

--nsg-ids [complex type]

An array of Network Security Group OCIDs used to define network access
for either Deployments or Connections. This is a complex type whose
value must be valid JSON. The value can be provided as a string on the
command line or passed in as a file using the file://path/to/file
syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--password [text]

The password Oracle GoldenGate uses to connect the associated system
of the given technology. It must conform to the specific security
requirements including length, case sensitivity, and so on.
Deprecated: This field is deprecated and replaced by
“passwordSecretId”. This field will be removed after February 15 2026.

--password-secret-id [text]

The OCID of the Secret where the password is stored. The password
Oracle GoldenGate uses to connect the associated system of the given
technology. It must conform to the specific security requirements
including length, case sensitivity, and so on. If secretId is used
plaintext field must not be provided. Note: When provided, ‘password’
field must not be provided.

--redis-cluster-id [text]

The OCID of the Redis cluster.

--routing-method [text]

Controls the network traffic direction to the target:
SHARED_SERVICE_ENDPOINT: Traffic flows through the Goldengate
Service’s network to public hosts. Cannot be used for private targets.
SHARED_DEPLOYMENT_ENDPOINT: Network traffic flows from the assigned
deployment’s private endpoint through the deployment’s subnet.
DEDICATED_ENDPOINT: A dedicated private endpoint is created in the
target VCN subnet for the connection. The subnetId is required when
DEDICATED_ENDPOINT networking is selected.

Accepted values are:

   DEDICATED_ENDPOINT, SHARED_DEPLOYMENT_ENDPOINT, SHARED_SERVICE_ENDPOINT

--security-protocol [text]

Security protocol for Redis.

--servers [text]

Comma separated list of Redis server addresses, specified as host:port
entries, where :port is optional. If port is not specified, it
defaults to 6379. Used for establishing the initial connection to the
Redis cluster. Example:
*“server1.example.com:6379,server2.example.com:6379”*

--subnet-id [text]

The OCID of the target subnet of the dedicated connection.

--trust-store [text]

The base64 encoded content of the TrustStore file. Deprecated: This
field is deprecated and replaced by “trustStoreSecretId”. This field
will be removed after February 15 2026.

--trust-store-password [text]

The TrustStore password. Deprecated: This field is deprecated and
replaced by “trustStorePasswordSecretId”. This field will be removed
after February 15 2026.

--trust-store-password-secret-id [text]

The OCID of the Secret where the Redis TrustStore password is stored.
Note: When provided, ‘trustStorePassword’ field must not be provided.

--trust-store-secret-id [text]

The OCID of the Secret that stores the content of the TrustStore file.
Note: When provided, ‘trustStore’ field must not be provided.

--username [text]

The username Oracle GoldenGate uses to connect the associated system
of the given technology. This username must already exist and be
available by the system/application to be connected to and must
conform to the case sensitivty requirments defined in it.

--vault-id [text]

Refers to the customer’s vault OCID. If provided, it references a
vault where GoldenGate can manage secrets. Customers must add policies
to permit GoldenGate to manage secrets contained within this vault.

--wait-for-state [text]

This operation asynchronously creates, modifies or deletes a resource
and uses a work request to track the progress of the operation.
Specify this option to perform the action and then wait until the work
request reaches a certain state. Multiple states can be specified,
returning on the first state. For example, "--wait-for-state"
SUCCEEDED "--wait-for-state" FAILED would return on whichever
lifecycle state is reached first. If timeout is reached, a return code
of 2 is returned. For any other error, a return code of 1 is returned.

Accepted values are:

   ACCEPTED, CANCELED, FAILED, IN_PROGRESS, SUCCEEDED

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the work request
has reached the state defined by "--wait-for-state". Defaults to 30
seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export connection_id=<substitute-value-of-connection_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/goldengate/connection/update-redis-connection.html#cmdoption-connection-id

       oci goldengate connection update-redis-connection --connection-id $connection_id
