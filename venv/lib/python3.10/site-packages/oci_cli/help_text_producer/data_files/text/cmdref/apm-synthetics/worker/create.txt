"create"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Registers a new worker.


Usage
=====

   oci apm-synthetics worker create [OPTIONS]


Required Parameters
===================

--apm-domain-id [text]

The APM domain ID the request is intended for.

--name [text]

Unique On-premise VP worker name that cannot be edited. The name
should not contain any confidential information.

--on-premise-vantage-point-id [text]

The OCID of the On-premise vantage point.

--resource-principal-token-public-key [text]

public key for resource Principal Token based validation to be used in
further calls.

--worker-version [text]

Image version of the On-premise VP worker.


Optional Parameters
===================

--configuration-details [complex type]

Configuration details of the On-premise VP worker. This is a complex
type whose value must be valid JSON. The value can be provided as a
string on the command line or passed in as a file using the
file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. Example: *{“foo-namespace”: {“bar-key”: “value”}}* This is
a complex type whose value must be valid JSON. The value can be
provided as a string on the command line or passed in as a file using
the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--freeform-tags [complex type]

Simple key-value pair that is applied without any predefined name,
type or scope. Exists for cross-compatibility only. Example: *{“bar-
key”: “value”}* This is a complex type whose value must be valid JSON.
The value can be provided as a string on the command line or passed in
as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--priority [integer]

Priority of the On-premise VP worker to schedule monitors.

--status [text]

Enables or disables the On-premise VP worker.

Accepted values are:

   DISABLED, ENABLED

--worker-type [text]

Type of the On-premise VP worker.

Accepted values are:

   DOCKER


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export apm_domain_id=<substitute-value-of-apm_domain_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/apm-synthetics/worker/create.html#cmdoption-apm-domain-id
       export name=<substitute-value-of-name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/apm-synthetics/worker/create.html#cmdoption-name
       export on_premise_vantage_point_id=<substitute-value-of-on_premise_vantage_point_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/apm-synthetics/worker/create.html#cmdoption-on-premise-vantage-point-id
       export resource_principal_token_public_key=<substitute-value-of-resource_principal_token_public_key> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/apm-synthetics/worker/create.html#cmdoption-resource-principal-token-public-key
       export worker_version=<substitute-value-of-worker_version> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/apm-synthetics/worker/create.html#cmdoption-worker-version

       oci apm-synthetics worker create --apm-domain-id $apm_domain_id --name $name --on-premise-vantage-point-id $on_premise_vantage_point_id --resource-principal-token-public-key $resource_principal_token_public_key --worker-version $worker_version
