"update-metadata"
*****************

* Description

* Usage

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

By default, buckets created using the Amazon S3 Compatibility API or
the Swift API are created in the root compartment of the Oracle Cloud
Infrastructure tenancy.

You can change the default Swift/Amazon S3 compartmentId designation
to a different compartmentId. All subsequent bucket creations will use
the new default compartment, but no previously created buckets will be
modified. A user must have OBJECTSTORAGE_NAMESPACE_UPDATE permission
to make changes to the default compartments for Amazon S3 and Swift.


Usage
=====

   oci os ns update-metadata [OPTIONS]


Optional Parameters
===================

--default-s3-compartment-id [text]

The updated compartment id for use by an S3 client, if this field is
set.

--default-swift-compartment-id [text]

The updated compartment id for use by a Swift client, if this field is
set.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--namespace-name, --namespace, -ns [text]

The Object Storage namespace used for the request. If not provided,
this parameter will be obtained internally using a call to ‘oci os ns
get’


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       oci os ns update-metadata
