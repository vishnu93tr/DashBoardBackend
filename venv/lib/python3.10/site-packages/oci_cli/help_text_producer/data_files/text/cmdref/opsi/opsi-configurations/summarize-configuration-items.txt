"summarize-configuration-items"
*******************************

* Description

* Usage

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Gets the applicable configuration items based on the query parameters
specified. Configuration items for an opsiConfigType with respect to a
compartmentId can be fetched. Values specified in configItemField
param will determine what fields for each configuration items have to
be returned.


Usage
=====

   oci opsi opsi-configurations summarize-configuration-items [OPTIONS]


Optional Parameters
===================

--compartment-id, -c [text]

The OCID of the compartment.

--config-item-field [text]

Specifies the fields to return in a config item summary.

Accepted values are:

   applicableContexts, defaultValue, metadata, name, value, valueSourceConfig

--config-items-applicable-context [text]

Returns the configuration items filtered by applicable contexts sent
in this param. By default configuration items of all applicable
contexts are returned.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--limit [integer]

For list pagination. The maximum number of results per page, or items
to return in a paginated “List” call. For important details about how
pagination works, see List Pagination. Example: *50*

--name [text]

A filter to return only configuration items that match the entire
name.

--opsi-config-type [text]

Filter to return configuration items based on configuration type of
OPSI configuration.

Accepted values are:

   UX_CONFIGURATION

--page [text]

For list pagination. The value of the *opc-next-page* response header
from the previous “List” call. For important details about how
pagination works, see List Pagination.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       oci opsi opsi-configurations summarize-configuration-items
