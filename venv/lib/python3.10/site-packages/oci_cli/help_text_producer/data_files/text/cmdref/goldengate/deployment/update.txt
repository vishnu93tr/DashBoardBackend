"update"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Modifies a Deployment.


Usage
=====

   oci goldengate deployment update [OPTIONS]


Required Parameters
===================

--deployment-id [text]

A unique Deployment identifier.


Optional Parameters
===================

--admin-password [text]

The password associated with the GoldenGate deployment console
username. The password must be 8 to 30 characters long and must
contain at least 1 uppercase, 1 lowercase, 1 numeric, and 1 special
character. Special characters such as ‘$’, ‘^’, or ‘?’ are not
allowed. This field will be deprecated and replaced by ‘password-
secret-id’.

--admin-username [text]

The GoldenGate deployment console username.

--backup-schedule [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--certificate-file [filename]

The SSL certificate for this deployment in PEM format.

--cpu-core-count [integer]

The Minimum number of OCPUs to be made available for this Deployment.

--credential-store [text]

The type of credential store for OGG.

Accepted values are:

   GOLDENGATE, IAM

--defined-tags [complex type]

Tags defined for this resource. Each key is predefined and scoped to a
namespace.

Example:

   {"foo-namespace": {"bar-key": "value"}}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--description [text]

Metadata about this specific object.

--display-name [text]

An object’s Display Name.

--environment-type [text]

Specifies whether the deployment is used in a production or
development/testing environment.

Accepted values are:

   DEVELOPMENT_OR_TESTING, PRODUCTION

--force

Perform update without prompting for confirmation.

--fqdn [text]

A three-label Fully Qualified Domain Name (FQDN) for a resource.

--freeform-tags [complex type]

A simple key-value pair that is applied without any predefined name,
type, or scope. Exists for cross-compatibility only.

Example:

   {"bar-key": "value"}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--identity-domain-id [text]

The OCID of the Identity Domain when IAM credential store is used.

--if-match [text]

For optimistic concurrency control. In the PUT or DELETE call for a
resource, set the *if-match* parameter to the value of the etag from a
previous GET or POST response for that resource.  The resource is
updated or deleted only if the etag you provide matches the resource’s
current etag value.

--is-auto-scaling-enabled [boolean]

Indicates if auto scaling is enabled for the Deployment’s CPU core
count.

--is-lock-override [boolean]

Whether to override locks (if any exist).

--is-public [boolean]

True if this object is publicly available.

--license-model [text]

The Oracle license model that applies to a Deployment.

Accepted values are:

   BRING_YOUR_OWN_LICENSE, LICENSE_INCLUDED

--load-balancer-subnet-id [text]

The OCID of a public subnet in the customer tenancy. Can be provided
only for public deployments. If provided, the loadbalancer will be
created in this subnet instead of the service tenancy. For backward
compatibility, this is an optional property. It will become mandatory
for public deployments after October 1, 2024.

--maintenance-configuration [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--maintenance-window-day [text]

Day of week for the maintenance.

--maintenance-window-start-hour [text]

Start hour for maintenance period. Hour is in UTC.

--max-wait-seconds [integer]

The maximum time to wait for the work request to reach the state
defined by "--wait-for-state". Defaults to 1200 seconds.

--nsg-ids [complex type]

An array of Network Security Group OCIDs used to define network access
for either Deployments or Connections. This is a complex type whose
value must be valid JSON. The value can be provided as a string on the
command line or passed in as a file using the file://path/to/file
syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--password-secret-id [text]

The OCID of the Secret where the deployment password is stored.

--placements [complex type]

An array of local peers of deployment

This option is a JSON list with items of type
DeploymentPlacementDetails.  For documentation on
DeploymentPlacementDetails please see our API reference: https://docs
.cloud.oracle.com/api/#/en/goldengate/20200407/datatypes/DeploymentPl
acementDetails. This is a complex type whose value must be valid JSON.
The value can be provided as a string on the command line or passed in
as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--private-key-file [filename]

The private key for your certificate in PEM format.

--subnet-id [text]

The OCID of the subnet of the deployment’s private endpoint. The
subnet must be a private subnet. For backward compatibility, public
subnets are allowed until May 31 2025, after which the private subnet
will be enforced.

--wait-for-state [text]

This operation asynchronously creates, modifies or deletes a resource
and uses a work request to track the progress of the operation.
Specify this option to perform the action and then wait until the work
request reaches a certain state. Multiple states can be specified,
returning on the first state. For example, "--wait-for-state"
SUCCEEDED "--wait-for-state" FAILED would return on whichever
lifecycle state is reached first. If timeout is reached, a return code
of 2 is returned. For any other error, a return code of 1 is returned.

Accepted values are:

   ACCEPTED, CANCELED, FAILED, IN_PROGRESS, SUCCEEDED

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the work request
has reached the state defined by "--wait-for-state". Defaults to 30
seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export deployment_id=<substitute-value-of-deployment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/goldengate/deployment/update.html#cmdoption-deployment-id

       oci goldengate deployment update --deployment-id $deployment_id
