"create"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Creates a Delegation Control.


Usage
=====

   oci delegate-access-control delegation-control create [OPTIONS]


Required Parameters
===================

--compartment-id, -c [text]

The OCID of the compartment that contains this Delegation Control.

--delegation-subscription-ids [complex type]

List of Delegation Subscription OCID that are allowed for this
Delegation Control. The allowed subscriptions will determine the
available Service Provider Actions. Only support operators for the
allowed subscriptions are allowed to create Delegated Resource Access
Request. This is a complex type whose value must be valid JSON. The
value can be provided as a string on the command line or passed in as
a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--display-name [text]

Name of the Delegation Control. The name does not need to be unique.

--notification-message-format [text]

The format of the OCI Notification messages for this Delegation
Control.

--notification-topic-id [text]

The OCID of the OCI Notification topic to publish messages related to
this Delegation Control.

--resource-ids [complex type]

The OCID of the selected resources that this Delegation Control is
applicable to. This is a complex type whose value must be valid JSON.
The value can be provided as a string on the command line or passed in
as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--resource-type [text]

Resource type for which the Delegation Control is applicable to.

Accepted values are:

   CLOUDVMCLUSTER, VMCLUSTER


Optional Parameters
===================

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. For more information, see Resource Tags.

Example:

   {"Operations": {"CostCenter": "42"}}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--description [text]

Description of the Delegation Control.

--freeform-tags [complex type]

Free-form tags for this resource. Each tag is a simple key-value pair
with no predefined name, type, or namespace. For more information, see
Resource Tags.

Example:

   {"Department": "Finance"}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--is-auto-approve-during-maintenance [boolean]

Set to true to allow all Delegated Resource Access Request to be
approved automatically during maintenance.

--max-wait-seconds [integer]

The maximum time to wait for the work request to reach the state
defined by "--wait-for-state". Defaults to 1200 seconds.

--num-approvals-required [integer]

number of approvals required.

--pre-approved-service-provider-action-names [complex type]

List of pre-approved Service Provider Action names. The list of pre-
defined Service Provider Actions can be obtained from the
ListServiceProviderActions API. Delegated Resource Access Requests
associated with a resource governed by this Delegation Control will be
automatically approved if the Delegated Resource Access Request only
contain Service Provider Actions in the pre-approved list. This is a
complex type whose value must be valid JSON. The value can be provided
as a string on the command line or passed in as a file using the
file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--vault-id [text]

The OCID of the OCI Vault that will store the secrets containing the
SSH keys to access the resource governed by this Delegation Control by
Delegate Access Control Service. This property is required when
resourceType is CLOUDVMCLUSTER. Delegate Access Control Service will
generate the SSH keys and store them as secrets in the OCI Vault.

--vault-key-id [text]

The OCID of the Master Encryption Key in the OCI Vault specified by
vaultId. This key will be used to encrypt the SSH keys to access the
resource governed by this Delegation Control by Delegate Access
Control Service. This property is required when resourceType is
CLOUDVMCLUSTER.

--wait-for-state [text]

This operation asynchronously creates, modifies or deletes a resource
and uses a work request to track the progress of the operation.
Specify this option to perform the action and then wait until the work
request reaches a certain state. Multiple states can be specified,
returning on the first state. For example, "--wait-for-state"
SUCCEEDED "--wait-for-state" FAILED would return on whichever
lifecycle state is reached first. If timeout is reached, a return code
of 2 is returned. For any other error, a return code of 1 is returned.

Accepted values are:

   ACCEPTED, CANCELED, CANCELING, FAILED, IN_PROGRESS, NEEDS_ATTENTION, SUCCEEDED, WAITING

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the work request
has reached the state defined by "--wait-for-state". Defaults to 30
seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy and paste the following example into a JSON file, replacing the
example parameters with your own.

       oci delegate-access-control delegation-control create --generate-param-json-input delegation-subscription-ids > delegation-subscription-ids.json
       oci delegate-access-control delegation-control create --generate-param-json-input resource-ids > resource-ids.json

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/delegate-access-control/delegation-control/create.html#cmdoption-compartment-id
       export display_name=<substitute-value-of-display_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/delegate-access-control/delegation-control/create.html#cmdoption-display-name
       export notification_message_format=<substitute-value-of-notification_message_format> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/delegate-access-control/delegation-control/create.html#cmdoption-notification-message-format
       export notification_topic_id=<substitute-value-of-notification_topic_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/delegate-access-control/delegation-control/create.html#cmdoption-notification-topic-id
       export resource_type=<substitute-value-of-resource_type> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/delegate-access-control/delegation-control/create.html#cmdoption-resource-type

       oci delegate-access-control delegation-control create --compartment-id $compartment_id --delegation-subscription-ids file://delegation-subscription-ids.json --display-name $display_name --notification-message-format $notification_message_format --notification-topic-id $notification_topic_id --resource-ids file://resource-ids.json --resource-type $resource_type
