"create-port-forwarding"
************************

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters


Description
===========

Creates a new session in a bastion. A bastion session lets authorized
users connect to a target resource for a predetermined amount of time.
The Bastion service recognizes two types of sessions, managed SSH
sessions and SSH port forwarding sessions. Managed SSH sessions
require that the target resource has an OpenSSH server and the Oracle
Cloud Agent both running.


Usage
=====

   oci bastion session create-port-forwarding [OPTIONS]


Required Parameters
===================

--bastion-id [text]

The unique identifier (OCID) of the bastion on which to create this
session.


Optional Parameters
===================

--display-name [text]

The name of the session.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--key-type [text]

The type of the key used to connect to the session. PUB is a standard
public key in OpenSSH format.

Accepted values are:

   PUB

--max-wait-seconds [integer]

The maximum time to wait for the work request to reach the state
defined by "--wait-for-state". Defaults to 1200 seconds.

--session-ttl [text]

TTL of the session in seconds.

--ssh-public-key-file [filename]

A file containing ssh public key content for ssh connection.

--target-port [text]

Target resource port to use.

--target-private-ip [text]

Target resource private ip address.

--target-resource-details-target-resource-fqdn [text]

The Fully Qualified Domain Name of the target resource that the
session connects to.

--target-resource-id [text]

The OCID of the target resource to connect to.

--wait-for-state [text]

This operation asynchronously creates, modifies or deletes a resource
and uses a work request to track the progress of the operation.
Specify this option to perform the action and then wait until the work
request reaches a certain state. Multiple states can be specified,
returning on the first state. For example, "--wait-for-state"
SUCCEEDED "--wait-for-state" FAILED would return on whichever
lifecycle state is reached first. If timeout is reached, a return code
of 2 is returned. For any other error, a return code of 1 is returned.

Accepted values are:

   ACCEPTED, CANCELED, CANCELING, FAILED, IN_PROGRESS, SUCCEEDED

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the work request
has reached the state defined by "--wait-for-state". Defaults to 30
seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"
