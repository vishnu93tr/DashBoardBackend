"detect-entities"
*****************

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

**Deprecated**: This API will be retired Tuesday, 10 Oct 2023 00:00:00
GMT. We recommend you replace this API with the batch API,
BatchDetectLanguageEntities.

The DetectLanguageEntities API extracts entities in text records. For
each entity, its type and confidence score (between 0 and 1) is
returned.

Limitations: - A text may be up to 1000 characters long.


Usage
=====

   oci ai language detect-entities [OPTIONS]


Required Parameters
===================

--text [text]

Document text for detect entities.


Optional Parameters
===================

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--is-pii [boolean]

If this parameter is set to true, you only get PII (Personally
identifiable information) entities like PhoneNumber, Email, Person,
and so on. Default value is false.

--model-version [text]

Named Entity Recognition model versions. By default user will get
output from V2.1 implementation.

Accepted values are:

   V1_1, V2_1


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export text=<substitute-value-of-text> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/ai/language/detect-entities.html#cmdoption-text

       oci ai language detect-entities --text $text
