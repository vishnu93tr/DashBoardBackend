"create"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Creates an Autonomous Container Database in the specified Autonomous
Exadata Infrastructure.


Usage
=====

   oci db autonomous-container-database create [OPTIONS]


Required Parameters
===================

--display-name [text]

The display name for the Autonomous Container Database.

--patch-model [text]

Database Patch model preference.

Accepted values are:

   RELEASE_UPDATES, RELEASE_UPDATE_REVISIONS


Optional Parameters
===================

--autonomous-exadata-infrastructure-id [text]

**No longer used.** This parameter is no longer used for Autonomous
Database on dedicated Exadata infrasture. Specify a
*cloudAutonomousVmClusterId* instead. Using this parameter will cause
the operation to fail.

--autonomous-vm-cluster-id [text]

The OCID of the Autonomous VM Cluster.

--backup-config [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--cloud-autonomous-vm-cluster-id [text]

The OCID of the cloud Autonomous Exadata VM Cluster.

--compartment-id, -c [text]

The OCID of the compartment containing the Autonomous Container
Database.

--customer-contacts [complex type]

Customer Contacts. Setting this to an empty list removes all customer
contacts.

This option is a JSON list with items of type CustomerContact.  For
documentation on CustomerContact please see our API reference: https:
//docs.cloud.oracle.com/api/#/en/database/20160918/datatypes/Customer
Contact. This is a complex type whose value must be valid JSON. The
value can be provided as a string on the command line or passed in as
a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--database-software-image-id [text]

The Autonomous Database Software Image OCID.

--db-name [text]

The Database name for the Autonomous Container Database. The name must
be unique within the Cloud Autonomous VM Cluster, starting with an
alphabetic character, followed by 1 to 7 alphanumeric characters.

--db-split-threshold [integer]

The CPU value beyond which an Autonomous Database will be opened
across multiple nodes. The default value of this attribute is 16 for
OCPUs and 64 for ECPUs.

--db-unique-name [text]

**Deprecated.** The *DB_UNIQUE_NAME* value is set by Oracle Cloud
Infrastructure.  Do not specify a value for this parameter. Specifying
a value for this field will cause Terraform operations to fail.

--db-version [text]

The base version for the Autonomous Container Database.

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. For more information, see Resource Tags. This is a complex
type whose value must be valid JSON. The value can be provided as a
string on the command line or passed in as a file using the
file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--distribution-affinity [text]

Determines whether an Autonomous Database must be opened across a
minimum or maximum of nodes. By default, Minimum nodes is selected.

Accepted values are:

   MAXIMUM_DISTRIBUTION, MINIMUM_DISTRIBUTION

--fast-start-fail-over-lag-limit-in-seconds [integer]

The lag time for my preference based on data loss tolerance in
seconds.

--freeform-tags [complex type]

Free-form tags for this resource. Each tag is a simple key-value pair
with no predefined name, type, or namespace. For more information, see
Resource Tags.

Example:

   {"Department": "Finance"}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--is-automatic-failover-enabled [boolean]

Indicates whether Automatic Failover is enabled for Autonomous
Container Database Dataguard Association

--is-dst-file-update-enabled [boolean]

Indicates if an automatic DST Time Zone file update is enabled for the
Autonomous Container Database. If enabled along with Release Update,
patching will be done in a Non-Rolling manner.

--key-store-id [text]

The OCID of the key store of Oracle Vault.

--kms-key-id [text]

The OCID of the key container that is used as the master encryption
key in database transparent data encryption (TDE) operations.

--kms-key-version-id [text]

The OCID of the key container version that is used in database
transparent data encryption (TDE) operations KMS Key can have multiple
key versions. If none is specified, the current key version (latest)
of the Key Id is used for the operation. Autonomous Database
Serverless does not use key versions, hence is not applicable for
Autonomous Database Serverless instances.

--maintenance-window-details [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--max-wait-seconds [integer]

The maximum time to wait for the resource to reach the lifecycle state
defined by "--wait-for-state". Defaults to 1200 seconds.

--net-services-architecture [text]

Enabling SHARED server architecture enables a database server to allow
many client processes to share very few server processes, thereby
increasing the number of supported users.

Accepted values are:

   DEDICATED, SHARED

--peer-autonomous-container-database-backup-config [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--peer-autonomous-container-database-compartment-id [text]

The OCID of the compartment where the standby Autonomous Container
Database will be created.

--peer-autonomous-container-database-display-name [text]

The display name for the peer Autonomous Container Database.

--peer-autonomous-exadata-infrastructure-id [text]

*No longer used.* This parameter is no longer used for Autonomous
Database on dedicated Exadata infrasture. Specify a
*peerCloudAutonomousVmClusterId* instead. Using this parameter will
cause the operation to fail.

--peer-autonomous-vm-cluster-id [text]

The OCID of the peer Autonomous VM cluster for Autonomous Data Guard.
Required to enable Data Guard.

--peer-cloud-autonomous-vm-cluster-id [text]

The OCID of the peer cloud Autonomous Exadata VM Cluster.

--peer-db-unique-name [text]

**Deprecated.** The *DB_UNIQUE_NAME* of the peer Autonomous Container
Database in a Data Guard association is set by Oracle Cloud
Infrastructure.  Do not specify a value for this parameter. Specifying
a value for this field will cause Terraform operations to fail.

--protection-mode [text]

The protection mode of this Autonomous Data Guard association. For
more information, see Oracle Data Guard Protection Modes in the Oracle
Data Guard documentation.

Accepted values are:

   MAXIMUM_AVAILABILITY, MAXIMUM_PERFORMANCE

--service-level-agreement-type [text]

The service level agreement type of the Autonomous Container Database.
The default is STANDARD. For an autonomous dataguard Autonomous
Container Database, the specified Autonomous Exadata Infrastructure
must be associated with a remote Autonomous Exadata Infrastructure.

Accepted values are:

   AUTONOMOUS_DATAGUARD, STANDARD

--standby-maintenance-buffer-in-days [integer]

The scheduling detail for the quarterly maintenance window of the
standby Autonomous Container Database. This value represents the
number of days before scheduled maintenance of the primary database.

--vault-id [text]

The OCID of the Oracle Cloud Infrastructure vault. This parameter and
*secretId* are required for Customer Managed Keys.

--version-preference [text]

The next maintenance version preference.

Accepted values are:

   LATEST_RELEASE_UPDATE, NEXT_RELEASE_UPDATE

--vm-failover-reservation [integer]

The percentage of CPUs reserved across nodes to support node failover.
Allowed values are 0%, 25%, and 50%, with 50% being the default
option.

--wait-for-state [text]

This operation creates, modifies or deletes a resource that has a
defined lifecycle state. Specify this option to perform the action and
then wait until the resource reaches a given lifecycle state. Multiple
states can be specified, returning on the first state. For example, "
--wait-for-state" SUCCEEDED "--wait-for-state" FAILED would return on
whichever lifecycle state is reached first. If timeout is reached, a
return code of 2 is returned. For any other error, a return code of 1
is returned.

Accepted values are:

   AVAILABLE, BACKUP_IN_PROGRESS, ENABLING_AUTONOMOUS_DATA_GUARD, FAILED, MAINTENANCE_IN_PROGRESS, PROVISIONING, RESTARTING, RESTORE_FAILED, RESTORING, ROLE_CHANGE_IN_PROGRESS, TERMINATED, TERMINATING, UNAVAILABLE, UPDATING

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the resource has
reached the lifecycle state defined by "--wait-for-state". Defaults to
30 seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export display_name=<substitute-value-of-display_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/autonomous-container-database/create.html#cmdoption-display-name
       export patch_model=<substitute-value-of-patch_model> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/autonomous-container-database/create.html#cmdoption-patch-model

       oci db autonomous-container-database create --display-name $display_name --patch-model $patch_model
