"update"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Updates the specified VM cluster. Applies to Exadata Cloud@Customer
instances only.


Usage
=====

   oci db vm-cluster update [OPTIONS]


Required Parameters
===================

--vm-cluster-id [text]

The VM cluster OCID.


Optional Parameters
===================

--cloud-automation-update-details [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--cpu-core-count [integer]

The number of CPU cores to enable for the VM cluster.

--data-collection-options [complex type]

Available options are “isDiagnosticsEventsEnabled”,
“isHealthMonitoringEnabled” and “isIncidentLogsEnabled”. Provide a
value true or false to enable or disable a particular option.

Example:

   {"isDiagnosticsEventsEnabled":true, "isHealthMonitoringEnabled":true, "isIncidentLogsEnabled":true}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--data-storage-size-in-gbs [text]

The data disk group size to be allocated in GBs.

--data-storage-size-in-tbs [text]

The data disk group size to be allocated in TBs.

--db-node-storage-size-in-gbs [integer]

The local node storage to be allocated in GBs.

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. For more information, see Resource Tags. This is a complex
type whose value must be valid JSON. The value can be provided as a
string on the command line or passed in as a file using the
file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--file-system-configuration-details [complex type]

Details of the file system configuration of the VM cluster.

This option is a JSON list with items of type
FileSystemConfigurationDetail.  For documentation on
FileSystemConfigurationDetail please see our API reference: https://d
ocs.cloud.oracle.com/api/#/en/database/20160918/datatypes/FileSystemC
onfigurationDetail. This is a complex type whose value must be valid
JSON. The value can be provided as a string on the command line or
passed in as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--force

Perform update without prompting for confirmation.

--freeform-tags [complex type]

Free-form tags for this resource. Each tag is a simple key-value pair
with no predefined name, type, or namespace. For more information, see
Resource Tags.

Example:

   {"Department": "Finance"}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--gi-image-id [text]

The OCID (/Content/General/Concepts/identifiers.htm) of the grid
infrastructure software image. This is a database software image of
type *GRID_IMAGE*.

--if-match [text]

For optimistic concurrency control. In the PUT or DELETE call for a
resource, set the *if-match* parameter to the value of the etag from a
previous GET or POST response for that resource.  The resource will be
updated or deleted only if the etag you provide matches the resource’s
current etag value.

--license-model [text]

The Oracle license model that applies to the VM cluster. The default
is BRING_YOUR_OWN_LICENSE.

Accepted values are:

   BRING_YOUR_OWN_LICENSE, LICENSE_INCLUDED

--max-wait-seconds [integer]

The maximum time to wait for the resource to reach the lifecycle state
defined by "--wait-for-state". Defaults to 1200 seconds.

--memory-size-in-gbs [integer]

The memory to be allocated in GBs.

--ocpu-count [float]

The number of OCPU cores to enable for the VM cluster. Only 1 decimal
place is allowed for the fractional part.

--patch-action [text]

The action to perform on the patch.

--patch-id [text]

The OCID of the patch.

--ssh-public-keys [complex type]

The public key portion of one or more key pairs used for SSH access to
the VM cluster. This is a complex type whose value must be valid JSON.
The value can be provided as a string on the command line or passed in
as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--update-action [text]

The action to perform on the update.

--update-id [text]

The OCID (/Content/General/Concepts/identifiers.htm) of the
maintenance update.

--wait-for-state [text]

This operation creates, modifies or deletes a resource that has a
defined lifecycle state. Specify this option to perform the action and
then wait until the resource reaches a given lifecycle state. Multiple
states can be specified, returning on the first state. For example, "
--wait-for-state" SUCCEEDED "--wait-for-state" FAILED would return on
whichever lifecycle state is reached first. If timeout is reached, a
return code of 2 is returned. For any other error, a return code of 1
is returned.

Accepted values are:

   AVAILABLE, FAILED, MAINTENANCE_IN_PROGRESS, PROVISIONING, TERMINATED, TERMINATING, UPDATING

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the resource has
reached the lifecycle state defined by "--wait-for-state". Defaults to
30 seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy and paste the following example into a JSON file, replacing the
example parameters with your own.

       oci db exadata-infrastructure create --generate-param-json-input dns-server > dns-server.json
       oci db exadata-infrastructure create --generate-param-json-input ntp-server > ntp-server.json

       oci db vm-cluster-network create --generate-param-json-input scans > scans.json
       oci db vm-cluster-network create --generate-param-json-input vm-networks > vm-networks.json

       oci db vm-cluster create --generate-param-json-input ssh-public-keys > ssh-public-keys.json

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export admin_network_cidr=<substitute-value-of-admin_network_cidr> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/exadata-infrastructure/create.html#cmdoption-admin-network-cidr
       export cloud_control_plane_server1=<substitute-value-of-cloud_control_plane_server1> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/exadata-infrastructure/create.html#cmdoption-cloud-control-plane-server1
       export cloud_control_plane_server2=<substitute-value-of-cloud_control_plane_server2> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/exadata-infrastructure/create.html#cmdoption-cloud-control-plane-server2
       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/vm-cluster-network/create.html#cmdoption-compartment-id
       export display_name=<substitute-value-of-display_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/vm-cluster-network/create.html#cmdoption-display-name
       export gateway=<substitute-value-of-gateway> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/exadata-infrastructure/create.html#cmdoption-gateway
       export infini_band_network_cidr=<substitute-value-of-infini_band_network_cidr> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/exadata-infrastructure/create.html#cmdoption-infini-band-network-cidr
       export netmask=<substitute-value-of-netmask> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/exadata-infrastructure/create.html#cmdoption-netmask
       export shape=<substitute-value-of-shape> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/exadata-infrastructure/create.html#cmdoption-shape
       export time_zone=<substitute-value-of-time_zone> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/exadata-infrastructure/create.html#cmdoption-time-zone
       export exadata_infrastructure_id=<substitute-value-of-exadata_infrastructure_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/vm-cluster-network/create.html#cmdoption-exadata-infrastructure-id
       export cpu_core_count=<substitute-value-of-cpu_core_count> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/vm-cluster/create.html#cmdoption-cpu-core-count
       export gi_version=<substitute-value-of-gi_version> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/db/vm-cluster/create.html#cmdoption-gi-version

       exadata_infrastructure_id=$(oci db exadata-infrastructure create --admin-network-cidr $admin_network_cidr --cloud-control-plane-server1 $cloud_control_plane_server1 --cloud-control-plane-server2 $cloud_control_plane_server2 --compartment-id $compartment_id --display-name $display_name --dns-server file://dns-server.json --gateway $gateway --infini-band-network-cidr $infini_band_network_cidr --netmask $netmask --ntp-server file://ntp-server.json --shape $shape --time-zone $time_zone --query data.id --raw-output)

       vm_cluster_network_id=$(oci db vm-cluster-network create --compartment-id $compartment_id --display-name $display_name --exadata-infrastructure-id $exadata_infrastructure_id --scans file://scans.json --vm-networks file://vm-networks.json --query data.id --raw-output)

       vm_cluster_id=$(oci db vm-cluster create --compartment-id $compartment_id --cpu-core-count $cpu_core_count --display-name $display_name --exadata-infrastructure-id $exadata_infrastructure_id --gi-version $gi_version --ssh-public-keys file://ssh-public-keys.json --vm-cluster-network-id $vm_cluster_network_id --query data.id --raw-output)

       oci db vm-cluster update --vm-cluster-id $vm_cluster_id
