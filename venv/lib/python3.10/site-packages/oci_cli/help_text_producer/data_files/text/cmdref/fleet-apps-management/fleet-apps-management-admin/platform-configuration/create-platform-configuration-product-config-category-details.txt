"create-platform-configuration-product-config-category-details"
***************************************************************

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Creates a new PlatformConfiguration.


Usage
=====

   oci fleet-apps-management fleet-apps-management-admin platform-configuration create-platform-configuration-product-config-category-details [OPTIONS]


Required Parameters
===================

--compartment-id, -c [text]

Tenancy OCID

--config-category-details-versions [complex type]

Versions associated with the PRODUCT . This is a complex type whose
value must be valid JSON. The value can be provided as a string on the
command line or passed in as a file using the file://path/to/file
syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.


Optional Parameters
===================

--config-category-details-compatible-products [complex type]

Products compatible with this Product. Provide products from the list
of other products you have created that are compatible with the
present one

This option is a JSON list with items of type
ConfigAssociationDetails.  For documentation on
ConfigAssociationDetails please see our API reference: https://docs.c
loud.oracle.com/api/#/en/fleetappsmanagementadmin/20230831/datatypes/
ConfigAssociationDetails. This is a complex type whose value must be
valid JSON. The value can be provided as a string on the command line
or passed in as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--config-category-details-components [complex type]

Various components of the Product. For example:The administration
server or node manager can be the components of the Oracle WebLogic
Application server. Forms server or concurrent manager can be the
components of the Oracle E-Business Suite. This is a complex type
whose value must be valid JSON. The value can be provided as a string
on the command line or passed in as a file using the
file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--config-category-details-credentials [complex type]

OCID for the Credential name to be associated with the Product. These
are useful for target discovery or lifecycle management activities,
for example, Oracle WebLogic admin credentials for Oracle WebLogic
Application server.

This option is a JSON list with items of type
ConfigAssociationDetails.  For documentation on
ConfigAssociationDetails please see our API reference: https://docs.c
loud.oracle.com/api/#/en/fleetappsmanagementadmin/20230831/datatypes/
ConfigAssociationDetails. This is a complex type whose value must be
valid JSON. The value can be provided as a string on the command line
or passed in as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--config-category-details-patch-types [complex type]

Patch Types associated with this Product.

This option is a JSON list with items of type
ConfigAssociationDetails.  For documentation on
ConfigAssociationDetails please see our API reference: https://docs.c
loud.oracle.com/api/#/en/fleetappsmanagementadmin/20230831/datatypes/
ConfigAssociationDetails. This is a complex type whose value must be
valid JSON. The value can be provided as a string on the command line
or passed in as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--description [text]

A user-friendly description. To provide some insight about the
resource. Avoid entering confidential information.

--display-name [text]

A user-friendly name. Does not have to be unique, and it’s changeable.
Avoid entering confidential information.

Example:

   My new resource

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--max-wait-seconds [integer]

The maximum time to wait for the resource to reach the lifecycle state
defined by "--wait-for-state". Defaults to 1200 seconds.

--wait-for-state [text]

This operation creates, modifies or deletes a resource that has a
defined lifecycle state. Specify this option to perform the action and
then wait until the resource reaches a given lifecycle state. Multiple
states can be specified, returning on the first state. For example, "
--wait-for-state" SUCCEEDED "--wait-for-state" FAILED would return on
whichever lifecycle state is reached first. If timeout is reached, a
return code of 2 is returned. For any other error, a return code of 1
is returned.

Accepted values are:

   ACTIVE, DELETED, DELETING, FAILED, UPDATING

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the resource has
reached the lifecycle state defined by "--wait-for-state". Defaults to
30 seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy and paste the following example into a JSON file, replacing the
example parameters with your own.

       oci fleet-apps-management fleet-apps-management-admin platform-configuration create-platform-configuration-product-config-category-details --generate-param-json-input config-category-details-versions > config-category-details-versions.json

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/fleet-apps-management/fleet-apps-management-admin/platform-configuration/create-platform-configuration-product-config-category-details.html#cmdoption-compartment-id

       oci fleet-apps-management fleet-apps-management-admin platform-configuration create-platform-configuration-product-config-category-details --compartment-id $compartment_id --config-category-details-versions file://config-category-details-versions.json
