"create"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Creates a new file system in the specified compartment and
availability domain. Instances can mount file systems in another
availability domain, but doing so might increase latency when compared
to mounting instances in the same availability domain.

After you create a file system, you can associate it with a mount
target. Instances can then mount the file system by connecting to the
mount target’s IP address. You can associate a file system with more
than one mount target at a time.

For information about access control and compartments, see Overview of
the IAM Service.

For information about Network Security Groups access control, see
Network Security Groups.

For information about availability domains, see Regions and
Availability Domains. To get a list of availability domains, use the
*ListAvailabilityDomains* operation in the Identity and Access
Management Service API.

All Oracle Cloud Infrastructure resources, including file systems, get
an Oracle-assigned, unique ID called an Oracle Cloud Identifier
(OCID). When you create a resource, you can find its OCID in the
response. You can also retrieve a resource’s OCID by using a List API
operation on that resource type or by viewing the resource in the
Console.


Usage
=====

   oci fs file-system create [OPTIONS]


Required Parameters
===================

--availability-domain [text]

The availability domain to create the file system in.

Example:

   Uocm:PHX-AD-1

--compartment-id, -c [text]

The OCID of the compartment to create the file system in.


Optional Parameters
===================

--are-quota-rules-enabled [boolean]

Specifies the enforcement of quota rules on the file system.

--clone-attach-status [text]

Specifies whether the clone file system is attached to its parent file
system. If the value is set to ‘DETACH’, then the file system will be
created, which is deep copied from the snapshot specified by
sourceSnapshotId, else will remain attached to its parent.

Accepted values are:

   ATTACH, DETACH

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. For more information, see Resource Tags. Example:
*{“Operations”: {“CostCenter”: “42”}}* This is a complex type whose
value must be valid JSON. The value can be provided as a string on the
command line or passed in as a file using the file://path/to/file
syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--display-name [text]

A user-friendly name. It does not have to be unique, and it is
changeable. Avoid entering confidential information.

Example:

   My file system

--filesystem-snapshot-policy-id [text]

The OCID of the associated file system snapshot policy, which controls
the frequency of snapshot creation and retention period of the taken
snapshots.

May be unset as a blank value.

--freeform-tags [complex type]

Free-form tags for this resource. Each tag is a simple key-value pair
with no predefined name, type, or namespace. For more information, see
Resource Tags. Example: *{“Department”: “Finance”}* This is a complex
type whose value must be valid JSON. The value can be provided as a
string on the command line or passed in as a file using the
file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--kms-key-id [text]

The OCID of the KMS key used to encrypt the encryption keys associated
with this file system.

--locks [complex type]

Locks associated with this resource.

This option is a JSON list with items of type ResourceLock.  For
documentation on ResourceLock please see our API reference: https://d
ocs.cloud.oracle.com/api/#/en/filestorage/20171215/datatypes/Resource
Lock. This is a complex type whose value must be valid JSON. The value
can be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--max-wait-seconds [integer]

The maximum time to wait for the resource to reach the lifecycle state
defined by "--wait-for-state". Defaults to 1200 seconds.

--source-snapshot-id [text]

The OCID of the snapshot used to create a cloned file system. See
Cloning a File System.

--wait-for-state [text]

This operation creates, modifies or deletes a resource that has a
defined lifecycle state. Specify this option to perform the action and
then wait until the resource reaches a given lifecycle state. Multiple
states can be specified, returning on the first state. For example, "
--wait-for-state" SUCCEEDED "--wait-for-state" FAILED would return on
whichever lifecycle state is reached first. If timeout is reached, a
return code of 2 is returned. For any other error, a return code of 1
is returned.

Accepted values are:

   ACTIVE, CREATING, DELETED, DELETING, FAILED, UPDATING

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the resource has
reached the lifecycle state defined by "--wait-for-state". Defaults to
30 seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export availability_domain=<substitute-value-of-availability_domain> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/fs/file-system/create.html#cmdoption-availability-domain
       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/fs/file-system/create.html#cmdoption-compartment-id

       oci fs file-system create --availability-domain $availability_domain --compartment-id $compartment_id
