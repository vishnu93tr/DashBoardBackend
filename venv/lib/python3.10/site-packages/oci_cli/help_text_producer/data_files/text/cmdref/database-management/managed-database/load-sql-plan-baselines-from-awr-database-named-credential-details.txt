"load-sql-plan-baselines-from-awr-database-named-credential-details"
********************************************************************

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Loads plans from Automatic Workload Repository (AWR) snapshots. You
must specify the beginning and ending of the snapshot range.
Optionally, you can apply a filter to load only plans that meet
specified criteria. By default, the optimizer uses the loaded plans
the next time that the database executes the SQL statements.


Usage
=====

   oci database-management managed-database load-sql-plan-baselines-from-awr-database-named-credential-details [OPTIONS]


Required Parameters
===================

--begin-snapshot [integer]

The begin snapshot.

--database-credential-named-credential-id [text]

The OCID of the named credential where the database password metadata
is stored.

--end-snapshot [integer]

The end snapshot.

--job-name [text]

The name of the database job used for loading SQL plan baselines.

--managed-database-id [text]

The OCID of the Managed Database.


Optional Parameters
===================

--credentials [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--is-enabled [boolean]

Indicates whether the loaded plans are enabled (*true*) or not
(*false*). By default, they are enabled.

--is-fixed [boolean]

Indicates whether the plans are loaded as fixed plans (*true*) or non-
fixed plans (*false*). By default, they are loaded as non-fixed plans.

--job-description [text]

The description of the job.

--sql-text-filter [text]

A filter applied to AWR to select only qualifying plans to be loaded.
By default all plans in AWR are selected. The filter can take the form
of any *WHERE* clause predicate that can be specified against the
column *DBA_HIST_SQLTEXT.SQL_TEXT*. An example is *sql_text like
‘SELECT %’*.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export begin_snapshot=<substitute-value-of-begin_snapshot> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/database-management/managed-database/load-sql-plan-baselines-from-awr-database-named-credential-details.html#cmdoption-begin-snapshot
       export database_credential_named_credential_id=<substitute-value-of-database_credential_named_credential_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/database-management/managed-database/load-sql-plan-baselines-from-awr-database-named-credential-details.html#cmdoption-database-credential-named-credential-id
       export end_snapshot=<substitute-value-of-end_snapshot> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/database-management/managed-database/load-sql-plan-baselines-from-awr-database-named-credential-details.html#cmdoption-end-snapshot
       export job_name=<substitute-value-of-job_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/database-management/managed-database/load-sql-plan-baselines-from-awr-database-named-credential-details.html#cmdoption-job-name
       export managed_database_id=<substitute-value-of-managed_database_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/database-management/managed-database/load-sql-plan-baselines-from-awr-database-named-credential-details.html#cmdoption-managed-database-id

       oci database-management managed-database load-sql-plan-baselines-from-awr-database-named-credential-details --begin-snapshot $begin_snapshot --database-credential-named-credential-id $database_credential_named_credential_id --end-snapshot $end_snapshot --job-name $job_name --managed-database-id $managed_database_id
