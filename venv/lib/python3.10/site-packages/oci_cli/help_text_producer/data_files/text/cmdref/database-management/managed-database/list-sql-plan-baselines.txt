"list-sql-plan-baselines"
*************************

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Lists the SQL plan baselines for the specified Managed Database.


Usage
=====

   oci database-management managed-database list-sql-plan-baselines [OPTIONS]


Required Parameters
===================

--managed-database-id [text]

The OCID of the Managed Database.


Optional Parameters
===================

--all

Fetches all pages of results. If you provide this option, then you
cannot provide the "--limit" option.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--is-accepted [boolean]

A filter to return only SQL plan baselines that are either accepted or
not accepted. By default, all SQL plan baselines are returned.

--is-adaptive [boolean]

A filter to return only SQL plan baselines that are either adaptive or
not adaptive. By default, all SQL plan baselines are returned.

--is-auto-purged [boolean]

A filter to return only SQL plan baselines that are either auto-purged
or not auto-purged. By default, all SQL plan baselines are returned.

--is-enabled [boolean]

A filter to return only SQL plan baselines that are either enabled or
not enabled. By default, all SQL plan baselines are returned.

--is-fixed [boolean]

A filter to return only SQL plan baselines that are either fixed or
not fixed. By default, all SQL plan baselines are returned.

--is-never-executed [boolean]

A filter to return only SQL plan baselines that are not executed till
now. By default, all SQL plan baselines are returned.

--is-reproduced [boolean]

A filter to return only SQL plan baselines that were either reproduced
or not reproduced by the optimizer. By default, all SQL plan baselines
are returned.

--limit [integer]

The maximum number of records returned in the paginated response.

--opc-named-credential-id [text]

The OCID of the Named Credential.

--origin [text]

A filter to return all the SQL plan baselines that match the origin.

Accepted values are:

   ADDM_SQLTUNE, AUTO_CAPTURE, AUTO_SQLTUNE, EVOLVE_AUTO_INDEX_LOAD, EVOLVE_CREATE_FROM_ADAPTIVE, EVOLVE_LOAD_FROM_AWR, EVOLVE_LOAD_FROM_CURSOR_CACHE, EVOLVE_LOAD_FROM_STS, MANUAL_LOAD, MANUAL_LOAD_FROM_AWR, MANUAL_LOAD_FROM_CURSOR_CACHE, MANUAL_LOAD_FROM_STS, MANUAL_SQLTUNE, STORED_OUTLINE, UNKNOWN

--page [text]

The page token representing the page from where the next set of
paginated results are retrieved. This is usually retrieved from a
previous list call.

--page-size [integer]

When fetching results, the number of results to fetch per call. Only
valid when used with "--all" or "--limit", and ignored otherwise.

--plan-name [text]

A filter to return only SQL plan baselines that match the plan name.

--sort-by [text]

The option to sort the SQL plan baseline summary data.

Accepted values are:

   timeCreated, timeLastExecuted, timeLastModified

--sort-order [text]

The option to sort information in ascending (‘ASC’) or descending
(‘DESC’) order. Descending order is the default order.

Accepted values are:

   ASC, DESC

--sql-handle [text]

A filter to return all the SQL plan baselines for the specified SQL
handle.

--sql-text [text]

A filter to return all the SQL plan baselines that match the SQL text.
By default, the search is case insensitive. To run an exact or case-
sensitive search, double-quote the search string. You may also use the
‘%’ symbol as a wildcard.

--time-last-executed-greater-than [datetime]

A filter to return only SQL plan baselines whose last execution time
is after the specified value. By default, all SQL plan baselines are
returned.

   The following datetime formats are supported:


UTC with microseconds
---------------------

   Format: YYYY-MM-DDTHH:mm:ss.ssssssTZD
   Example: 2017-09-15T20:30:00.123456Z

   UTC with milliseconds
   ***********************
   .. code::

       Format: YYYY-MM-DDTHH:mm:ss.sssTZD
       Example: 2017-09-15T20:30:00.123Z

   UTC without milliseconds
   **************************
   .. code::

       Format: YYYY-MM-DDTHH:mm:ssTZD
       Example: 2017-09-15T20:30:00Z

   UTC with minute precision
   **************************
   .. code::

       Format: YYYY-MM-DDTHH:mmTZD
       Example: 2017-09-15T20:30Z


Timezone with microseconds
--------------------------

   Format: YYYY-MM-DDTHH:mm:ssTZD
   Example: 2017-09-15T12:30:00.456789-08:00, 2017-09-15T12:30:00.456789-0800

   Timezone with milliseconds
   ***************************
   .. code::

       Format: YYYY-MM-DDTHH:mm:ssTZD
       Example: 2017-09-15T12:30:00.456-08:00, 2017-09-15T12:30:00.456-0800

   Timezone without milliseconds
   *******************************
   .. code::

       Format: YYYY-MM-DDTHH:mm:ssTZD
       Example: 2017-09-15T12:30:00-08:00, 2017-09-15T12:30:00-0800

   Timezone with minute precision
   *******************************
   .. code::

       Format: YYYY-MM-DDTHH:mmTZD
       Example: 2017-09-15T12:30-08:00, 2017-09-15T12:30-0800

   Short date and time
   ********************
   The timezone for this date and time will be taken as UTC (Needs to be surrounded by single or double quotes)

   .. code::

       Format: 'YYYY-MM-DD HH:mm' or "YYYY-MM-DD HH:mm"
       Example: '2017-09-15 17:25'

   Date Only
   **********
   This date will be taken as midnight UTC of that day

   .. code::

       Format: YYYY-MM-DD
       Example: 2017-09-15

   Epoch seconds
   **************
   .. code::

       Example: 1412195400

--time-last-executed-less-than [datetime]

A filter to return only SQL plan baselines whose last execution time
is before the specified value. By default, all SQL plan baselines are
returned.

   The following datetime formats are supported:


UTC with microseconds
---------------------

   Format: YYYY-MM-DDTHH:mm:ss.ssssssTZD
   Example: 2017-09-15T20:30:00.123456Z

   UTC with milliseconds
   ***********************
   .. code::

       Format: YYYY-MM-DDTHH:mm:ss.sssTZD
       Example: 2017-09-15T20:30:00.123Z

   UTC without milliseconds
   **************************
   .. code::

       Format: YYYY-MM-DDTHH:mm:ssTZD
       Example: 2017-09-15T20:30:00Z

   UTC with minute precision
   **************************
   .. code::

       Format: YYYY-MM-DDTHH:mmTZD
       Example: 2017-09-15T20:30Z


Timezone with microseconds
--------------------------

   Format: YYYY-MM-DDTHH:mm:ssTZD
   Example: 2017-09-15T12:30:00.456789-08:00, 2017-09-15T12:30:00.456789-0800

   Timezone with milliseconds
   ***************************
   .. code::

       Format: YYYY-MM-DDTHH:mm:ssTZD
       Example: 2017-09-15T12:30:00.456-08:00, 2017-09-15T12:30:00.456-0800

   Timezone without milliseconds
   *******************************
   .. code::

       Format: YYYY-MM-DDTHH:mm:ssTZD
       Example: 2017-09-15T12:30:00-08:00, 2017-09-15T12:30:00-0800

   Timezone with minute precision
   *******************************
   .. code::

       Format: YYYY-MM-DDTHH:mmTZD
       Example: 2017-09-15T12:30-08:00, 2017-09-15T12:30-0800

   Short date and time
   ********************
   The timezone for this date and time will be taken as UTC (Needs to be surrounded by single or double quotes)

   .. code::

       Format: 'YYYY-MM-DD HH:mm' or "YYYY-MM-DD HH:mm"
       Example: '2017-09-15 17:25'

   Date Only
   **********
   This date will be taken as midnight UTC of that day

   .. code::

       Format: YYYY-MM-DD
       Example: 2017-09-15

   Epoch seconds
   **************
   .. code::

       Example: 1412195400


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export managed_database_id=<substitute-value-of-managed_database_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/database-management/managed-database/list-sql-plan-baselines.html#cmdoption-managed-database-id

       oci database-management managed-database list-sql-plan-baselines --managed-database-id $managed_database_id
