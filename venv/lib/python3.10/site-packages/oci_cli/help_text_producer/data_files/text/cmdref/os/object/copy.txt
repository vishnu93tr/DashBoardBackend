"copy"
******

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Creates a request to copy an object within a region or to another
region.

See Object Names for object naming requirements.


Usage
=====

   oci os object copy [OPTIONS]


Required Parameters
===================

--bucket-name, -bn [text]

The name of the bucket. Avoid entering confidential information.
Example: *my-new-bucket1*

--destination-bucket [text]

The destination bucket the object will be copied to.

--source-object-name [text]

The name of the object to be copied.


Optional Parameters
===================

--destination-namespace [text]

The destination namespace object will be copied to.

--destination-object-if-match-e-tag [text]

The entity tag (ETag) to match against that of the destination object
(an object intended to be overwritten). Used to confirm that the
destination object stored under a given name is the version of that
object storing a specified entity tag.

--destination-object-if-none-match-e-tag [text]

The entity tag (ETag) to avoid matching. The only valid value is ‘*’,
which indicates that the request should fail if the object already
exists in the destination bucket.

--destination-object-metadata [complex type]

Arbitrary string keys and values for the user-defined metadata for the
object. Keys must be in “opc-meta->>*<<” format. Avoid entering
confidential information. Metadata key-value pairs entered in this
field are assigned to the destination object. If you enter no metadata
values, the destination object will inherit any existing metadata
values associated with the source object. This is a complex type whose
value must be valid JSON. The value can be provided as a string on the
command line or passed in as a file using the file://path/to/file
syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--destination-object-name [text]

The destination name for the copy object.

--destination-object-storage-tier [text]

The storage tier that the object should be stored in. If not
specified, the object will be stored in the same storage tier as the
bucket.

Accepted values are:

   Archive, InfrequentAccess, Standard

--destination-region [text]

The destination region object will be copied to.

--encryption-key-file [filename]

A file containing the base64-encoded string of the AES-256 encryption
key associated with the object.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--max-wait-seconds [integer]

The maximum time to wait for the work request to reach the state
defined by "--wait-for-state". Defaults to 1200 seconds.

--namespace-name, --namespace, -ns [text]

The Object Storage namespace used for the request. If not provided,
this parameter will be obtained internally using a call to ‘oci os ns
get’

--opc-sse-kms-key-id [text]

The OCID of a master encryption key used to call the Key Management
service to generate a data encryption key or to encrypt or decrypt a
data encryption key.

--source-encryption-key-file [filename]

A file containing the base64-encoded string of the AES-256 encryption
key associated with the source object.

--source-object-if-match-e-tag [text]

The entity tag (ETag) to match against that of the source object. Used
to confirm that the source object with a given name is the version of
that object storing a specified ETag.

--source-version-id [text]

VersionId of the object to copy. If not provided then current version
is copied by default.

--wait-for-state [text]

This operation asynchronously creates, modifies or deletes a resource
and uses a work request to track the progress of the operation.
Specify this option to perform the action and then wait until the work
request reaches a certain state. Multiple states can be specified,
returning on the first state. For example, "--wait-for-state"
SUCCEEDED "--wait-for-state" FAILED would return on whichever
lifecycle state is reached first. If timeout is reached, a return code
of 2 is returned. For any other error, a return code of 1 is returned.

Accepted values are:

   ACCEPTED, CANCELED, CANCELING, COMPLETED, FAILED, IN_PROGRESS

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the work request
has reached the state defined by "--wait-for-state". Defaults to 30
seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export bucket_name=<substitute-value-of-bucket_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/os/object/copy.html#cmdoption-bucket-name
       export destination_bucket=<substitute-value-of-destination_bucket> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/os/object/copy.html#cmdoption-destination-bucket
       export source_object_name=<substitute-value-of-source_object_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/os/object/copy.html#cmdoption-source-object-name

       oci os object copy --bucket-name $bucket_name --destination-bucket $destination_bucket --source-object-name $source_object_name
