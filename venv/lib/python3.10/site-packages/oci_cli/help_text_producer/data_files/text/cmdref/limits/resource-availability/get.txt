"get"
*****

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

For a given compartmentId, resource limit name, and scope, returns the
following:   * The number of available resources associated with the
given limit.   * The usage in the selected compartment for the given
limit. If Subscription Id is provided, then usage for resource created
in that subscription will be returned Note that not all resource
limits support this API. If the value is not available, the API
returns a 404 response.


Usage
=====

   oci limits resource-availability get [OPTIONS]


Required Parameters
===================

--compartment-id, -c [text]

The OCID of the compartment for which data is being fetched.

--limit-name [text]

The limit name for which to fetch the data.

--service-name [text]

The service name of the target quota.


Optional Parameters
===================

--availability-domain [text]

This field is mandatory if the scopeType of the target resource limit
is AD. Otherwise, this field should be omitted. If the above
requirements are not met, the API returns a 400 - InvalidParameter
response.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--subscription-id [text]

The OCID of the subscription assigned to tenant


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/limits/resource-availability/get.html#cmdoption-compartment-id
       export limit_name=<substitute-value-of-limit_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/limits/resource-availability/get.html#cmdoption-limit-name
       export service_name=<substitute-value-of-service_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/limits/resource-availability/get.html#cmdoption-service-name

       oci limits resource-availability get --compartment-id $compartment_id --limit-name $limit_name --service-name $service_name
