"update"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Updates the specified virtual circuit. This can be called by either
the customer who owns the virtual circuit, or the provider (when
provisioning or de-provisioning the virtual circuit from their end).
The documentation for UpdateVirtualCircuitDetails indicates who can
update each property of the virtual circuit.

**Important:** If the virtual circuit is working and in the
PROVISIONED state, updating any of the network-related properties
(such as the DRG being used, the BGP ASN, and so on) will cause the
virtual circuit’s state to switch to PROVISIONING and the related BGP
session to go down. After Oracle re-provisions the virtual circuit,
its state will return to PROVISIONED. Make sure you confirm that the
associated BGP session is back up. For more information about the
various states and how to test connectivity, see FastConnect Overview.

To change the list of public IP prefixes for a public virtual circuit,
use BulkAddVirtualCircuitPublicPrefixes and
BulkDeleteVirtualCircuitPublicPrefixes. Updating the list of prefixes
does NOT cause the BGP session to go down. However, Oracle must verify
the customer’s ownership of each added prefix before traffic for that
prefix will flow across the virtual circuit.


Usage
=====

   oci network virtual-circuit update [OPTIONS]


Required Parameters
===================

--virtual-circuit-id [text]

The OCID of the virtual circuit.


Optional Parameters
===================

--bandwidth-shape-name [text]

The provisioned data rate of the connection. To get a list of the
available bandwidth levels (that is, shapes), see
ListFastConnectProviderVirtualCircuitBandwidthShapes. To be updated
only by the customer who owns the virtual circuit.

--bgp-admin-state [text]

Set to *ENABLED* (the default) to activate the BGP session of the
virtual circuit, set to *DISABLED* to deactivate the virtual circuit.

Accepted values are:

   DISABLED, ENABLED

--cross-connect-mappings [complex type]

An array of mappings, each containing properties for a cross-connect
or cross-connect group associated with this virtual circuit.

The customer and provider can update different properties in the
mapping depending on the situation. See the description of the
CrossConnectMapping.

This option is a JSON list with items of type CrossConnectMapping.
For documentation on CrossConnectMapping please see our API reference:
https://docs.cloud.oracle.com/api/#/en/iaas/20160918/datatypes/CrossC
onnectMapping. This is a complex type whose value must be valid JSON.
The value can be provided as a string on the command line or passed in
as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--customer-asn [integer]

The BGP ASN of the network at the other end of the BGP session from
Oracle.

If the BGP session is from the customer’s edge router to Oracle, the
required value is the customer’s ASN, and it can be updated only by
the customer.

If the BGP session is from the provider’s edge router to Oracle, the
required value is the provider’s ASN, and it can be updated only by
the provider.

Can be a 2-byte or 4-byte ASN. Uses “asplain” format.

--customer-bgp-asn [integer]

Deprecated. Instead use *customerAsn*. If you specify values for both,
the request will be rejected.

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. For more information, see Resource Tags.

Example:

   {"Operations": {"CostCenter": "42"}}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--display-name [text]

A user-friendly name. Does not have to be unique, and it’s changeable.
Avoid entering confidential information.

--force

Perform update without prompting for confirmation.

--freeform-tags [complex type]

Free-form tags for this resource. Each tag is a simple key-value pair
with no predefined name, type, or namespace. For more information, see
Resource Tags.

Example:

   {"Department": "Finance"}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--gateway-id [text]

The OCID of the dynamic routing gateway (DRG) that this private
virtual circuit uses.

To be updated only by the customer who owns the virtual circuit.

--if-match [text]

For optimistic concurrency control. In the PUT or DELETE call for a
resource, set the *if-match* parameter to the value of the etag from a
previous GET or POST response for that resource. The resource will be
updated or deleted only if the etag you provide matches the resource’s
current etag value.

--ip-mtu [text]

The layer 3 IP MTU to use on this virtual circuit.

Accepted values are:

   MTU_1500, MTU_9000

--is-bfd-enabled [boolean]

Set to *true* to enable BFD for IPv4 BGP peering, or set to *false* to
disable BFD. If this is not set, the default is *false*.

--is-transport-mode [boolean]

Set to *true* for the virtual circuit to carry only encrypted traffic,
or set to *false* for the virtual circuit to carry unencrypted
traffic. If this is not set, the default is *false*.

--max-wait-seconds [integer]

The maximum time to wait for the resource to reach the lifecycle state
defined by "--wait-for-state". Defaults to 1200 seconds.

--provider-service-key-name [text]

The service key name offered by the provider (if the customer is
connecting via a provider).

--provider-state [text]

The provider’s state in relation to this virtual circuit. Relevant
only if the customer is using FastConnect via a provider. ACTIVE means
the provider has provisioned the virtual circuit from their end.
INACTIVE means the provider has not yet provisioned the virtual
circuit, or has de-provisioned it.

To be updated only by the provider.

Accepted values are:

   ACTIVE, INACTIVE

--reference-comment [text]

Provider-supplied reference information about this virtual circuit.
Relevant only if the customer is using FastConnect via a provider.

To be updated only by the provider.

--routing-policy [text]

The routing policy sets how routing information about the Oracle cloud
is shared over a public virtual circuit. Policies available are:
*ORACLE_SERVICE_NETWORK*, *REGIONAL*, *MARKET_LEVEL*, and *GLOBAL*.
See Route Filtering for details. By default, routing information is
shared for all routes in the same market.

Accepted values are:

   GLOBAL, MARKET_LEVEL, ORACLE_SERVICE_NETWORK, REGIONAL

--wait-for-state [text]

This operation creates, modifies or deletes a resource that has a
defined lifecycle state. Specify this option to perform the action and
then wait until the resource reaches a given lifecycle state. Multiple
states can be specified, returning on the first state. For example, "
--wait-for-state" SUCCEEDED "--wait-for-state" FAILED would return on
whichever lifecycle state is reached first. If timeout is reached, a
return code of 2 is returned. For any other error, a return code of 1
is returned.

Accepted values are:

   FAILED, INACTIVE, PENDING_PROVIDER, PROVISIONED, PROVISIONING, TERMINATED, TERMINATING, VERIFYING

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the resource has
reached the lifecycle state defined by "--wait-for-state". Defaults to
30 seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/network/virtual-circuit/create.html#cmdoption-compartment-id
       export type=<substitute-value-of-type> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/network/virtual-circuit/create.html#cmdoption-type

       virtual_circuit_id=$(oci network virtual-circuit create --compartment-id $compartment_id --type $type --query data.id --raw-output)

       oci network virtual-circuit update --virtual-circuit-id $virtual_circuit_id
