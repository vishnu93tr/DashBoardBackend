"upload"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Uploads an API signing key for the specified user.

Every user has permission to use this operation to upload a key for
*their own user ID*. An administrator in your organization does not
need to write a policy to give users this ability. To compare,
administrators who have permission to the tenancy can use this
operation to upload a key for any user, including themselves.

**Important:** Even though you have permission to upload an API key,
you might not yet have permission to do much else. If you try calling
an operation unrelated to your own credential management (e.g.,
*ListUsers*, *LaunchInstance*) and receive an “unauthorized” error,
check with an administrator to confirm which IAM Service group(s)
you’re in and what access you have. Also confirm you’re working in the
correct compartment.

After you send your request, the new object’s *lifecycleState* will
temporarily be CREATING. Before using the object, first make sure its
*lifecycleState* has changed to ACTIVE.


Usage
=====

   oci iam user api-key upload [OPTIONS]


Required Parameters
===================

--user-id [text]

The OCID of the user.


Optional Parameters
===================

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--key [text]

The public key.  Must be an RSA key in PEM format. Either this option
or –key-file must be specified

--key-file [filename]

A file containing the public key.  Must be an RSA key in PEM format.
Either this option or –key must be specified


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export description=<substitute-value-of-description> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/iam/user/create.html#cmdoption-description
       export name=<substitute-value-of-name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/iam/user/create.html#cmdoption-name

       user_id=$(oci iam user create --description $description --name $name --query data.id --raw-output)

       oci iam user api-key upload --user-id $user_id
